
RealTimeDAQ.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001914  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  00001914  00001988  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  000019b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a0c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  00001a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000040b6  00000000  00000000  00001c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001553  00000000  00000000  00005cfe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000013df  00000000  00000000  00007251  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000518  00000000  00000000  00008630  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000b3d  00000000  00000000  00008b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001c88  00000000  00000000  00009685  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b0  00000000  00000000  0000b30d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
       2:	65 c0       	rjmp	.+202    	; 0xce <__bad_interrupt>
       4:	64 c0       	rjmp	.+200    	; 0xce <__bad_interrupt>
       6:	63 c0       	rjmp	.+198    	; 0xce <__bad_interrupt>
       8:	62 c0       	rjmp	.+196    	; 0xce <__bad_interrupt>
       a:	61 c0       	rjmp	.+194    	; 0xce <__bad_interrupt>
       c:	60 c0       	rjmp	.+192    	; 0xce <__bad_interrupt>
       e:	5f c0       	rjmp	.+190    	; 0xce <__bad_interrupt>
      10:	5e c0       	rjmp	.+188    	; 0xce <__bad_interrupt>
      12:	5d c0       	rjmp	.+186    	; 0xce <__bad_interrupt>
      14:	5c c0       	rjmp	.+184    	; 0xce <__bad_interrupt>
      16:	5b c0       	rjmp	.+182    	; 0xce <__bad_interrupt>
      18:	5a c0       	rjmp	.+180    	; 0xce <__bad_interrupt>
      1a:	59 c0       	rjmp	.+178    	; 0xce <__bad_interrupt>
      1c:	58 c0       	rjmp	.+176    	; 0xce <__bad_interrupt>
      1e:	57 c0       	rjmp	.+174    	; 0xce <__bad_interrupt>
      20:	56 c0       	rjmp	.+172    	; 0xce <__bad_interrupt>
      22:	55 c0       	rjmp	.+170    	; 0xce <__bad_interrupt>
      24:	54 c0       	rjmp	.+168    	; 0xce <__bad_interrupt>
      26:	07 63       	ori	r16, 0x37	; 55
      28:	42 36       	cpi	r20, 0x62	; 98
      2a:	b7 9b       	sbis	0x16, 7	; 22
      2c:	d8 a7       	std	Y+40, r29	; 0x28
      2e:	1a 39       	cpi	r17, 0x9A	; 154
      30:	68 56       	subi	r22, 0x68	; 104
      32:	18 ae       	std	Y+56, r1	; 0x38
      34:	ba ab       	std	Y+50, r27	; 0x32
      36:	55 8c       	ldd	r5, Z+29	; 0x1d
      38:	1d 3c       	cpi	r17, 0xCD	; 205
      3a:	b7 cc       	rjmp	.-1682   	; 0xfffff9aa <__eeprom_end+0xff7ef9aa>
      3c:	57 63       	ori	r21, 0x37	; 55
      3e:	bd 6d       	ori	r27, 0xDD	; 221
      40:	ed fd       	.word	0xfded	; ????
      42:	75 3e       	cpi	r23, 0xE5	; 229
      44:	f6 17       	cp	r31, r22
      46:	72 31       	cpi	r23, 0x12	; 18
      48:	bf 00       	.word	0x00bf	; ????
      4a:	00 00       	nop
      4c:	80 3f       	cpi	r24, 0xF0	; 240
      4e:	08 00       	.word	0x0008	; ????
      50:	00 00       	nop
      52:	be 92       	st	-X, r11
      54:	24 49       	sbci	r18, 0x94	; 148
      56:	12 3e       	cpi	r17, 0xE2	; 226
      58:	ab aa       	std	Y+51, r10	; 0x33
      5a:	aa 2a       	or	r10, r26
      5c:	be cd       	rjmp	.-1156   	; 0xfffffbda <__eeprom_end+0xff7efbda>
      5e:	cc cc       	rjmp	.-1640   	; 0xfffff9f8 <__eeprom_end+0xff7ef9f8>
      60:	4c 3e       	cpi	r20, 0xEC	; 236
      62:	00 00       	nop
      64:	00 80       	ld	r0, Z
      66:	be ab       	std	Y+54, r27	; 0x36
      68:	aa aa       	std	Y+50, r10	; 0x32
      6a:	aa 3e       	cpi	r26, 0xEA	; 234
      6c:	00 00       	nop
      6e:	00 00       	nop
      70:	bf 00       	.word	0x00bf	; ????
      72:	00 00       	nop
      74:	80 3f       	cpi	r24, 0xF0	; 240
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	00 08       	sbc	r0, r0
      7c:	41 78       	andi	r20, 0x81	; 129
      7e:	d3 bb       	out	0x13, r29	; 19
      80:	43 87       	std	Z+11, r20	; 0x0b
      82:	d1 13       	cpse	r29, r17
      84:	3d 19       	sub	r19, r13
      86:	0e 3c       	cpi	r16, 0xCE	; 206
      88:	c3 bd       	out	0x23, r28	; 35
      8a:	42 82       	std	Z+2, r4	; 0x02
      8c:	ad 2b       	or	r26, r29
      8e:	3e 68       	ori	r19, 0x8E	; 142
      90:	ec 82       	std	Y+4, r14	; 0x04
      92:	76 be       	out	0x36, r7	; 54
      94:	d9 8f       	std	Y+25, r29	; 0x19
      96:	e1 a9       	ldd	r30, Z+49	; 0x31
      98:	3e 4c       	sbci	r19, 0xCE	; 206
      9a:	80 ef       	ldi	r24, 0xF0	; 240
      9c:	ff be       	out	0x3f, r15	; 63
      9e:	01 c4       	rjmp	.+2050   	; 0x8a2 <_Z11WriteStringPc+0x1a>
      a0:	ff 7f       	andi	r31, 0xFF	; 255
      a2:	3f 00       	.word	0x003f	; ????
      a4:	00 00       	nop
	...

000000a8 <__ctors_end>:
      a8:	11 24       	eor	r1, r1
      aa:	1f be       	out	0x3f, r1	; 63
      ac:	cf e5       	ldi	r28, 0x5F	; 95
      ae:	d4 e0       	ldi	r29, 0x04	; 4
      b0:	de bf       	out	0x3e, r29	; 62
      b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
      b4:	10 e0       	ldi	r17, 0x00	; 0
      b6:	a0 e6       	ldi	r26, 0x60	; 96
      b8:	b0 e0       	ldi	r27, 0x00	; 0
      ba:	e4 e1       	ldi	r30, 0x14	; 20
      bc:	f9 e1       	ldi	r31, 0x19	; 25
      be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
      c0:	05 90       	lpm	r0, Z+
      c2:	0d 92       	st	X+, r0
      c4:	a8 38       	cpi	r26, 0x88	; 136
      c6:	b1 07       	cpc	r27, r17
      c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>
      ca:	f3 d3       	rcall	.+2022   	; 0x8b2 <main>
      cc:	21 cc       	rjmp	.-1982   	; 0xfffff910 <__eeprom_end+0xff7ef910>

000000ce <__bad_interrupt>:
      ce:	98 cf       	rjmp	.-208    	; 0x0 <__vectors>

000000d0 <_ZN12A2DConverter9ReadValueE13ADC_PRESCALAR12ADC_CHANNELS>:

uint16 A2DConverter::ReadValue(ADC_PRESCALAR prescalar, ADC_CHANNELS channel)
{
	uint16 valueRead;
	
	ADMUX = 0x00;
      d0:	17 b8       	out	0x07, r1	; 7
	ADCSRA = 0x00;
      d2:	16 b8       	out	0x06, r1	; 6
	
	ADMUX |= (1 << REFS0)|channel;
      d4:	97 b1       	in	r25, 0x07	; 7
      d6:	69 2b       	or	r22, r25
      d8:	60 64       	ori	r22, 0x40	; 64
      da:	67 b9       	out	0x07, r22	; 7
	ADCSRA |= (1 << ADEN)|(1 << ADSC)|prescalar;
      dc:	96 b1       	in	r25, 0x06	; 6
      de:	89 2b       	or	r24, r25
      e0:	80 6c       	ori	r24, 0xC0	; 192
      e2:	86 b9       	out	0x06, r24	; 6
	while(!(ADCSRA & (1 << ADIF)));	
      e4:	34 9b       	sbis	0x06, 4	; 6
      e6:	fe cf       	rjmp	.-4      	; 0xe4 <_ZN12A2DConverter9ReadValueE13ADC_PRESCALAR12ADC_CHANNELS+0x14>
	valueRead = (ADCL | (ADCH<<8));
      e8:	24 b1       	in	r18, 0x04	; 4
      ea:	85 b1       	in	r24, 0x05	; 5
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	98 2f       	mov	r25, r24
      f0:	88 27       	eor	r24, r24
	ADCSRA = 0x00;
      f2:	16 b8       	out	0x06, r1	; 6
	return valueRead;
}
      f4:	82 2b       	or	r24, r18
      f6:	08 95       	ret

000000f8 <_ZN5AHT10C1EP3I2C>:

#include "AHT10.h"

AHT10::AHT10(I2C* i2c)
{
	this->i2c = i2c;
      f8:	fc 01       	movw	r30, r24
      fa:	71 83       	std	Z+1, r23	; 0x01
      fc:	60 83       	st	Z, r22
      fe:	08 95       	ret

00000100 <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_>:
}


void AHT10::ReadTemperatureAndHumidity(float* temperature, float* humidity)
{
     100:	9f 92       	push	r9
     102:	af 92       	push	r10
     104:	bf 92       	push	r11
     106:	cf 92       	push	r12
     108:	df 92       	push	r13
     10a:	ef 92       	push	r14
     10c:	ff 92       	push	r15
     10e:	0f 93       	push	r16
     110:	1f 93       	push	r17
     112:	cf 93       	push	r28
     114:	df 93       	push	r29
     116:	ec 01       	movw	r28, r24
     118:	7b 01       	movw	r14, r22
     11a:	8a 01       	movw	r16, r20
	uint8 Data[6];
	
	i2c->Start();
     11c:	88 81       	ld	r24, Y
     11e:	99 81       	ldd	r25, Y+1	; 0x01
     120:	a2 d2       	rcall	.+1348   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x70);
     122:	60 e7       	ldi	r22, 0x70	; 112
     124:	88 81       	ld	r24, Y
     126:	99 81       	ldd	r25, Y+1	; 0x01
     128:	ff d2       	rcall	.+1534   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0xAC);
     12a:	6c ea       	ldi	r22, 0xAC	; 172
     12c:	88 81       	ld	r24, Y
     12e:	99 81       	ldd	r25, Y+1	; 0x01
     130:	fb d2       	rcall	.+1526   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x33);
     132:	63 e3       	ldi	r22, 0x33	; 51
     134:	88 81       	ld	r24, Y
     136:	99 81       	ldd	r25, Y+1	; 0x01
     138:	f7 d2       	rcall	.+1518   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x00);
     13a:	60 e0       	ldi	r22, 0x00	; 0
     13c:	88 81       	ld	r24, Y
     13e:	99 81       	ldd	r25, Y+1	; 0x01
     140:	f3 d2       	rcall	.+1510   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     142:	88 81       	ld	r24, Y
     144:	99 81       	ldd	r25, Y+1	; 0x01
     146:	a6 d2       	rcall	.+1356   	; 0x694 <_ZN3I2C4StopEv>

	i2c->Start();
     148:	88 81       	ld	r24, Y
     14a:	99 81       	ldd	r25, Y+1	; 0x01
     14c:	8c d2       	rcall	.+1304   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     14e:	61 e7       	ldi	r22, 0x71	; 113
     150:	88 81       	ld	r24, Y
     152:	99 81       	ldd	r25, Y+1	; 0x01
     154:	e9 d2       	rcall	.+1490   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x99);
     156:	69 e9       	ldi	r22, 0x99	; 153
     158:	88 81       	ld	r24, Y
     15a:	99 81       	ldd	r25, Y+1	; 0x01
     15c:	e5 d2       	rcall	.+1482   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendNACK();
     15e:	88 81       	ld	r24, Y
     160:	99 81       	ldd	r25, Y+1	; 0x01
     162:	ca d2       	rcall	.+1428   	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     164:	88 81       	ld	r24, Y
     166:	99 81       	ldd	r25, Y+1	; 0x01
     168:	95 d2       	rcall	.+1322   	; 0x694 <_ZN3I2C4StopEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     16a:	83 ec       	ldi	r24, 0xC3	; 195
     16c:	99 e0       	ldi	r25, 0x09	; 9
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0x6e>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0x74>
     174:	00 00       	nop
	
	_delay_ms(10);
	
	i2c->Start();
     176:	88 81       	ld	r24, Y
     178:	99 81       	ldd	r25, Y+1	; 0x01
     17a:	75 d2       	rcall	.+1258   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     17c:	61 e7       	ldi	r22, 0x71	; 113
     17e:	88 81       	ld	r24, Y
     180:	99 81       	ldd	r25, Y+1	; 0x01
     182:	d2 d2       	rcall	.+1444   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x99);
     184:	69 e9       	ldi	r22, 0x99	; 153
     186:	88 81       	ld	r24, Y
     188:	99 81       	ldd	r25, Y+1	; 0x01
     18a:	ce d2       	rcall	.+1436   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendNACK();
     18c:	88 81       	ld	r24, Y
     18e:	99 81       	ldd	r25, Y+1	; 0x01
     190:	b3 d2       	rcall	.+1382   	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     192:	88 81       	ld	r24, Y
     194:	99 81       	ldd	r25, Y+1	; 0x01
     196:	7e d2       	rcall	.+1276   	; 0x694 <_ZN3I2C4StopEv>
     198:	e3 ec       	ldi	r30, 0xC3	; 195
     19a:	f9 e0       	ldi	r31, 0x09	; 9
     19c:	31 97       	sbiw	r30, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0x9c>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0xa2>
     1a2:	00 00       	nop
	
	_delay_ms(10);
	
	i2c->Start();
     1a4:	88 81       	ld	r24, Y
     1a6:	99 81       	ldd	r25, Y+1	; 0x01
     1a8:	5e d2       	rcall	.+1212   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     1aa:	61 e7       	ldi	r22, 0x71	; 113
     1ac:	88 81       	ld	r24, Y
     1ae:	99 81       	ldd	r25, Y+1	; 0x01
     1b0:	bb d2       	rcall	.+1398   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x99);
     1b2:	69 e9       	ldi	r22, 0x99	; 153
     1b4:	88 81       	ld	r24, Y
     1b6:	99 81       	ldd	r25, Y+1	; 0x01
     1b8:	b7 d2       	rcall	.+1390   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendNACK();
     1ba:	88 81       	ld	r24, Y
     1bc:	99 81       	ldd	r25, Y+1	; 0x01
     1be:	9c d2       	rcall	.+1336   	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     1c0:	88 81       	ld	r24, Y
     1c2:	99 81       	ldd	r25, Y+1	; 0x01
     1c4:	67 d2       	rcall	.+1230   	; 0x694 <_ZN3I2C4StopEv>
     1c6:	83 ec       	ldi	r24, 0xC3	; 195
     1c8:	99 e0       	ldi	r25, 0x09	; 9
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	f1 f7       	brne	.-4      	; 0x1ca <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0xca>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0xd0>
     1d0:	00 00       	nop
	
	_delay_ms(10);
	
	i2c->Start();
     1d2:	88 81       	ld	r24, Y
     1d4:	99 81       	ldd	r25, Y+1	; 0x01
     1d6:	47 d2       	rcall	.+1166   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     1d8:	61 e7       	ldi	r22, 0x71	; 113
     1da:	88 81       	ld	r24, Y
     1dc:	99 81       	ldd	r25, Y+1	; 0x01
     1de:	a4 d2       	rcall	.+1352   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x99);
     1e0:	69 e9       	ldi	r22, 0x99	; 153
     1e2:	88 81       	ld	r24, Y
     1e4:	99 81       	ldd	r25, Y+1	; 0x01
     1e6:	a0 d2       	rcall	.+1344   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendNACK();
     1e8:	88 81       	ld	r24, Y
     1ea:	99 81       	ldd	r25, Y+1	; 0x01
     1ec:	85 d2       	rcall	.+1290   	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     1ee:	88 81       	ld	r24, Y
     1f0:	99 81       	ldd	r25, Y+1	; 0x01
     1f2:	50 d2       	rcall	.+1184   	; 0x694 <_ZN3I2C4StopEv>
     1f4:	e3 ec       	ldi	r30, 0xC3	; 195
     1f6:	f9 e0       	ldi	r31, 0x09	; 9
     1f8:	31 97       	sbiw	r30, 0x01	; 1
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0xf8>
     1fc:	00 c0       	rjmp	.+0      	; 0x1fe <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_+0xfe>
     1fe:	00 00       	nop
	
	_delay_ms(10);
	
	i2c->Start();
     200:	88 81       	ld	r24, Y
     202:	99 81       	ldd	r25, Y+1	; 0x01
     204:	30 d2       	rcall	.+1120   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     206:	61 e7       	ldi	r22, 0x71	; 113
     208:	88 81       	ld	r24, Y
     20a:	99 81       	ldd	r25, Y+1	; 0x01
     20c:	8d d2       	rcall	.+1306   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x99);
     20e:	69 e9       	ldi	r22, 0x99	; 153
     210:	88 81       	ld	r24, Y
     212:	99 81       	ldd	r25, Y+1	; 0x01
     214:	89 d2       	rcall	.+1298   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendNACK();
     216:	88 81       	ld	r24, Y
     218:	99 81       	ldd	r25, Y+1	; 0x01
     21a:	6e d2       	rcall	.+1244   	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     21c:	88 81       	ld	r24, Y
     21e:	99 81       	ldd	r25, Y+1	; 0x01
     220:	39 d2       	rcall	.+1138   	; 0x694 <_ZN3I2C4StopEv>
     222:	83 ec       	ldi	r24, 0xC3	; 195
     224:	99 e0       	ldi	r25, 0x09	; 9
     226:	01 97       	sbiw	r24, 0x01	; 1
     228:	f1 f7       	brne	.-4      	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
     22a:	00 c0       	rjmp	.+0      	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
     22c:	00 00       	nop
	
	_delay_ms(10);
	
	i2c->Start();
     22e:	88 81       	ld	r24, Y
     230:	99 81       	ldd	r25, Y+1	; 0x01
     232:	19 d2       	rcall	.+1074   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     234:	61 e7       	ldi	r22, 0x71	; 113
     236:	88 81       	ld	r24, Y
     238:	99 81       	ldd	r25, Y+1	; 0x01
     23a:	76 d2       	rcall	.+1260   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x19);
     23c:	69 e1       	ldi	r22, 0x19	; 25
     23e:	88 81       	ld	r24, Y
     240:	99 81       	ldd	r25, Y+1	; 0x01
     242:	72 d2       	rcall	.+1252   	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     244:	88 81       	ld	r24, Y
     246:	99 81       	ldd	r25, Y+1	; 0x01
     248:	25 d2       	rcall	.+1098   	; 0x694 <_ZN3I2C4StopEv>
	
	i2c->Start();
     24a:	88 81       	ld	r24, Y
     24c:	99 81       	ldd	r25, Y+1	; 0x01
     24e:	0b d2       	rcall	.+1046   	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x71);
     250:	61 e7       	ldi	r22, 0x71	; 113
     252:	88 81       	ld	r24, Y
     254:	99 81       	ldd	r25, Y+1	; 0x01
     256:	68 d2       	rcall	.+1232   	; 0x728 <_ZN3I2C8SendByteEh>
	Data[0] = i2c->ReadByte();
     258:	88 81       	ld	r24, Y
     25a:	99 81       	ldd	r25, Y+1	; 0x01
     25c:	c3 d2       	rcall	.+1414   	; 0x7e4 <_ZN3I2C8ReadByteEv>
	i2c->SendACK();
     25e:	88 81       	ld	r24, Y
     260:	99 81       	ldd	r25, Y+1	; 0x01
     262:	2f d2       	rcall	.+1118   	; 0x6c2 <_ZN3I2C7SendACKEv>
	Data[1] = i2c->ReadByte();
     264:	88 81       	ld	r24, Y
     266:	99 81       	ldd	r25, Y+1	; 0x01
     268:	bd d2       	rcall	.+1402   	; 0x7e4 <_ZN3I2C8ReadByteEv>
     26a:	d8 2e       	mov	r13, r24
	i2c->SendACK();
     26c:	88 81       	ld	r24, Y
     26e:	99 81       	ldd	r25, Y+1	; 0x01
     270:	28 d2       	rcall	.+1104   	; 0x6c2 <_ZN3I2C7SendACKEv>
	Data[2] = i2c->ReadByte();
     272:	88 81       	ld	r24, Y
     274:	99 81       	ldd	r25, Y+1	; 0x01
     276:	b6 d2       	rcall	.+1388   	; 0x7e4 <_ZN3I2C8ReadByteEv>
     278:	c8 2e       	mov	r12, r24
	i2c->SendACK();
     27a:	88 81       	ld	r24, Y
     27c:	99 81       	ldd	r25, Y+1	; 0x01
     27e:	21 d2       	rcall	.+1090   	; 0x6c2 <_ZN3I2C7SendACKEv>
	Data[3] = i2c->ReadByte();
     280:	88 81       	ld	r24, Y
     282:	99 81       	ldd	r25, Y+1	; 0x01
     284:	af d2       	rcall	.+1374   	; 0x7e4 <_ZN3I2C8ReadByteEv>
     286:	b8 2e       	mov	r11, r24
	i2c->SendACK();
     288:	88 81       	ld	r24, Y
     28a:	99 81       	ldd	r25, Y+1	; 0x01
     28c:	1a d2       	rcall	.+1076   	; 0x6c2 <_ZN3I2C7SendACKEv>
	Data[4] = i2c->ReadByte();
     28e:	88 81       	ld	r24, Y
     290:	99 81       	ldd	r25, Y+1	; 0x01
     292:	a8 d2       	rcall	.+1360   	; 0x7e4 <_ZN3I2C8ReadByteEv>
     294:	98 2e       	mov	r9, r24
	i2c->SendACK();
     296:	88 81       	ld	r24, Y
     298:	99 81       	ldd	r25, Y+1	; 0x01
     29a:	13 d2       	rcall	.+1062   	; 0x6c2 <_ZN3I2C7SendACKEv>
	Data[5] = i2c->ReadByte();
     29c:	88 81       	ld	r24, Y
     29e:	99 81       	ldd	r25, Y+1	; 0x01
     2a0:	a1 d2       	rcall	.+1346   	; 0x7e4 <_ZN3I2C8ReadByteEv>
     2a2:	a8 2e       	mov	r10, r24
	i2c->SendNACK();
     2a4:	88 81       	ld	r24, Y
     2a6:	99 81       	ldd	r25, Y+1	; 0x01
     2a8:	27 d2       	rcall	.+1102   	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     2aa:	88 81       	ld	r24, Y
     2ac:	99 81       	ldd	r25, Y+1	; 0x01
     2ae:	f2 d1       	rcall	.+996    	; 0x694 <_ZN3I2C4StopEv>
	
	uint32 rawTemperatureData = ((Data[3] & 0x0F) * 65536) + (Data[4] * 256) + Data[5];
     2b0:	6b 2d       	mov	r22, r11
     2b2:	6f 70       	andi	r22, 0x0F	; 15
     2b4:	86 2f       	mov	r24, r22
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	a0 e0       	ldi	r26, 0x00	; 0
     2ba:	b0 e0       	ldi	r27, 0x00	; 0
     2bc:	bc 01       	movw	r22, r24
     2be:	55 27       	eor	r21, r21
     2c0:	44 27       	eor	r20, r20
     2c2:	89 2d       	mov	r24, r9
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	98 2f       	mov	r25, r24
     2c8:	88 27       	eor	r24, r24
     2ca:	09 2e       	mov	r0, r25
     2cc:	00 0c       	add	r0, r0
     2ce:	aa 0b       	sbc	r26, r26
     2d0:	bb 0b       	sbc	r27, r27
     2d2:	84 0f       	add	r24, r20
     2d4:	95 1f       	adc	r25, r21
     2d6:	a6 1f       	adc	r26, r22
     2d8:	b7 1f       	adc	r27, r23
     2da:	bc 01       	movw	r22, r24
     2dc:	cd 01       	movw	r24, r26
     2de:	6a 0d       	add	r22, r10
     2e0:	71 1d       	adc	r23, r1
     2e2:	81 1d       	adc	r24, r1
     2e4:	91 1d       	adc	r25, r1
	*temperature = (rawTemperatureData * 0.000191f) - 50.0f;
     2e6:	bf d5       	rcall	.+2942   	; 0xe66 <__floatunsisf>
     2e8:	2c e2       	ldi	r18, 0x2C	; 44
     2ea:	37 e4       	ldi	r19, 0x47	; 71
     2ec:	48 e4       	ldi	r20, 0x48	; 72
     2ee:	59 e3       	ldi	r21, 0x39	; 57
     2f0:	48 d6       	rcall	.+3216   	; 0xf82 <__mulsf3>
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	48 e4       	ldi	r20, 0x48	; 72
     2f8:	52 e4       	ldi	r21, 0x42	; 66
     2fa:	b7 d4       	rcall	.+2414   	; 0xc6a <__subsf3>
     2fc:	f7 01       	movw	r30, r14
     2fe:	60 83       	st	Z, r22
     300:	71 83       	std	Z+1, r23	; 0x01
     302:	82 83       	std	Z+2, r24	; 0x02
     304:	93 83       	std	Z+3, r25	; 0x03
	
	uint32 rawHumidityData = rawHumidityData = ((Data[3] & 0xF0) >> 4) + (Data[2] << 4) + ((uint32)Data[1]<< 12);;
     306:	b6 94       	lsr	r11
     308:	b6 94       	lsr	r11
     30a:	b6 94       	lsr	r11
     30c:	b6 94       	lsr	r11
     30e:	f0 e1       	ldi	r31, 0x10	; 16
     310:	cf 9e       	mul	r12, r31
     312:	b0 01       	movw	r22, r0
     314:	11 24       	eor	r1, r1
     316:	6b 0d       	add	r22, r11
     318:	71 1d       	adc	r23, r1
     31a:	ab 01       	movw	r20, r22
     31c:	77 0f       	add	r23, r23
     31e:	66 0b       	sbc	r22, r22
     320:	77 0b       	sbc	r23, r23
     322:	8d 2d       	mov	r24, r13
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	a0 e0       	ldi	r26, 0x00	; 0
     328:	b0 e0       	ldi	r27, 0x00	; 0
     32a:	07 2e       	mov	r0, r23
     32c:	7c e0       	ldi	r23, 0x0C	; 12
     32e:	88 0f       	add	r24, r24
     330:	99 1f       	adc	r25, r25
     332:	aa 1f       	adc	r26, r26
     334:	bb 1f       	adc	r27, r27
     336:	7a 95       	dec	r23
     338:	d1 f7       	brne	.-12     	; 0x32e <__EEPROM_REGION_LENGTH__+0x12e>
     33a:	70 2d       	mov	r23, r0
     33c:	6a 01       	movw	r12, r20
     33e:	7b 01       	movw	r14, r22
     340:	c8 0e       	add	r12, r24
     342:	d9 1e       	adc	r13, r25
     344:	ea 1e       	adc	r14, r26
     346:	fb 1e       	adc	r15, r27
     348:	c7 01       	movw	r24, r14
     34a:	b6 01       	movw	r22, r12
	*humidity = rawHumidityData * 0.000095f;
     34c:	8c d5       	rcall	.+2840   	; 0xe66 <__floatunsisf>
     34e:	2d eb       	ldi	r18, 0xBD	; 189
     350:	3a e3       	ldi	r19, 0x3A	; 58
     352:	47 ec       	ldi	r20, 0xC7	; 199
     354:	58 e3       	ldi	r21, 0x38	; 56
     356:	15 d6       	rcall	.+3114   	; 0xf82 <__mulsf3>
     358:	f8 01       	movw	r30, r16
     35a:	60 83       	st	Z, r22
     35c:	71 83       	std	Z+1, r23	; 0x01
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	93 83       	std	Z+3, r25	; 0x03
	
	
	
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	1f 91       	pop	r17
     368:	0f 91       	pop	r16
     36a:	ff 90       	pop	r15
     36c:	ef 90       	pop	r14
     36e:	df 90       	pop	r13
     370:	cf 90       	pop	r12
     372:	bf 90       	pop	r11
     374:	af 90       	pop	r10
     376:	9f 90       	pop	r9
     378:	08 95       	ret

0000037a <_ZN7BareLCDC1EP3I2Ch>:
#define EN  0x04
#define RS  0x01
#define BACKLIGHT 0x08

BareLCD::BareLCD(I2C *i2c, uint8_t address) {
	this->i2c = i2c;
     37a:	fc 01       	movw	r30, r24
     37c:	71 83       	std	Z+1, r23	; 0x01
     37e:	60 83       	st	Z, r22
	this->address = address << 1;
     380:	44 0f       	add	r20, r20
     382:	42 83       	std	Z+2, r20	; 0x02
     384:	08 95       	ret

00000386 <_ZN7BareLCD10sendNibbleEhh>:
}

void BareLCD::sendNibble(uint8_t nibble, uint8_t rs) {
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	ec 01       	movw	r28, r24
	uint8_t data = (nibble & 0xF0) | BACKLIGHT;
     38e:	60 7f       	andi	r22, 0xF0	; 240
     390:	16 2f       	mov	r17, r22
     392:	18 60       	ori	r17, 0x08	; 8
	if (rs) data |= RS;
     394:	41 11       	cpse	r20, r1
     396:	11 60       	ori	r17, 0x01	; 1

	i2c->Start();
     398:	88 81       	ld	r24, Y
     39a:	99 81       	ldd	r25, Y+1	; 0x01
     39c:	64 d1       	rcall	.+712    	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(address);
     39e:	6a 81       	ldd	r22, Y+2	; 0x02
     3a0:	88 81       	ld	r24, Y
     3a2:	99 81       	ldd	r25, Y+1	; 0x01
     3a4:	c1 d1       	rcall	.+898    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(data | EN);
     3a6:	61 2f       	mov	r22, r17
     3a8:	64 60       	ori	r22, 0x04	; 4
     3aa:	88 81       	ld	r24, Y
     3ac:	99 81       	ldd	r25, Y+1	; 0x01
     3ae:	bc d1       	rcall	.+888    	; 0x728 <_ZN3I2C8SendByteEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b0:	00 00       	nop
	_delay_us(1);
	i2c->SendByte(data & ~EN);
     3b2:	61 2f       	mov	r22, r17
     3b4:	6b 7f       	andi	r22, 0xFB	; 251
     3b6:	88 81       	ld	r24, Y
     3b8:	99 81       	ldd	r25, Y+1	; 0x01
     3ba:	b6 d1       	rcall	.+876    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     3bc:	88 81       	ld	r24, Y
     3be:	99 81       	ldd	r25, Y+1	; 0x01
     3c0:	69 d1       	rcall	.+722    	; 0x694 <_ZN3I2C4StopEv>
}
     3c2:	df 91       	pop	r29
     3c4:	cf 91       	pop	r28
     3c6:	1f 91       	pop	r17
     3c8:	08 95       	ret

000003ca <_ZN7BareLCD11sendCommandEh>:

void BareLCD::sendCommand(uint8_t cmd) {
     3ca:	0f 93       	push	r16
     3cc:	1f 93       	push	r17
     3ce:	cf 93       	push	r28
     3d0:	8c 01       	movw	r16, r24
     3d2:	c6 2f       	mov	r28, r22
	sendNibble(cmd & 0xF0, 0);
     3d4:	60 7f       	andi	r22, 0xF0	; 240
     3d6:	40 e0       	ldi	r20, 0x00	; 0
     3d8:	d6 df       	rcall	.-84     	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
	sendNibble((cmd << 4) & 0xF0, 0);
     3da:	80 e1       	ldi	r24, 0x10	; 16
     3dc:	c8 9f       	mul	r28, r24
     3de:	b0 01       	movw	r22, r0
     3e0:	11 24       	eor	r1, r1
     3e2:	40 e0       	ldi	r20, 0x00	; 0
     3e4:	c8 01       	movw	r24, r16
     3e6:	cf df       	rcall	.-98     	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3e8:	83 ef       	ldi	r24, 0xF3	; 243
     3ea:	91 e0       	ldi	r25, 0x01	; 1
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <_ZN7BareLCD11sendCommandEh+0x22>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <_ZN7BareLCD11sendCommandEh+0x28>
     3f2:	00 00       	nop
	_delay_ms(2);
}
     3f4:	cf 91       	pop	r28
     3f6:	1f 91       	pop	r17
     3f8:	0f 91       	pop	r16
     3fa:	08 95       	ret

000003fc <_ZN7BareLCD8sendDataEh>:

void BareLCD::sendData(uint8_t data) {
     3fc:	0f 93       	push	r16
     3fe:	1f 93       	push	r17
     400:	cf 93       	push	r28
     402:	8c 01       	movw	r16, r24
     404:	c6 2f       	mov	r28, r22
	sendNibble(data & 0xF0, 1);
     406:	60 7f       	andi	r22, 0xF0	; 240
     408:	41 e0       	ldi	r20, 0x01	; 1
     40a:	bd df       	rcall	.-134    	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
	sendNibble((data << 4) & 0xF0, 1);
     40c:	80 e1       	ldi	r24, 0x10	; 16
     40e:	c8 9f       	mul	r28, r24
     410:	b0 01       	movw	r22, r0
     412:	11 24       	eor	r1, r1
     414:	41 e0       	ldi	r20, 0x01	; 1
     416:	c8 01       	movw	r24, r16
     418:	b6 df       	rcall	.-148    	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     41a:	81 e2       	ldi	r24, 0x21	; 33
     41c:	8a 95       	dec	r24
     41e:	f1 f7       	brne	.-4      	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
     420:	00 00       	nop
	_delay_us(100);
}
     422:	cf 91       	pop	r28
     424:	1f 91       	pop	r17
     426:	0f 91       	pop	r16
     428:	08 95       	ret

0000042a <_ZN7BareLCD7lcdInitEv>:

void BareLCD::lcdInit() {
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	ec 01       	movw	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     430:	83 ed       	ldi	r24, 0xD3	; 211
     432:	90 e3       	ldi	r25, 0x30	; 48
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <_ZN7BareLCD7lcdInitEv+0xa>
     438:	00 c0       	rjmp	.+0      	; 0x43a <_ZN7BareLCD7lcdInitEv+0x10>
     43a:	00 00       	nop
	_delay_ms(50);
	sendNibble(0x30, 0); _delay_ms(5);
     43c:	40 e0       	ldi	r20, 0x00	; 0
     43e:	60 e3       	ldi	r22, 0x30	; 48
     440:	ce 01       	movw	r24, r28
     442:	a1 df       	rcall	.-190    	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
     444:	81 ee       	ldi	r24, 0xE1	; 225
     446:	94 e0       	ldi	r25, 0x04	; 4
     448:	01 97       	sbiw	r24, 0x01	; 1
     44a:	f1 f7       	brne	.-4      	; 0x448 <_ZN7BareLCD7lcdInitEv+0x1e>
     44c:	00 c0       	rjmp	.+0      	; 0x44e <_ZN7BareLCD7lcdInitEv+0x24>
     44e:	00 00       	nop
	sendNibble(0x30, 0); _delay_ms(5);
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	60 e3       	ldi	r22, 0x30	; 48
     454:	ce 01       	movw	r24, r28
     456:	97 df       	rcall	.-210    	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
     458:	81 ee       	ldi	r24, 0xE1	; 225
     45a:	94 e0       	ldi	r25, 0x04	; 4
     45c:	01 97       	sbiw	r24, 0x01	; 1
     45e:	f1 f7       	brne	.-4      	; 0x45c <_ZN7BareLCD7lcdInitEv+0x32>
     460:	00 c0       	rjmp	.+0      	; 0x462 <__stack+0x3>
     462:	00 00       	nop
	sendNibble(0x20, 0); _delay_ms(5);
     464:	40 e0       	ldi	r20, 0x00	; 0
     466:	60 e2       	ldi	r22, 0x20	; 32
     468:	ce 01       	movw	r24, r28
     46a:	8d df       	rcall	.-230    	; 0x386 <_ZN7BareLCD10sendNibbleEhh>
     46c:	81 ee       	ldi	r24, 0xE1	; 225
     46e:	94 e0       	ldi	r25, 0x04	; 4
     470:	01 97       	sbiw	r24, 0x01	; 1
     472:	f1 f7       	brne	.-4      	; 0x470 <__stack+0x11>
     474:	00 c0       	rjmp	.+0      	; 0x476 <__stack+0x17>
     476:	00 00       	nop

	sendCommand(0x28); // 4-bit, 2-line, 5x8 font
     478:	68 e2       	ldi	r22, 0x28	; 40
     47a:	ce 01       	movw	r24, r28
     47c:	a6 df       	rcall	.-180    	; 0x3ca <_ZN7BareLCD11sendCommandEh>
	sendCommand(0x0C); // Display ON, Cursor OFF
     47e:	6c e0       	ldi	r22, 0x0C	; 12
     480:	ce 01       	movw	r24, r28
     482:	a3 df       	rcall	.-186    	; 0x3ca <_ZN7BareLCD11sendCommandEh>
	sendCommand(0x06); // Entry mode
     484:	66 e0       	ldi	r22, 0x06	; 6
     486:	ce 01       	movw	r24, r28
     488:	a0 df       	rcall	.-192    	; 0x3ca <_ZN7BareLCD11sendCommandEh>
	sendCommand(0x01); // Clear display
     48a:	61 e0       	ldi	r22, 0x01	; 1
     48c:	ce 01       	movw	r24, r28
     48e:	9d df       	rcall	.-198    	; 0x3ca <_ZN7BareLCD11sendCommandEh>
     490:	83 ef       	ldi	r24, 0xF3	; 243
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	01 97       	sbiw	r24, 0x01	; 1
     496:	f1 f7       	brne	.-4      	; 0x494 <__stack+0x35>
     498:	00 c0       	rjmp	.+0      	; 0x49a <__stack+0x3b>
     49a:	00 00       	nop
	_delay_ms(2);
}
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <_ZN7BareLCD5beginEv>:

void BareLCD::begin() {
	lcdInit();
     4a2:	c3 df       	rcall	.-122    	; 0x42a <_ZN7BareLCD7lcdInitEv>
     4a4:	08 95       	ret

000004a6 <_ZN7BareLCD5clearEv>:
}

void BareLCD::clear() {
	sendCommand(0x01);
     4a6:	61 e0       	ldi	r22, 0x01	; 1
     4a8:	90 df       	rcall	.-224    	; 0x3ca <_ZN7BareLCD11sendCommandEh>
     4aa:	83 ef       	ldi	r24, 0xF3	; 243
     4ac:	91 e0       	ldi	r25, 0x01	; 1
     4ae:	01 97       	sbiw	r24, 0x01	; 1
     4b0:	f1 f7       	brne	.-4      	; 0x4ae <_ZN7BareLCD5clearEv+0x8>
     4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <_ZN7BareLCD5clearEv+0xe>
     4b4:	00 00       	nop
     4b6:	08 95       	ret

000004b8 <_ZN7BareLCD9setCursorEhh>:
	_delay_ms(2);
}

void BareLCD::setCursor(uint8_t col, uint8_t row) {
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	00 d0       	rcall	.+0      	; 0x4be <_ZN7BareLCD9setCursorEhh+0x6>
     4be:	cd b7       	in	r28, 0x3d	; 61
     4c0:	de b7       	in	r29, 0x3e	; 62
	uint8_t row_offsets[] = {0x00, 0x40};
     4c2:	19 82       	std	Y+1, r1	; 0x01
     4c4:	20 e4       	ldi	r18, 0x40	; 64
     4c6:	2a 83       	std	Y+2, r18	; 0x02
	sendCommand(0x80 | (col + row_offsets[row]));
     4c8:	e1 e0       	ldi	r30, 0x01	; 1
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	ec 0f       	add	r30, r28
     4ce:	fd 1f       	adc	r31, r29
     4d0:	e4 0f       	add	r30, r20
     4d2:	f1 1d       	adc	r31, r1
     4d4:	20 81       	ld	r18, Z
     4d6:	62 0f       	add	r22, r18
     4d8:	60 68       	ori	r22, 0x80	; 128
     4da:	77 df       	rcall	.-274    	; 0x3ca <_ZN7BareLCD11sendCommandEh>
}
     4dc:	0f 90       	pop	r0
     4de:	0f 90       	pop	r0
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	08 95       	ret

000004e6 <_ZN7BareLCD5printEPKc>:

void BareLCD::print(const char* str) {
     4e6:	ef 92       	push	r14
     4e8:	ff 92       	push	r15
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	8c 01       	movw	r16, r24
     4f2:	7b 01       	movw	r14, r22
	clear();
     4f4:	d8 df       	rcall	.-80     	; 0x4a6 <_ZN7BareLCD5clearEv>
	setCursor(0, 0);
     4f6:	40 e0       	ldi	r20, 0x00	; 0
     4f8:	60 e0       	ldi	r22, 0x00	; 0
     4fa:	c8 01       	movw	r24, r16
     4fc:	dd df       	rcall	.-70     	; 0x4b8 <_ZN7BareLCD9setCursorEhh>
	uint8_t i = 0;
     4fe:	c0 e0       	ldi	r28, 0x00	; 0
	while (str[i] && i < 16) {
     500:	f7 01       	movw	r30, r14
     502:	ec 0f       	add	r30, r28
     504:	f1 1d       	adc	r31, r1
     506:	60 81       	ld	r22, Z
     508:	66 23       	and	r22, r22
     50a:	31 f0       	breq	.+12     	; 0x518 <_ZN7BareLCD5printEPKc+0x32>
     50c:	c0 31       	cpi	r28, 0x10	; 16
     50e:	20 f4       	brcc	.+8      	; 0x518 <_ZN7BareLCD5printEPKc+0x32>
		sendData(str[i++]);
     510:	cf 5f       	subi	r28, 0xFF	; 255
     512:	c8 01       	movw	r24, r16
     514:	73 df       	rcall	.-282    	; 0x3fc <_ZN7BareLCD8sendDataEh>

void BareLCD::print(const char* str) {
	clear();
	setCursor(0, 0);
	uint8_t i = 0;
	while (str[i] && i < 16) {
     516:	f4 cf       	rjmp	.-24     	; 0x500 <_ZN7BareLCD5printEPKc+0x1a>
		sendData(str[i++]);
	}
	if (str[i]) {
     518:	66 23       	and	r22, r22
     51a:	81 f0       	breq	.+32     	; 0x53c <_ZN7BareLCD5printEPKc+0x56>
		setCursor(0, 1);
     51c:	41 e0       	ldi	r20, 0x01	; 1
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	c8 01       	movw	r24, r16
     522:	ca df       	rcall	.-108    	; 0x4b8 <_ZN7BareLCD9setCursorEhh>
		while (str[i] && i < 32) {
     524:	f7 01       	movw	r30, r14
     526:	ec 0f       	add	r30, r28
     528:	f1 1d       	adc	r31, r1
     52a:	60 81       	ld	r22, Z
     52c:	66 23       	and	r22, r22
     52e:	31 f0       	breq	.+12     	; 0x53c <_ZN7BareLCD5printEPKc+0x56>
     530:	c0 32       	cpi	r28, 0x20	; 32
     532:	20 f4       	brcc	.+8      	; 0x53c <_ZN7BareLCD5printEPKc+0x56>
			sendData(str[i++]);
     534:	cf 5f       	subi	r28, 0xFF	; 255
     536:	c8 01       	movw	r24, r16
     538:	61 df       	rcall	.-318    	; 0x3fc <_ZN7BareLCD8sendDataEh>
	while (str[i] && i < 16) {
		sendData(str[i++]);
	}
	if (str[i]) {
		setCursor(0, 1);
		while (str[i] && i < 32) {
     53a:	f4 cf       	rjmp	.-24     	; 0x524 <_ZN7BareLCD5printEPKc+0x3e>
			sendData(str[i++]);
		}
	}
}
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	ff 90       	pop	r15
     544:	ef 90       	pop	r14
     546:	08 95       	ret

00000548 <_ZN5GY302C1EP3I2C>:

#include "GY302.h"

GY302::GY302(I2C* i2c)
{
	this->i2c = i2c;
     548:	fc 01       	movw	r30, r24
     54a:	71 83       	std	Z+1, r23	; 0x01
     54c:	60 83       	st	Z, r22
     54e:	08 95       	ret

00000550 <_ZN5GY30218ReadLightIntensityEv>:
}

float GY302::ReadLightIntensity()
{
     550:	0f 93       	push	r16
     552:	1f 93       	push	r17
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	ec 01       	movw	r28, r24
	uint8 data[2];
		
	i2c->Start();
     55a:	88 81       	ld	r24, Y
     55c:	99 81       	ldd	r25, Y+1	; 0x01
     55e:	83 d0       	rcall	.+262    	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x46);
     560:	66 e4       	ldi	r22, 0x46	; 70
     562:	88 81       	ld	r24, Y
     564:	99 81       	ldd	r25, Y+1	; 0x01
     566:	e0 d0       	rcall	.+448    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x10);
     568:	60 e1       	ldi	r22, 0x10	; 16
     56a:	88 81       	ld	r24, Y
     56c:	99 81       	ldd	r25, Y+1	; 0x01
     56e:	dc d0       	rcall	.+440    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     570:	88 81       	ld	r24, Y
     572:	99 81       	ldd	r25, Y+1	; 0x01
     574:	8f d0       	rcall	.+286    	; 0x694 <_ZN3I2C4StopEv>
     576:	83 ec       	ldi	r24, 0xC3	; 195
     578:	99 e0       	ldi	r25, 0x09	; 9
     57a:	01 97       	sbiw	r24, 0x01	; 1
     57c:	f1 f7       	brne	.-4      	; 0x57a <_ZN5GY30218ReadLightIntensityEv+0x2a>
     57e:	00 c0       	rjmp	.+0      	; 0x580 <_ZN5GY30218ReadLightIntensityEv+0x30>
     580:	00 00       	nop
	_delay_ms(10);
	i2c->Start();
     582:	88 81       	ld	r24, Y
     584:	99 81       	ldd	r25, Y+1	; 0x01
     586:	6f d0       	rcall	.+222    	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x46);
     588:	66 e4       	ldi	r22, 0x46	; 70
     58a:	88 81       	ld	r24, Y
     58c:	99 81       	ldd	r25, Y+1	; 0x01
     58e:	cc d0       	rcall	.+408    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x42);
     590:	62 e4       	ldi	r22, 0x42	; 66
     592:	88 81       	ld	r24, Y
     594:	99 81       	ldd	r25, Y+1	; 0x01
     596:	c8 d0       	rcall	.+400    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     598:	88 81       	ld	r24, Y
     59a:	99 81       	ldd	r25, Y+1	; 0x01
     59c:	7b d0       	rcall	.+246    	; 0x694 <_ZN3I2C4StopEv>
	i2c->Start();
     59e:	88 81       	ld	r24, Y
     5a0:	99 81       	ldd	r25, Y+1	; 0x01
     5a2:	61 d0       	rcall	.+194    	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x46);
     5a4:	66 e4       	ldi	r22, 0x46	; 70
     5a6:	88 81       	ld	r24, Y
     5a8:	99 81       	ldd	r25, Y+1	; 0x01
     5aa:	be d0       	rcall	.+380    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x65);
     5ac:	65 e6       	ldi	r22, 0x65	; 101
     5ae:	88 81       	ld	r24, Y
     5b0:	99 81       	ldd	r25, Y+1	; 0x01
     5b2:	ba d0       	rcall	.+372    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     5b4:	88 81       	ld	r24, Y
     5b6:	99 81       	ldd	r25, Y+1	; 0x01
     5b8:	6d d0       	rcall	.+218    	; 0x694 <_ZN3I2C4StopEv>
	i2c->Start();
     5ba:	88 81       	ld	r24, Y
     5bc:	99 81       	ldd	r25, Y+1	; 0x01
     5be:	53 d0       	rcall	.+166    	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x46);
     5c0:	66 e4       	ldi	r22, 0x46	; 70
     5c2:	88 81       	ld	r24, Y
     5c4:	99 81       	ldd	r25, Y+1	; 0x01
     5c6:	b0 d0       	rcall	.+352    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->SendByte(0x10);
     5c8:	60 e1       	ldi	r22, 0x10	; 16
     5ca:	88 81       	ld	r24, Y
     5cc:	99 81       	ldd	r25, Y+1	; 0x01
     5ce:	ac d0       	rcall	.+344    	; 0x728 <_ZN3I2C8SendByteEh>
	i2c->Stop();
     5d0:	88 81       	ld	r24, Y
     5d2:	99 81       	ldd	r25, Y+1	; 0x01
     5d4:	5f d0       	rcall	.+190    	; 0x694 <_ZN3I2C4StopEv>
     5d6:	87 ea       	ldi	r24, 0xA7	; 167
     5d8:	91 e6       	ldi	r25, 0x61	; 97
     5da:	01 97       	sbiw	r24, 0x01	; 1
     5dc:	f1 f7       	brne	.-4      	; 0x5da <_ZN5GY30218ReadLightIntensityEv+0x8a>
     5de:	00 c0       	rjmp	.+0      	; 0x5e0 <_ZN5GY30218ReadLightIntensityEv+0x90>
     5e0:	00 00       	nop
	
	_delay_ms(100);
	
	i2c->Start();
     5e2:	88 81       	ld	r24, Y
     5e4:	99 81       	ldd	r25, Y+1	; 0x01
     5e6:	3f d0       	rcall	.+126    	; 0x666 <_ZN3I2C5StartEv>
	i2c->SendByte(0x47);
     5e8:	67 e4       	ldi	r22, 0x47	; 71
     5ea:	88 81       	ld	r24, Y
     5ec:	99 81       	ldd	r25, Y+1	; 0x01
     5ee:	9c d0       	rcall	.+312    	; 0x728 <_ZN3I2C8SendByteEh>
	data[0] = i2c->ReadByte();
     5f0:	88 81       	ld	r24, Y
     5f2:	99 81       	ldd	r25, Y+1	; 0x01
     5f4:	f7 d0       	rcall	.+494    	; 0x7e4 <_ZN3I2C8ReadByteEv>
     5f6:	18 2f       	mov	r17, r24
	i2c->SendACK();
     5f8:	88 81       	ld	r24, Y
     5fa:	99 81       	ldd	r25, Y+1	; 0x01
     5fc:	62 d0       	rcall	.+196    	; 0x6c2 <_ZN3I2C7SendACKEv>
	data[1] = i2c->ReadByte();
     5fe:	88 81       	ld	r24, Y
     600:	99 81       	ldd	r25, Y+1	; 0x01
     602:	f0 d0       	rcall	.+480    	; 0x7e4 <_ZN3I2C8ReadByteEv>
     604:	08 2f       	mov	r16, r24
	i2c->SendNACK();
     606:	88 81       	ld	r24, Y
     608:	99 81       	ldd	r25, Y+1	; 0x01
     60a:	76 d0       	rcall	.+236    	; 0x6f8 <_ZN3I2C8SendNACKEv>
	i2c->Stop();
     60c:	88 81       	ld	r24, Y
     60e:	99 81       	ldd	r25, Y+1	; 0x01
     610:	41 d0       	rcall	.+130    	; 0x694 <_ZN3I2C4StopEv>
	
	
	unsigned int recievedData = (data[0] << 8) + data[1];
     612:	61 2f       	mov	r22, r17
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	76 2f       	mov	r23, r22
     618:	66 27       	eor	r22, r22
     61a:	60 0f       	add	r22, r16
     61c:	71 1d       	adc	r23, r1
	float intensity = (recievedData/1.20f);
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	21 d4       	rcall	.+2114   	; 0xe66 <__floatunsisf>
     624:	2a e9       	ldi	r18, 0x9A	; 154
     626:	39 e9       	ldi	r19, 0x99	; 153
     628:	49 e9       	ldi	r20, 0x99	; 153
     62a:	5f e3       	ldi	r21, 0x3F	; 63
     62c:	83 d3       	rcall	.+1798   	; 0xd34 <__divsf3>
	return intensity;
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	1f 91       	pop	r17
     634:	0f 91       	pop	r16
     636:	08 95       	ret

00000638 <_ZN3I2CC1EP3PinS1_>:
*/


#include "I2C.h"

I2C::I2C(Pin *sda, Pin *scl)
     638:	cf 93       	push	r28
     63a:	df 93       	push	r29
     63c:	ec 01       	movw	r28, r24
     63e:	cb 01       	movw	r24, r22
{
	this->sda = sda;
     640:	79 83       	std	Y+1, r23	; 0x01
     642:	68 83       	st	Y, r22
	this->scl = scl;
     644:	5b 83       	std	Y+3, r21	; 0x03
     646:	4a 83       	std	Y+2, r20	; 0x02
	this->sda->SetDirection(OUTPUT);
     648:	61 e0       	ldi	r22, 0x01	; 1
     64a:	27 d2       	rcall	.+1102   	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
	this->scl->SetDirection(OUTPUT);
     64c:	61 e0       	ldi	r22, 0x01	; 1
     64e:	8a 81       	ldd	r24, Y+2	; 0x02
     650:	9b 81       	ldd	r25, Y+3	; 0x03
     652:	23 d2       	rcall	.+1094   	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
	this->sda->Set();
     654:	88 81       	ld	r24, Y
     656:	99 81       	ldd	r25, Y+1	; 0x01
     658:	80 d2       	rcall	.+1280   	; 0xb5a <_ZN3Pin3SetEv>
	this->scl->Set();
     65a:	8a 81       	ldd	r24, Y+2	; 0x02
     65c:	9b 81       	ldd	r25, Y+3	; 0x03
     65e:	7d d2       	rcall	.+1274   	; 0xb5a <_ZN3Pin3SetEv>
}
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	08 95       	ret

00000666 <_ZN3I2C5StartEv>:

void I2C::Start()
{
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	ec 01       	movw	r28, r24
	this->scl->Set();
     66c:	8a 81       	ldd	r24, Y+2	; 0x02
     66e:	9b 81       	ldd	r25, Y+3	; 0x03
     670:	74 d2       	rcall	.+1256   	; 0xb5a <_ZN3Pin3SetEv>
	this->sda->Clear();	
     672:	88 81       	ld	r24, Y
     674:	99 81       	ldd	r25, Y+1	; 0x01
     676:	9d d2       	rcall	.+1338   	; 0xbb2 <_ZN3Pin5ClearEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     678:	83 e0       	ldi	r24, 0x03	; 3
     67a:	8a 95       	dec	r24
     67c:	f1 f7       	brne	.-4      	; 0x67a <_ZN3I2C5StartEv+0x14>
     67e:	00 00       	nop
	_delay_us(10);
	this->scl->Clear();
     680:	8a 81       	ldd	r24, Y+2	; 0x02
     682:	9b 81       	ldd	r25, Y+3	; 0x03
     684:	96 d2       	rcall	.+1324   	; 0xbb2 <_ZN3Pin5ClearEv>
     686:	83 e0       	ldi	r24, 0x03	; 3
     688:	8a 95       	dec	r24
     68a:	f1 f7       	brne	.-4      	; 0x688 <_ZN3I2C5StartEv+0x22>
     68c:	00 00       	nop
	_delay_us(10);
}
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <_ZN3I2C4StopEv>:

void I2C::Stop()
{
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	ec 01       	movw	r28, r24
	this->sda->Clear();
     69a:	88 81       	ld	r24, Y
     69c:	99 81       	ldd	r25, Y+1	; 0x01
     69e:	89 d2       	rcall	.+1298   	; 0xbb2 <_ZN3Pin5ClearEv>
	this->scl->Set();
     6a0:	8a 81       	ldd	r24, Y+2	; 0x02
     6a2:	9b 81       	ldd	r25, Y+3	; 0x03
     6a4:	5a d2       	rcall	.+1204   	; 0xb5a <_ZN3Pin3SetEv>
     6a6:	83 e0       	ldi	r24, 0x03	; 3
     6a8:	8a 95       	dec	r24
     6aa:	f1 f7       	brne	.-4      	; 0x6a8 <_ZN3I2C4StopEv+0x14>
     6ac:	00 00       	nop
	_delay_us(10);
	this->sda->Set();
     6ae:	88 81       	ld	r24, Y
     6b0:	99 81       	ldd	r25, Y+1	; 0x01
     6b2:	53 d2       	rcall	.+1190   	; 0xb5a <_ZN3Pin3SetEv>
     6b4:	83 e0       	ldi	r24, 0x03	; 3
     6b6:	8a 95       	dec	r24
     6b8:	f1 f7       	brne	.-4      	; 0x6b6 <_ZN3I2C4StopEv+0x22>
     6ba:	00 00       	nop
	_delay_us(10);
}
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	08 95       	ret

000006c2 <_ZN3I2C7SendACKEv>:

void I2C::SendACK()
{
     6c2:	cf 93       	push	r28
     6c4:	df 93       	push	r29
     6c6:	ec 01       	movw	r28, r24
	this->sda->Clear();
     6c8:	88 81       	ld	r24, Y
     6ca:	99 81       	ldd	r25, Y+1	; 0x01
     6cc:	72 d2       	rcall	.+1252   	; 0xbb2 <_ZN3Pin5ClearEv>
     6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <_ZN3I2C7SendACKEv+0xe>
     6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <_ZN3I2C7SendACKEv+0x10>
     6d2:	00 00       	nop
	_delay_us(5);
	this->scl->Clear();
     6d4:	8a 81       	ldd	r24, Y+2	; 0x02
     6d6:	9b 81       	ldd	r25, Y+3	; 0x03
     6d8:	6c d2       	rcall	.+1240   	; 0xbb2 <_ZN3Pin5ClearEv>
     6da:	00 c0       	rjmp	.+0      	; 0x6dc <_ZN3I2C7SendACKEv+0x1a>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <_ZN3I2C7SendACKEv+0x1c>
     6de:	00 00       	nop
	_delay_us(5);
	this->scl->Set();
     6e0:	8a 81       	ldd	r24, Y+2	; 0x02
     6e2:	9b 81       	ldd	r25, Y+3	; 0x03
     6e4:	3a d2       	rcall	.+1140   	; 0xb5a <_ZN3Pin3SetEv>
     6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <_ZN3I2C7SendACKEv+0x26>
     6e8:	00 c0       	rjmp	.+0      	; 0x6ea <_ZN3I2C7SendACKEv+0x28>
     6ea:	00 00       	nop
	_delay_us(5);
	this->scl->Clear();
     6ec:	8a 81       	ldd	r24, Y+2	; 0x02
     6ee:	9b 81       	ldd	r25, Y+3	; 0x03
     6f0:	60 d2       	rcall	.+1216   	; 0xbb2 <_ZN3Pin5ClearEv>
}
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <_ZN3I2C8SendNACKEv>:

void I2C::SendNACK()
{
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
	this->sda->Set();
     6fe:	88 81       	ld	r24, Y
     700:	99 81       	ldd	r25, Y+1	; 0x01
     702:	2b d2       	rcall	.+1110   	; 0xb5a <_ZN3Pin3SetEv>
	this->scl->Clear();
     704:	8a 81       	ldd	r24, Y+2	; 0x02
     706:	9b 81       	ldd	r25, Y+3	; 0x03
     708:	54 d2       	rcall	.+1192   	; 0xbb2 <_ZN3Pin5ClearEv>
     70a:	00 c0       	rjmp	.+0      	; 0x70c <_ZN3I2C8SendNACKEv+0x14>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <_ZN3I2C8SendNACKEv+0x16>
     70e:	00 00       	nop
	_delay_us(5);
	this->scl->Set();
     710:	8a 81       	ldd	r24, Y+2	; 0x02
     712:	9b 81       	ldd	r25, Y+3	; 0x03
     714:	22 d2       	rcall	.+1092   	; 0xb5a <_ZN3Pin3SetEv>
     716:	00 c0       	rjmp	.+0      	; 0x718 <_ZN3I2C8SendNACKEv+0x20>
     718:	00 c0       	rjmp	.+0      	; 0x71a <_ZN3I2C8SendNACKEv+0x22>
     71a:	00 00       	nop
	_delay_us(5);
	this->scl->Clear();
     71c:	8a 81       	ldd	r24, Y+2	; 0x02
     71e:	9b 81       	ldd	r25, Y+3	; 0x03
     720:	48 d2       	rcall	.+1168   	; 0xbb2 <_ZN3Pin5ClearEv>
}
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	08 95       	ret

00000728 <_ZN3I2C8SendByteEh>:

uint8 I2C::SendByte(uint8 dataByte)
{
     728:	ff 92       	push	r15
     72a:	0f 93       	push	r16
     72c:	1f 93       	push	r17
     72e:	cf 93       	push	r28
     730:	df 93       	push	r29
     732:	8c 01       	movw	r16, r24
     734:	f6 2e       	mov	r15, r22
	uint8 pattern = 0x80, retValue;
	for(uint8 i = 0; i < 8; i++)
     736:	d0 e0       	ldi	r29, 0x00	; 0
	this->scl->Clear();
}

uint8 I2C::SendByte(uint8 dataByte)
{
	uint8 pattern = 0x80, retValue;
     738:	c0 e8       	ldi	r28, 0x80	; 128
	for(uint8 i = 0; i < 8; i++)
     73a:	d8 30       	cpi	r29, 0x08	; 8
     73c:	40 f5       	brcc	.+80     	; 0x78e <_ZN3I2C8SendByteEh+0x66>
	{
		dataByte & pattern ? this->sda->Set() : this->sda->Clear();
     73e:	8c 2f       	mov	r24, r28
     740:	8f 21       	and	r24, r15
     742:	29 f0       	breq	.+10     	; 0x74e <_ZN3I2C8SendByteEh+0x26>
     744:	f8 01       	movw	r30, r16
     746:	80 81       	ld	r24, Z
     748:	91 81       	ldd	r25, Z+1	; 0x01
     74a:	07 d2       	rcall	.+1038   	; 0xb5a <_ZN3Pin3SetEv>
     74c:	04 c0       	rjmp	.+8      	; 0x756 <_ZN3I2C8SendByteEh+0x2e>
     74e:	f8 01       	movw	r30, r16
     750:	80 81       	ld	r24, Z
     752:	91 81       	ldd	r25, Z+1	; 0x01
     754:	2e d2       	rcall	.+1116   	; 0xbb2 <_ZN3Pin5ClearEv>
		this->scl->Clear();
     756:	f8 01       	movw	r30, r16
     758:	82 81       	ldd	r24, Z+2	; 0x02
     75a:	93 81       	ldd	r25, Z+3	; 0x03
     75c:	2a d2       	rcall	.+1108   	; 0xbb2 <_ZN3Pin5ClearEv>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <_ZN3I2C8SendByteEh+0x38>
     760:	00 c0       	rjmp	.+0      	; 0x762 <_ZN3I2C8SendByteEh+0x3a>
     762:	00 00       	nop
		_delay_us(5);
		this->scl->Set();
     764:	f8 01       	movw	r30, r16
     766:	82 81       	ldd	r24, Z+2	; 0x02
     768:	93 81       	ldd	r25, Z+3	; 0x03
     76a:	f7 d1       	rcall	.+1006   	; 0xb5a <_ZN3Pin3SetEv>
     76c:	00 c0       	rjmp	.+0      	; 0x76e <_ZN3I2C8SendByteEh+0x46>
     76e:	00 c0       	rjmp	.+0      	; 0x770 <_ZN3I2C8SendByteEh+0x48>
     770:	00 00       	nop
		_delay_us(5);
		this->scl->Clear();
     772:	f8 01       	movw	r30, r16
     774:	82 81       	ldd	r24, Z+2	; 0x02
     776:	93 81       	ldd	r25, Z+3	; 0x03
     778:	1c d2       	rcall	.+1080   	; 0xbb2 <_ZN3Pin5ClearEv>
     77a:	00 c0       	rjmp	.+0      	; 0x77c <_ZN3I2C8SendByteEh+0x54>
     77c:	00 c0       	rjmp	.+0      	; 0x77e <_ZN3I2C8SendByteEh+0x56>
     77e:	00 00       	nop
		_delay_us(5);
		pattern = pattern >> 1;
     780:	8c 2f       	mov	r24, r28
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	95 95       	asr	r25
     786:	87 95       	ror	r24
     788:	c8 2f       	mov	r28, r24
}

uint8 I2C::SendByte(uint8 dataByte)
{
	uint8 pattern = 0x80, retValue;
	for(uint8 i = 0; i < 8; i++)
     78a:	df 5f       	subi	r29, 0xFF	; 255
     78c:	d6 cf       	rjmp	.-84     	; 0x73a <_ZN3I2C8SendByteEh+0x12>
		_delay_us(5);
		this->scl->Clear();
		_delay_us(5);
		pattern = pattern >> 1;
	}
	this->sda->SetDirection(INPUT);
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	f8 01       	movw	r30, r16
     792:	80 81       	ld	r24, Z
     794:	91 81       	ldd	r25, Z+1	; 0x01
     796:	81 d1       	rcall	.+770    	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
	this->scl->Clear();
     798:	f8 01       	movw	r30, r16
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	93 81       	ldd	r25, Z+3	; 0x03
     79e:	09 d2       	rcall	.+1042   	; 0xbb2 <_ZN3Pin5ClearEv>
     7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <_ZN3I2C8SendByteEh+0x7a>
     7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <_ZN3I2C8SendByteEh+0x7c>
     7a4:	00 00       	nop
	_delay_us(5);
	this->scl->Set();
     7a6:	f8 01       	movw	r30, r16
     7a8:	82 81       	ldd	r24, Z+2	; 0x02
     7aa:	93 81       	ldd	r25, Z+3	; 0x03
     7ac:	d6 d1       	rcall	.+940    	; 0xb5a <_ZN3Pin3SetEv>
     7ae:	00 c0       	rjmp	.+0      	; 0x7b0 <_ZN3I2C8SendByteEh+0x88>
     7b0:	00 c0       	rjmp	.+0      	; 0x7b2 <_ZN3I2C8SendByteEh+0x8a>
     7b2:	00 00       	nop
	_delay_us(5);
	retValue = this->sda->Read();
     7b4:	f8 01       	movw	r30, r16
     7b6:	80 81       	ld	r24, Z
     7b8:	91 81       	ldd	r25, Z+1	; 0x01
     7ba:	2a d2       	rcall	.+1108   	; 0xc10 <_ZN3Pin4ReadEv>
     7bc:	c8 2f       	mov	r28, r24
	this->scl->Clear();
     7be:	f8 01       	movw	r30, r16
     7c0:	82 81       	ldd	r24, Z+2	; 0x02
     7c2:	93 81       	ldd	r25, Z+3	; 0x03
     7c4:	f6 d1       	rcall	.+1004   	; 0xbb2 <_ZN3Pin5ClearEv>
     7c6:	00 c0       	rjmp	.+0      	; 0x7c8 <_ZN3I2C8SendByteEh+0xa0>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <_ZN3I2C8SendByteEh+0xa2>
     7ca:	00 00       	nop
	_delay_us(5);
	this->sda->SetDirection(OUTPUT);
     7cc:	61 e0       	ldi	r22, 0x01	; 1
     7ce:	f8 01       	movw	r30, r16
     7d0:	80 81       	ld	r24, Z
     7d2:	91 81       	ldd	r25, Z+1	; 0x01
     7d4:	62 d1       	rcall	.+708    	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
	return retValue;
}
     7d6:	8c 2f       	mov	r24, r28
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	1f 91       	pop	r17
     7de:	0f 91       	pop	r16
     7e0:	ff 90       	pop	r15
     7e2:	08 95       	ret

000007e4 <_ZN3I2C8ReadByteEv>:

uint8 I2C::ReadByte()
{
     7e4:	0f 93       	push	r16
     7e6:	1f 93       	push	r17
     7e8:	cf 93       	push	r28
     7ea:	df 93       	push	r29
     7ec:	ec 01       	movw	r28, r24
	uint8 dataRead = 0x00;
	this->sda->SetDirection(INPUT);
     7ee:	60 e0       	ldi	r22, 0x00	; 0
     7f0:	88 81       	ld	r24, Y
     7f2:	99 81       	ldd	r25, Y+1	; 0x01
     7f4:	52 d1       	rcall	.+676    	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
	for(uint8 i = 0; i < 7; i++)
     7f6:	00 e0       	ldi	r16, 0x00	; 0
	return retValue;
}

uint8 I2C::ReadByte()
{
	uint8 dataRead = 0x00;
     7f8:	10 e0       	ldi	r17, 0x00	; 0
	this->sda->SetDirection(INPUT);
	for(uint8 i = 0; i < 7; i++)
     7fa:	07 30       	cpi	r16, 0x07	; 7
     7fc:	c8 f4       	brcc	.+50     	; 0x830 <_ZN3I2C8ReadByteEv+0x4c>
	{
		this->scl->Clear();
     7fe:	8a 81       	ldd	r24, Y+2	; 0x02
     800:	9b 81       	ldd	r25, Y+3	; 0x03
     802:	d7 d1       	rcall	.+942    	; 0xbb2 <_ZN3Pin5ClearEv>
     804:	00 c0       	rjmp	.+0      	; 0x806 <_ZN3I2C8ReadByteEv+0x22>
     806:	00 c0       	rjmp	.+0      	; 0x808 <_ZN3I2C8ReadByteEv+0x24>
     808:	00 00       	nop
		_delay_us(5);
		this->scl->Set();
     80a:	8a 81       	ldd	r24, Y+2	; 0x02
     80c:	9b 81       	ldd	r25, Y+3	; 0x03
     80e:	a5 d1       	rcall	.+842    	; 0xb5a <_ZN3Pin3SetEv>
     810:	00 c0       	rjmp	.+0      	; 0x812 <_ZN3I2C8ReadByteEv+0x2e>
     812:	00 c0       	rjmp	.+0      	; 0x814 <_ZN3I2C8ReadByteEv+0x30>
     814:	00 00       	nop
		_delay_us(5);
		dataRead |= this->sda->Read();
     816:	88 81       	ld	r24, Y
     818:	99 81       	ldd	r25, Y+1	; 0x01
     81a:	fa d1       	rcall	.+1012   	; 0xc10 <_ZN3Pin4ReadEv>
     81c:	18 2b       	or	r17, r24
		this->scl->Clear();
     81e:	8a 81       	ldd	r24, Y+2	; 0x02
     820:	9b 81       	ldd	r25, Y+3	; 0x03
     822:	c7 d1       	rcall	.+910    	; 0xbb2 <_ZN3Pin5ClearEv>
     824:	00 c0       	rjmp	.+0      	; 0x826 <_ZN3I2C8ReadByteEv+0x42>
     826:	00 c0       	rjmp	.+0      	; 0x828 <_ZN3I2C8ReadByteEv+0x44>
     828:	00 00       	nop
		_delay_us(5);
		dataRead = dataRead << 1;
     82a:	11 0f       	add	r17, r17

uint8 I2C::ReadByte()
{
	uint8 dataRead = 0x00;
	this->sda->SetDirection(INPUT);
	for(uint8 i = 0; i < 7; i++)
     82c:	0f 5f       	subi	r16, 0xFF	; 255
     82e:	e5 cf       	rjmp	.-54     	; 0x7fa <_ZN3I2C8ReadByteEv+0x16>
		dataRead |= this->sda->Read();
		this->scl->Clear();
		_delay_us(5);
		dataRead = dataRead << 1;
	}
	this->scl->Clear();
     830:	8a 81       	ldd	r24, Y+2	; 0x02
     832:	9b 81       	ldd	r25, Y+3	; 0x03
     834:	be d1       	rcall	.+892    	; 0xbb2 <_ZN3Pin5ClearEv>
     836:	00 c0       	rjmp	.+0      	; 0x838 <_ZN3I2C8ReadByteEv+0x54>
     838:	00 c0       	rjmp	.+0      	; 0x83a <_ZN3I2C8ReadByteEv+0x56>
     83a:	00 00       	nop
	_delay_us(5);
	this->scl->Set();
     83c:	8a 81       	ldd	r24, Y+2	; 0x02
     83e:	9b 81       	ldd	r25, Y+3	; 0x03
     840:	8c d1       	rcall	.+792    	; 0xb5a <_ZN3Pin3SetEv>
     842:	00 c0       	rjmp	.+0      	; 0x844 <_ZN3I2C8ReadByteEv+0x60>
     844:	00 c0       	rjmp	.+0      	; 0x846 <_ZN3I2C8ReadByteEv+0x62>
     846:	00 00       	nop
	_delay_us(5);
	dataRead |= this->sda->Read();
     848:	88 81       	ld	r24, Y
     84a:	99 81       	ldd	r25, Y+1	; 0x01
     84c:	e1 d1       	rcall	.+962    	; 0xc10 <_ZN3Pin4ReadEv>
     84e:	18 2b       	or	r17, r24
	this->scl->Clear();
     850:	8a 81       	ldd	r24, Y+2	; 0x02
     852:	9b 81       	ldd	r25, Y+3	; 0x03
     854:	ae d1       	rcall	.+860    	; 0xbb2 <_ZN3Pin5ClearEv>
     856:	00 c0       	rjmp	.+0      	; 0x858 <_ZN3I2C8ReadByteEv+0x74>
     858:	00 c0       	rjmp	.+0      	; 0x85a <_ZN3I2C8ReadByteEv+0x76>
     85a:	00 00       	nop
	_delay_us(5);
	this->sda->SetDirection(OUTPUT);
     85c:	61 e0       	ldi	r22, 0x01	; 1
     85e:	88 81       	ld	r24, Y
     860:	99 81       	ldd	r25, Y+1	; 0x01
     862:	1b d1       	rcall	.+566    	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
	return dataRead;
     864:	81 2f       	mov	r24, r17
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	1f 91       	pop	r17
     86c:	0f 91       	pop	r16
     86e:	08 95       	ret

00000870 <_Z7SetUARTv>:
#include "MQ135.h"
#include "BareLCD.h"  

void SetUART() 
{
	UBRRH = (uint8_t)(UBRVALUE >> 8);
     870:	10 bc       	out	0x20, r1	; 32
	UBRRL = (uint8_t)UBRVALUE;
     872:	89 e1       	ldi	r24, 0x19	; 25
     874:	89 b9       	out	0x09, r24	; 9

	UCSRB = (1 << RXEN) | (1 << TXEN);
     876:	88 e1       	ldi	r24, 0x18	; 24
     878:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (1 << USBS) | (3 << UCSZ0);  
     87a:	8e e8       	ldi	r24, 0x8E	; 142
     87c:	80 bd       	out	0x20, r24	; 32
     87e:	08 95       	ret

00000880 <_Z8SendDatac>:
}


void SendData(char data)
{
	while (!(UCSRA & (1 << UDRE)));
     880:	5d 9b       	sbis	0x0b, 5	; 11
     882:	fe cf       	rjmp	.-4      	; 0x880 <_Z8SendDatac>
	UDR = data;
     884:	8c b9       	out	0x0c, r24	; 12
     886:	08 95       	ret

00000888 <_Z11WriteStringPc>:
}


void WriteString(char str[])
{
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	8c 01       	movw	r16, r24
	int i = 0;
     892:	c0 e0       	ldi	r28, 0x00	; 0
     894:	d0 e0       	ldi	r29, 0x00	; 0
	while (str[i] != '\0')
     896:	f8 01       	movw	r30, r16
     898:	ec 0f       	add	r30, r28
     89a:	fd 1f       	adc	r31, r29
     89c:	80 81       	ld	r24, Z
     89e:	88 23       	and	r24, r24
     8a0:	19 f0       	breq	.+6      	; 0x8a8 <_Z11WriteStringPc+0x20>
	{
		SendData(str[i]);
     8a2:	ee df       	rcall	.-36     	; 0x880 <_Z8SendDatac>
		i++;
     8a4:	21 96       	adiw	r28, 0x01	; 1


void WriteString(char str[])
{
	int i = 0;
	while (str[i] != '\0')
     8a6:	f7 cf       	rjmp	.-18     	; 0x896 <_Z11WriteStringPc+0xe>
	{
		SendData(str[i]);
		i++;
	}
}
     8a8:	df 91       	pop	r29
     8aa:	cf 91       	pop	r28
     8ac:	1f 91       	pop	r17
     8ae:	0f 91       	pop	r16
     8b0:	08 95       	ret

000008b2 <main>:

int main(void)
{
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	cd b7       	in	r28, 0x3d	; 61
     8b8:	de b7       	in	r29, 0x3e	; 62
     8ba:	cf 57       	subi	r28, 0x7F	; 127
     8bc:	d1 09       	sbc	r29, r1
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	f8 94       	cli
     8c2:	de bf       	out	0x3e, r29	; 62
     8c4:	0f be       	out	0x3f, r0	; 63
     8c6:	cd bf       	out	0x3d, r28	; 61
	
	Pin scl(IOPORTD, 6, OUTPUT);
     8c8:	21 e0       	ldi	r18, 0x01	; 1
     8ca:	46 e0       	ldi	r20, 0x06	; 6
     8cc:	62 e0       	ldi	r22, 0x02	; 2
     8ce:	ce 01       	movw	r24, r28
     8d0:	01 96       	adiw	r24, 0x01	; 1
     8d2:	3d d1       	rcall	.+634    	; 0xb4e <_ZN3PinC1E6IOPORTh11IODIRECTION>
	Pin sda(IOPORTD, 7, OUTPUT);
     8d4:	21 e0       	ldi	r18, 0x01	; 1
     8d6:	47 e0       	ldi	r20, 0x07	; 7
     8d8:	62 e0       	ldi	r22, 0x02	; 2
     8da:	ce 01       	movw	r24, r28
     8dc:	04 96       	adiw	r24, 0x04	; 4
     8de:	37 d1       	rcall	.+622    	; 0xb4e <_ZN3PinC1E6IOPORTh11IODIRECTION>

	I2C i2c(&sda, &scl);
     8e0:	ae 01       	movw	r20, r28
     8e2:	4f 5f       	subi	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	be 01       	movw	r22, r28
     8e8:	6c 5f       	subi	r22, 0xFC	; 252
     8ea:	7f 4f       	sbci	r23, 0xFF	; 255
     8ec:	ce 01       	movw	r24, r28
     8ee:	07 96       	adiw	r24, 0x07	; 7
     8f0:	a3 de       	rcall	.-698    	; 0x638 <_ZN3I2CC1EP3PinS1_>

	
	GY302 lightSensorObj(&i2c);
     8f2:	be 01       	movw	r22, r28
     8f4:	69 5f       	subi	r22, 0xF9	; 249
     8f6:	7f 4f       	sbci	r23, 0xFF	; 255
     8f8:	ce 01       	movw	r24, r28
     8fa:	0b 96       	adiw	r24, 0x0b	; 11
     8fc:	25 de       	rcall	.-950    	; 0x548 <_ZN5GY302C1EP3I2C>
	AHT10 aht10SensorObj(&i2c);
     8fe:	be 01       	movw	r22, r28
     900:	69 5f       	subi	r22, 0xF9	; 249
     902:	7f 4f       	sbci	r23, 0xFF	; 255
     904:	ce 01       	movw	r24, r28
     906:	0d 96       	adiw	r24, 0x0d	; 13
     908:	f7 db       	rcall	.-2066   	; 0xf8 <_ZN5AHT10C1EP3I2C>
	MQ135 mqObj;
     90a:	ce 01       	movw	r24, r28
     90c:	0f 96       	adiw	r24, 0x0f	; 15
     90e:	94 d0       	rcall	.+296    	; 0xa38 <_ZN5MQ135C1Ev>

	
	BareLCD lcd(&i2c);
     910:	47 e2       	ldi	r20, 0x27	; 39
     912:	be 01       	movw	r22, r28
     914:	69 5f       	subi	r22, 0xF9	; 249
     916:	7f 4f       	sbci	r23, 0xFF	; 255
     918:	ce 01       	movw	r24, r28
     91a:	41 96       	adiw	r24, 0x11	; 17
     91c:	2e dd       	rcall	.-1444   	; 0x37a <_ZN7BareLCDC1EP3I2Ch>
	lcd.begin();  
     91e:	ce 01       	movw	r24, r28
     920:	41 96       	adiw	r24, 0x11	; 17
     922:	bf dd       	rcall	.-1154   	; 0x4a2 <_ZN7BareLCD5beginEv>

	
	SetUART();
     924:	a5 df       	rcall	.-182    	; 0x870 <_Z7SetUARTv>

	while (1)
	{
		float temperature, humidity, lightIntensity;
		aht10SensorObj.ReadTemperatureAndHumidity(&temperature, &humidity);
     926:	ae 01       	movw	r20, r28
     928:	48 58       	subi	r20, 0x88	; 136
     92a:	5f 4f       	sbci	r21, 0xFF	; 255
     92c:	be 01       	movw	r22, r28
     92e:	64 58       	subi	r22, 0x84	; 132
     930:	7f 4f       	sbci	r23, 0xFF	; 255
     932:	ce 01       	movw	r24, r28
     934:	0d 96       	adiw	r24, 0x0d	; 13
     936:	e4 db       	rcall	.-2104   	; 0x100 <_ZN5AHT1026ReadTemperatureAndHumidityEPfS0_>
		lightIntensity = lightSensorObj.ReadLightIntensity();
     938:	ce 01       	movw	r24, r28
     93a:	0b 96       	adiw	r24, 0x0b	; 11
     93c:	09 de       	rcall	.-1006   	; 0x550 <_ZN5GY30218ReadLightIntensityEv>
     93e:	2b 01       	movw	r4, r22
     940:	3c 01       	movw	r6, r24
		float PPM = mqObj.getPPM();
     942:	ce 01       	movw	r24, r28
     944:	0f 96       	adiw	r24, 0x0f	; 15
     946:	98 d0       	rcall	.+304    	; 0xa78 <_ZN5MQ1356getPPMEv>
     948:	4b 01       	movw	r8, r22
     94a:	5c 01       	movw	r10, r24

		
		char buffer[100];
		int tempInt = (int)(temperature * 10);
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	40 e2       	ldi	r20, 0x20	; 32
     952:	51 e4       	ldi	r21, 0x41	; 65
     954:	c4 58       	subi	r28, 0x84	; 132
     956:	df 4f       	sbci	r29, 0xFF	; 255
     958:	68 81       	ld	r22, Y
     95a:	79 81       	ldd	r23, Y+1	; 0x01
     95c:	8a 81       	ldd	r24, Y+2	; 0x02
     95e:	9b 81       	ldd	r25, Y+3	; 0x03
     960:	cc 57       	subi	r28, 0x7C	; 124
     962:	d0 40       	sbci	r29, 0x00	; 0
     964:	0e d3       	rcall	.+1564   	; 0xf82 <__mulsf3>
     966:	4e d2       	rcall	.+1180   	; 0xe04 <__fixsfsi>
     968:	8b 01       	movw	r16, r22
		int humInt = (int)(humidity * 10);
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	30 e0       	ldi	r19, 0x00	; 0
     96e:	40 e2       	ldi	r20, 0x20	; 32
     970:	51 e4       	ldi	r21, 0x41	; 65
     972:	ec 96       	adiw	r28, 0x3c	; 60
     974:	6c ad       	ldd	r22, Y+60	; 0x3c
     976:	7d ad       	ldd	r23, Y+61	; 0x3d
     978:	8e ad       	ldd	r24, Y+62	; 0x3e
     97a:	9f ad       	ldd	r25, Y+63	; 0x3f
     97c:	ec 97       	sbiw	r28, 0x3c	; 60
     97e:	01 d3       	rcall	.+1538   	; 0xf82 <__mulsf3>
     980:	41 d2       	rcall	.+1154   	; 0xe04 <__fixsfsi>
     982:	7b 01       	movw	r14, r22
		int lightInt = (int)(lightIntensity * 10);
     984:	20 e0       	ldi	r18, 0x00	; 0
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	40 e2       	ldi	r20, 0x20	; 32
     98a:	51 e4       	ldi	r21, 0x41	; 65
     98c:	c3 01       	movw	r24, r6
     98e:	b2 01       	movw	r22, r4
     990:	f8 d2       	rcall	.+1520   	; 0xf82 <__mulsf3>
     992:	38 d2       	rcall	.+1136   	; 0xe04 <__fixsfsi>
     994:	6b 01       	movw	r12, r22
		int ppmInt = (int)(PPM * 10);
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	40 e2       	ldi	r20, 0x20	; 32
     99c:	51 e4       	ldi	r21, 0x41	; 65
     99e:	c5 01       	movw	r24, r10
     9a0:	b4 01       	movw	r22, r8
     9a2:	ef d2       	rcall	.+1502   	; 0xf82 <__mulsf3>
     9a4:	2f d2       	rcall	.+1118   	; 0xe04 <__fixsfsi>

		sprintf(buffer, "T:%d.%dC,H:%d.%d%%LI:%d.%d,PPM:%d.%d\r\n",
     9a6:	2a e0       	ldi	r18, 0x0A	; 10
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	cb 01       	movw	r24, r22
     9ac:	b9 01       	movw	r22, r18
     9ae:	b1 d4       	rcall	.+2402   	; 0x1312 <__divmodhi4>
     9b0:	b6 2e       	mov	r11, r22
     9b2:	a7 2e       	mov	r10, r23
     9b4:	98 2e       	mov	r9, r24
     9b6:	89 2e       	mov	r8, r25
     9b8:	c6 01       	movw	r24, r12
     9ba:	b9 01       	movw	r22, r18
     9bc:	aa d4       	rcall	.+2388   	; 0x1312 <__divmodhi4>
     9be:	d6 2e       	mov	r13, r22
     9c0:	c7 2e       	mov	r12, r23
     9c2:	78 2e       	mov	r7, r24
     9c4:	69 2e       	mov	r6, r25
     9c6:	c7 01       	movw	r24, r14
     9c8:	b9 01       	movw	r22, r18
     9ca:	a3 d4       	rcall	.+2374   	; 0x1312 <__divmodhi4>
     9cc:	46 2f       	mov	r20, r22
     9ce:	e7 2f       	mov	r30, r23
     9d0:	f8 2f       	mov	r31, r24
     9d2:	f9 2e       	mov	r15, r25
     9d4:	c8 01       	movw	r24, r16
     9d6:	b9 01       	movw	r22, r18
     9d8:	9c d4       	rcall	.+2360   	; 0x1312 <__divmodhi4>
		tempInt / 10, tempInt % 10,
		humInt / 10, humInt % 10,
		lightInt / 10, lightInt % 10,
		ppmInt / 10, ppmInt % 10);
     9da:	8f 92       	push	r8
     9dc:	9f 92       	push	r9
     9de:	af 92       	push	r10
     9e0:	bf 92       	push	r11
     9e2:	6f 92       	push	r6
     9e4:	7f 92       	push	r7
     9e6:	cf 92       	push	r12
     9e8:	df 92       	push	r13
     9ea:	ff 92       	push	r15
     9ec:	ff 93       	push	r31
     9ee:	ef 93       	push	r30
     9f0:	4f 93       	push	r20
     9f2:	9f 93       	push	r25
     9f4:	8f 93       	push	r24
     9f6:	7f 93       	push	r23
     9f8:	6f 93       	push	r22
     9fa:	80 e6       	ldi	r24, 0x60	; 96
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	9f 93       	push	r25
     a00:	8f 93       	push	r24
     a02:	8e 01       	movw	r16, r28
     a04:	0c 5e       	subi	r16, 0xEC	; 236
     a06:	1f 4f       	sbci	r17, 0xFF	; 255
     a08:	1f 93       	push	r17
     a0a:	0f 93       	push	r16
     a0c:	a9 d4       	rcall	.+2386   	; 0x1360 <sprintf>

		WriteString(buffer);   
     a0e:	c8 01       	movw	r24, r16
     a10:	3b df       	rcall	.-394    	; 0x888 <_Z11WriteStringPc>
		lcd.print(buffer);     
     a12:	b8 01       	movw	r22, r16
     a14:	ce 01       	movw	r24, r28
     a16:	41 96       	adiw	r24, 0x11	; 17
     a18:	66 dd       	rcall	.-1332   	; 0x4e6 <_ZN7BareLCD5printEPKc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a1a:	2f e3       	ldi	r18, 0x3F	; 63
     a1c:	8d e0       	ldi	r24, 0x0D	; 13
     a1e:	93 e0       	ldi	r25, 0x03	; 3
     a20:	21 50       	subi	r18, 0x01	; 1
     a22:	80 40       	sbci	r24, 0x00	; 0
     a24:	90 40       	sbci	r25, 0x00	; 0
     a26:	e1 f7       	brne	.-8      	; 0xa20 <main+0x16e>
     a28:	00 c0       	rjmp	.+0      	; 0xa2a <main+0x178>
     a2a:	00 00       	nop
     a2c:	0f b6       	in	r0, 0x3f	; 63
     a2e:	f8 94       	cli
     a30:	de bf       	out	0x3e, r29	; 62
     a32:	0f be       	out	0x3f, r0	; 63
     a34:	cd bf       	out	0x3d, r28	; 61
     a36:	77 cf       	rjmp	.-274    	; 0x926 <main+0x74>

00000a38 <_ZN5MQ135C1Ev>:


float MQ135::getCorrectedResistance(float t, float h) 
{
  return getResistance()/getCorrectionFactor(t, h);
}
     a38:	08 95       	ret

00000a3a <_ZN5MQ13513getResistanceEv>:
     a3a:	65 e0       	ldi	r22, 0x05	; 5
     a3c:	87 e0       	ldi	r24, 0x07	; 7
     a3e:	48 db       	rcall	.-2416   	; 0xd0 <_ZN12A2DConverter9ReadValueE13ADC_PRESCALAR12ADC_CHANNELS>
     a40:	bc 01       	movw	r22, r24
     a42:	99 0f       	add	r25, r25
     a44:	88 0b       	sbc	r24, r24
     a46:	99 0b       	sbc	r25, r25
     a48:	10 d2       	rcall	.+1056   	; 0xe6a <__floatsisf>
     a4a:	9b 01       	movw	r18, r22
     a4c:	ac 01       	movw	r20, r24
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	70 ec       	ldi	r23, 0xC0	; 192
     a52:	8f e7       	ldi	r24, 0x7F	; 127
     a54:	94 e4       	ldi	r25, 0x44	; 68
     a56:	6e d1       	rcall	.+732    	; 0xd34 <__divsf3>
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 ea       	ldi	r20, 0xA0	; 160
     a5e:	50 e4       	ldi	r21, 0x40	; 64
     a60:	90 d2       	rcall	.+1312   	; 0xf82 <__mulsf3>
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 e8       	ldi	r20, 0x80	; 128
     a68:	5f e3       	ldi	r21, 0x3F	; 63
     a6a:	ff d0       	rcall	.+510    	; 0xc6a <__subsf3>
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	40 e2       	ldi	r20, 0x20	; 32
     a72:	51 e4       	ldi	r21, 0x41	; 65
     a74:	86 d2       	rcall	.+1292   	; 0xf82 <__mulsf3>
     a76:	08 95       	ret

00000a78 <_ZN5MQ1356getPPMEv>:

float MQ135::getPPM() 
{
	return  PARA * pow((getResistance()/RZERO), -PARB);
     a78:	e0 df       	rcall	.-64     	; 0xa3a <_ZN5MQ13513getResistanceEv>
     a7a:	2f e8       	ldi	r18, 0x8F	; 143
     a7c:	32 e4       	ldi	r19, 0x42	; 66
     a7e:	49 e9       	ldi	r20, 0x99	; 153
     a80:	52 e4       	ldi	r21, 0x42	; 66
     a82:	58 d1       	rcall	.+688    	; 0xd34 <__divsf3>
     a84:	2e ed       	ldi	r18, 0xDE	; 222
     a86:	37 e3       	ldi	r19, 0x37	; 55
     a88:	41 e3       	ldi	r20, 0x31	; 49
     a8a:	50 ec       	ldi	r21, 0xC0	; 192
     a8c:	dd d2       	rcall	.+1466   	; 0x1048 <pow>
     a8e:	22 e4       	ldi	r18, 0x42	; 66
     a90:	34 e3       	ldi	r19, 0x34	; 52
     a92:	49 ee       	ldi	r20, 0xE9	; 233
     a94:	52 e4       	ldi	r21, 0x42	; 66
     a96:	75 d2       	rcall	.+1258   	; 0xf82 <__mulsf3>
}
     a98:	08 95       	ret

00000a9a <_ZN3Pin12SetDirectionE11IODIRECTION>:
{
	switch(port)
	{
		case IOPORTB:	PORTB ^= (1 << position); break;
		case IOPORTC:	PORTC ^= (1 << position); break;
		case IOPORTD:	PORTD ^= (1 << position); break;
     a9a:	fc 01       	movw	r30, r24
     a9c:	61 83       	std	Z+1, r22	; 0x01
     a9e:	80 81       	ld	r24, Z
     aa0:	81 30       	cpi	r24, 0x01	; 1
     aa2:	f9 f0       	breq	.+62     	; 0xae2 <_ZN3Pin12SetDirectionE11IODIRECTION+0x48>
     aa4:	18 f0       	brcs	.+6      	; 0xaac <_ZN3Pin12SetDirectionE11IODIRECTION+0x12>
     aa6:	82 30       	cpi	r24, 0x02	; 2
     aa8:	b9 f1       	breq	.+110    	; 0xb18 <_ZN3Pin12SetDirectionE11IODIRECTION+0x7e>
     aaa:	08 95       	ret
     aac:	61 11       	cpse	r22, r1
     aae:	0d c0       	rjmp	.+26     	; 0xaca <_ZN3Pin12SetDirectionE11IODIRECTION+0x30>
     ab0:	27 b3       	in	r18, 0x17	; 23
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	02 80       	ldd	r0, Z+2	; 0x02
     ab8:	02 c0       	rjmp	.+4      	; 0xabe <_ZN3Pin12SetDirectionE11IODIRECTION+0x24>
     aba:	88 0f       	add	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	0a 94       	dec	r0
     ac0:	e2 f7       	brpl	.-8      	; 0xaba <_ZN3Pin12SetDirectionE11IODIRECTION+0x20>
     ac2:	80 95       	com	r24
     ac4:	82 23       	and	r24, r18
     ac6:	87 bb       	out	0x17, r24	; 23
     ac8:	08 95       	ret
     aca:	27 b3       	in	r18, 0x17	; 23
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	02 80       	ldd	r0, Z+2	; 0x02
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <_ZN3Pin12SetDirectionE11IODIRECTION+0x3e>
     ad4:	88 0f       	add	r24, r24
     ad6:	99 1f       	adc	r25, r25
     ad8:	0a 94       	dec	r0
     ada:	e2 f7       	brpl	.-8      	; 0xad4 <_ZN3Pin12SetDirectionE11IODIRECTION+0x3a>
     adc:	82 2b       	or	r24, r18
     ade:	87 bb       	out	0x17, r24	; 23
     ae0:	08 95       	ret
     ae2:	61 11       	cpse	r22, r1
     ae4:	0d c0       	rjmp	.+26     	; 0xb00 <_ZN3Pin12SetDirectionE11IODIRECTION+0x66>
     ae6:	24 b3       	in	r18, 0x14	; 20
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	02 80       	ldd	r0, Z+2	; 0x02
     aee:	02 c0       	rjmp	.+4      	; 0xaf4 <_ZN3Pin12SetDirectionE11IODIRECTION+0x5a>
     af0:	88 0f       	add	r24, r24
     af2:	99 1f       	adc	r25, r25
     af4:	0a 94       	dec	r0
     af6:	e2 f7       	brpl	.-8      	; 0xaf0 <_ZN3Pin12SetDirectionE11IODIRECTION+0x56>
     af8:	80 95       	com	r24
     afa:	82 23       	and	r24, r18
     afc:	84 bb       	out	0x14, r24	; 20
     afe:	08 95       	ret
     b00:	24 b3       	in	r18, 0x14	; 20
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	02 80       	ldd	r0, Z+2	; 0x02
     b08:	02 c0       	rjmp	.+4      	; 0xb0e <_ZN3Pin12SetDirectionE11IODIRECTION+0x74>
     b0a:	88 0f       	add	r24, r24
     b0c:	99 1f       	adc	r25, r25
     b0e:	0a 94       	dec	r0
     b10:	e2 f7       	brpl	.-8      	; 0xb0a <_ZN3Pin12SetDirectionE11IODIRECTION+0x70>
     b12:	82 2b       	or	r24, r18
     b14:	84 bb       	out	0x14, r24	; 20
     b16:	08 95       	ret
     b18:	61 11       	cpse	r22, r1
     b1a:	0d c0       	rjmp	.+26     	; 0xb36 <_ZN3Pin12SetDirectionE11IODIRECTION+0x9c>
     b1c:	21 b3       	in	r18, 0x11	; 17
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	02 80       	ldd	r0, Z+2	; 0x02
     b24:	02 c0       	rjmp	.+4      	; 0xb2a <_ZN3Pin12SetDirectionE11IODIRECTION+0x90>
     b26:	88 0f       	add	r24, r24
     b28:	99 1f       	adc	r25, r25
     b2a:	0a 94       	dec	r0
     b2c:	e2 f7       	brpl	.-8      	; 0xb26 <_ZN3Pin12SetDirectionE11IODIRECTION+0x8c>
     b2e:	80 95       	com	r24
     b30:	82 23       	and	r24, r18
     b32:	81 bb       	out	0x11, r24	; 17
     b34:	08 95       	ret
     b36:	21 b3       	in	r18, 0x11	; 17
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	02 80       	ldd	r0, Z+2	; 0x02
     b3e:	02 c0       	rjmp	.+4      	; 0xb44 <_ZN3Pin12SetDirectionE11IODIRECTION+0xaa>
     b40:	88 0f       	add	r24, r24
     b42:	99 1f       	adc	r25, r25
     b44:	0a 94       	dec	r0
     b46:	e2 f7       	brpl	.-8      	; 0xb40 <_ZN3Pin12SetDirectionE11IODIRECTION+0xa6>
     b48:	82 2b       	or	r24, r18
     b4a:	81 bb       	out	0x11, r24	; 17
     b4c:	08 95       	ret

00000b4e <_ZN3PinC1E6IOPORTh11IODIRECTION>:
     b4e:	fc 01       	movw	r30, r24
     b50:	60 83       	st	Z, r22
     b52:	42 83       	std	Z+2, r20	; 0x02
     b54:	62 2f       	mov	r22, r18
     b56:	a1 df       	rcall	.-190    	; 0xa9a <_ZN3Pin12SetDirectionE11IODIRECTION>
     b58:	08 95       	ret

00000b5a <_ZN3Pin3SetEv>:
     b5a:	fc 01       	movw	r30, r24
     b5c:	90 81       	ld	r25, Z
     b5e:	91 30       	cpi	r25, 0x01	; 1
     b60:	81 f0       	breq	.+32     	; 0xb82 <_ZN3Pin3SetEv+0x28>
     b62:	18 f0       	brcs	.+6      	; 0xb6a <_ZN3Pin3SetEv+0x10>
     b64:	92 30       	cpi	r25, 0x02	; 2
     b66:	c9 f0       	breq	.+50     	; 0xb9a <_ZN3Pin3SetEv+0x40>
     b68:	08 95       	ret
     b6a:	28 b3       	in	r18, 0x18	; 24
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	02 80       	ldd	r0, Z+2	; 0x02
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <_ZN3Pin3SetEv+0x1e>
     b74:	88 0f       	add	r24, r24
     b76:	99 1f       	adc	r25, r25
     b78:	0a 94       	dec	r0
     b7a:	e2 f7       	brpl	.-8      	; 0xb74 <_ZN3Pin3SetEv+0x1a>
     b7c:	82 2b       	or	r24, r18
     b7e:	88 bb       	out	0x18, r24	; 24
     b80:	08 95       	ret
     b82:	25 b3       	in	r18, 0x15	; 21
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	02 80       	ldd	r0, Z+2	; 0x02
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <_ZN3Pin3SetEv+0x36>
     b8c:	88 0f       	add	r24, r24
     b8e:	99 1f       	adc	r25, r25
     b90:	0a 94       	dec	r0
     b92:	e2 f7       	brpl	.-8      	; 0xb8c <_ZN3Pin3SetEv+0x32>
     b94:	82 2b       	or	r24, r18
     b96:	85 bb       	out	0x15, r24	; 21
     b98:	08 95       	ret
     b9a:	22 b3       	in	r18, 0x12	; 18
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	02 80       	ldd	r0, Z+2	; 0x02
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <_ZN3Pin3SetEv+0x4e>
     ba4:	88 0f       	add	r24, r24
     ba6:	99 1f       	adc	r25, r25
     ba8:	0a 94       	dec	r0
     baa:	e2 f7       	brpl	.-8      	; 0xba4 <_ZN3Pin3SetEv+0x4a>
     bac:	82 2b       	or	r24, r18
     bae:	82 bb       	out	0x12, r24	; 18
     bb0:	08 95       	ret

00000bb2 <_ZN3Pin5ClearEv>:
     bb2:	fc 01       	movw	r30, r24
     bb4:	90 81       	ld	r25, Z
     bb6:	91 30       	cpi	r25, 0x01	; 1
     bb8:	89 f0       	breq	.+34     	; 0xbdc <_ZN3Pin5ClearEv+0x2a>
     bba:	18 f0       	brcs	.+6      	; 0xbc2 <_ZN3Pin5ClearEv+0x10>
     bbc:	92 30       	cpi	r25, 0x02	; 2
     bbe:	d9 f0       	breq	.+54     	; 0xbf6 <_ZN3Pin5ClearEv+0x44>
     bc0:	08 95       	ret
     bc2:	28 b3       	in	r18, 0x18	; 24
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	02 80       	ldd	r0, Z+2	; 0x02
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <_ZN3Pin5ClearEv+0x1e>
     bcc:	88 0f       	add	r24, r24
     bce:	99 1f       	adc	r25, r25
     bd0:	0a 94       	dec	r0
     bd2:	e2 f7       	brpl	.-8      	; 0xbcc <_ZN3Pin5ClearEv+0x1a>
     bd4:	80 95       	com	r24
     bd6:	82 23       	and	r24, r18
     bd8:	88 bb       	out	0x18, r24	; 24
     bda:	08 95       	ret
     bdc:	25 b3       	in	r18, 0x15	; 21
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	02 80       	ldd	r0, Z+2	; 0x02
     be4:	02 c0       	rjmp	.+4      	; 0xbea <_ZN3Pin5ClearEv+0x38>
     be6:	88 0f       	add	r24, r24
     be8:	99 1f       	adc	r25, r25
     bea:	0a 94       	dec	r0
     bec:	e2 f7       	brpl	.-8      	; 0xbe6 <_ZN3Pin5ClearEv+0x34>
     bee:	80 95       	com	r24
     bf0:	82 23       	and	r24, r18
     bf2:	85 bb       	out	0x15, r24	; 21
     bf4:	08 95       	ret
     bf6:	22 b3       	in	r18, 0x12	; 18
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	02 80       	ldd	r0, Z+2	; 0x02
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <_ZN3Pin5ClearEv+0x52>
     c00:	88 0f       	add	r24, r24
     c02:	99 1f       	adc	r25, r25
     c04:	0a 94       	dec	r0
     c06:	e2 f7       	brpl	.-8      	; 0xc00 <_ZN3Pin5ClearEv+0x4e>
     c08:	80 95       	com	r24
     c0a:	82 23       	and	r24, r18
     c0c:	82 bb       	out	0x12, r24	; 18
     c0e:	08 95       	ret

00000c10 <_ZN3Pin4ReadEv>:
	}
}

uint8 Pin::Read()
{
     c10:	fc 01       	movw	r30, r24
	uint8 data;
	switch(port)
     c12:	90 81       	ld	r25, Z
     c14:	91 30       	cpi	r25, 0x01	; 1
     c16:	81 f0       	breq	.+32     	; 0xc38 <_ZN3Pin4ReadEv+0x28>
     c18:	18 f0       	brcs	.+6      	; 0xc20 <_ZN3Pin4ReadEv+0x10>
     c1a:	92 30       	cpi	r25, 0x02	; 2
     c1c:	c9 f0       	breq	.+50     	; 0xc50 <_ZN3Pin4ReadEv+0x40>
     c1e:	23 c0       	rjmp	.+70     	; 0xc66 <_ZN3Pin4ReadEv+0x56>
	{
		case IOPORTB:	data = PINB & (1 << position) ? 0x01: 0x00; break;
     c20:	26 b3       	in	r18, 0x16	; 22
     c22:	30 e0       	ldi	r19, 0x00	; 0
     c24:	c9 01       	movw	r24, r18
     c26:	02 80       	ldd	r0, Z+2	; 0x02
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <_ZN3Pin4ReadEv+0x1e>
     c2a:	95 95       	asr	r25
     c2c:	87 95       	ror	r24
     c2e:	0a 94       	dec	r0
     c30:	e2 f7       	brpl	.-8      	; 0xc2a <_ZN3Pin4ReadEv+0x1a>
     c32:	28 2f       	mov	r18, r24
     c34:	21 70       	andi	r18, 0x01	; 1
     c36:	17 c0       	rjmp	.+46     	; 0xc66 <_ZN3Pin4ReadEv+0x56>
		case IOPORTC:	data = PINC & (1 << position) ? 0x01: 0x00; break;
     c38:	23 b3       	in	r18, 0x13	; 19
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	c9 01       	movw	r24, r18
     c3e:	02 80       	ldd	r0, Z+2	; 0x02
     c40:	02 c0       	rjmp	.+4      	; 0xc46 <_ZN3Pin4ReadEv+0x36>
     c42:	95 95       	asr	r25
     c44:	87 95       	ror	r24
     c46:	0a 94       	dec	r0
     c48:	e2 f7       	brpl	.-8      	; 0xc42 <_ZN3Pin4ReadEv+0x32>
     c4a:	28 2f       	mov	r18, r24
     c4c:	21 70       	andi	r18, 0x01	; 1
     c4e:	0b c0       	rjmp	.+22     	; 0xc66 <_ZN3Pin4ReadEv+0x56>
		case IOPORTD:	data = PIND & (1 << position) ? 0x01: 0x00; break;
     c50:	20 b3       	in	r18, 0x10	; 16
     c52:	30 e0       	ldi	r19, 0x00	; 0
     c54:	c9 01       	movw	r24, r18
     c56:	02 80       	ldd	r0, Z+2	; 0x02
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <_ZN3Pin4ReadEv+0x4e>
     c5a:	95 95       	asr	r25
     c5c:	87 95       	ror	r24
     c5e:	0a 94       	dec	r0
     c60:	e2 f7       	brpl	.-8      	; 0xc5a <_ZN3Pin4ReadEv+0x4a>
     c62:	28 2f       	mov	r18, r24
     c64:	21 70       	andi	r18, 0x01	; 1
	}
	return data;	
     c66:	82 2f       	mov	r24, r18
     c68:	08 95       	ret

00000c6a <__subsf3>:
     c6a:	50 58       	subi	r21, 0x80	; 128

00000c6c <__addsf3>:
     c6c:	bb 27       	eor	r27, r27
     c6e:	aa 27       	eor	r26, r26
     c70:	0e d0       	rcall	.+28     	; 0xc8e <__addsf3x>
     c72:	4d c1       	rjmp	.+666    	; 0xf0e <__fp_round>
     c74:	3e d1       	rcall	.+636    	; 0xef2 <__fp_pscA>
     c76:	30 f0       	brcs	.+12     	; 0xc84 <__addsf3+0x18>
     c78:	43 d1       	rcall	.+646    	; 0xf00 <__fp_pscB>
     c7a:	20 f0       	brcs	.+8      	; 0xc84 <__addsf3+0x18>
     c7c:	31 f4       	brne	.+12     	; 0xc8a <__addsf3+0x1e>
     c7e:	9f 3f       	cpi	r25, 0xFF	; 255
     c80:	11 f4       	brne	.+4      	; 0xc86 <__addsf3+0x1a>
     c82:	1e f4       	brtc	.+6      	; 0xc8a <__addsf3+0x1e>
     c84:	33 c1       	rjmp	.+614    	; 0xeec <__fp_nan>
     c86:	0e f4       	brtc	.+2      	; 0xc8a <__addsf3+0x1e>
     c88:	e0 95       	com	r30
     c8a:	e7 fb       	bst	r30, 7
     c8c:	29 c1       	rjmp	.+594    	; 0xee0 <__fp_inf>

00000c8e <__addsf3x>:
     c8e:	e9 2f       	mov	r30, r25
     c90:	4f d1       	rcall	.+670    	; 0xf30 <__fp_split3>
     c92:	80 f3       	brcs	.-32     	; 0xc74 <__addsf3+0x8>
     c94:	ba 17       	cp	r27, r26
     c96:	62 07       	cpc	r22, r18
     c98:	73 07       	cpc	r23, r19
     c9a:	84 07       	cpc	r24, r20
     c9c:	95 07       	cpc	r25, r21
     c9e:	18 f0       	brcs	.+6      	; 0xca6 <__addsf3x+0x18>
     ca0:	71 f4       	brne	.+28     	; 0xcbe <__addsf3x+0x30>
     ca2:	9e f5       	brtc	.+102    	; 0xd0a <__addsf3x+0x7c>
     ca4:	67 c1       	rjmp	.+718    	; 0xf74 <__fp_zero>
     ca6:	0e f4       	brtc	.+2      	; 0xcaa <__addsf3x+0x1c>
     ca8:	e0 95       	com	r30
     caa:	0b 2e       	mov	r0, r27
     cac:	ba 2f       	mov	r27, r26
     cae:	a0 2d       	mov	r26, r0
     cb0:	0b 01       	movw	r0, r22
     cb2:	b9 01       	movw	r22, r18
     cb4:	90 01       	movw	r18, r0
     cb6:	0c 01       	movw	r0, r24
     cb8:	ca 01       	movw	r24, r20
     cba:	a0 01       	movw	r20, r0
     cbc:	11 24       	eor	r1, r1
     cbe:	ff 27       	eor	r31, r31
     cc0:	59 1b       	sub	r21, r25
     cc2:	99 f0       	breq	.+38     	; 0xcea <__addsf3x+0x5c>
     cc4:	59 3f       	cpi	r21, 0xF9	; 249
     cc6:	50 f4       	brcc	.+20     	; 0xcdc <__addsf3x+0x4e>
     cc8:	50 3e       	cpi	r21, 0xE0	; 224
     cca:	68 f1       	brcs	.+90     	; 0xd26 <__addsf3x+0x98>
     ccc:	1a 16       	cp	r1, r26
     cce:	f0 40       	sbci	r31, 0x00	; 0
     cd0:	a2 2f       	mov	r26, r18
     cd2:	23 2f       	mov	r18, r19
     cd4:	34 2f       	mov	r19, r20
     cd6:	44 27       	eor	r20, r20
     cd8:	58 5f       	subi	r21, 0xF8	; 248
     cda:	f3 cf       	rjmp	.-26     	; 0xcc2 <__addsf3x+0x34>
     cdc:	46 95       	lsr	r20
     cde:	37 95       	ror	r19
     ce0:	27 95       	ror	r18
     ce2:	a7 95       	ror	r26
     ce4:	f0 40       	sbci	r31, 0x00	; 0
     ce6:	53 95       	inc	r21
     ce8:	c9 f7       	brne	.-14     	; 0xcdc <__addsf3x+0x4e>
     cea:	7e f4       	brtc	.+30     	; 0xd0a <__addsf3x+0x7c>
     cec:	1f 16       	cp	r1, r31
     cee:	ba 0b       	sbc	r27, r26
     cf0:	62 0b       	sbc	r22, r18
     cf2:	73 0b       	sbc	r23, r19
     cf4:	84 0b       	sbc	r24, r20
     cf6:	ba f0       	brmi	.+46     	; 0xd26 <__addsf3x+0x98>
     cf8:	91 50       	subi	r25, 0x01	; 1
     cfa:	a1 f0       	breq	.+40     	; 0xd24 <__addsf3x+0x96>
     cfc:	ff 0f       	add	r31, r31
     cfe:	bb 1f       	adc	r27, r27
     d00:	66 1f       	adc	r22, r22
     d02:	77 1f       	adc	r23, r23
     d04:	88 1f       	adc	r24, r24
     d06:	c2 f7       	brpl	.-16     	; 0xcf8 <__addsf3x+0x6a>
     d08:	0e c0       	rjmp	.+28     	; 0xd26 <__addsf3x+0x98>
     d0a:	ba 0f       	add	r27, r26
     d0c:	62 1f       	adc	r22, r18
     d0e:	73 1f       	adc	r23, r19
     d10:	84 1f       	adc	r24, r20
     d12:	48 f4       	brcc	.+18     	; 0xd26 <__addsf3x+0x98>
     d14:	87 95       	ror	r24
     d16:	77 95       	ror	r23
     d18:	67 95       	ror	r22
     d1a:	b7 95       	ror	r27
     d1c:	f7 95       	ror	r31
     d1e:	9e 3f       	cpi	r25, 0xFE	; 254
     d20:	08 f0       	brcs	.+2      	; 0xd24 <__addsf3x+0x96>
     d22:	b3 cf       	rjmp	.-154    	; 0xc8a <__addsf3+0x1e>
     d24:	93 95       	inc	r25
     d26:	88 0f       	add	r24, r24
     d28:	08 f0       	brcs	.+2      	; 0xd2c <__addsf3x+0x9e>
     d2a:	99 27       	eor	r25, r25
     d2c:	ee 0f       	add	r30, r30
     d2e:	97 95       	ror	r25
     d30:	87 95       	ror	r24
     d32:	08 95       	ret

00000d34 <__divsf3>:
     d34:	0c d0       	rcall	.+24     	; 0xd4e <__divsf3x>
     d36:	eb c0       	rjmp	.+470    	; 0xf0e <__fp_round>
     d38:	e3 d0       	rcall	.+454    	; 0xf00 <__fp_pscB>
     d3a:	40 f0       	brcs	.+16     	; 0xd4c <__divsf3+0x18>
     d3c:	da d0       	rcall	.+436    	; 0xef2 <__fp_pscA>
     d3e:	30 f0       	brcs	.+12     	; 0xd4c <__divsf3+0x18>
     d40:	21 f4       	brne	.+8      	; 0xd4a <__divsf3+0x16>
     d42:	5f 3f       	cpi	r21, 0xFF	; 255
     d44:	19 f0       	breq	.+6      	; 0xd4c <__divsf3+0x18>
     d46:	cc c0       	rjmp	.+408    	; 0xee0 <__fp_inf>
     d48:	51 11       	cpse	r21, r1
     d4a:	15 c1       	rjmp	.+554    	; 0xf76 <__fp_szero>
     d4c:	cf c0       	rjmp	.+414    	; 0xeec <__fp_nan>

00000d4e <__divsf3x>:
     d4e:	f0 d0       	rcall	.+480    	; 0xf30 <__fp_split3>
     d50:	98 f3       	brcs	.-26     	; 0xd38 <__divsf3+0x4>

00000d52 <__divsf3_pse>:
     d52:	99 23       	and	r25, r25
     d54:	c9 f3       	breq	.-14     	; 0xd48 <__divsf3+0x14>
     d56:	55 23       	and	r21, r21
     d58:	b1 f3       	breq	.-20     	; 0xd46 <__divsf3+0x12>
     d5a:	95 1b       	sub	r25, r21
     d5c:	55 0b       	sbc	r21, r21
     d5e:	bb 27       	eor	r27, r27
     d60:	aa 27       	eor	r26, r26
     d62:	62 17       	cp	r22, r18
     d64:	73 07       	cpc	r23, r19
     d66:	84 07       	cpc	r24, r20
     d68:	38 f0       	brcs	.+14     	; 0xd78 <__divsf3_pse+0x26>
     d6a:	9f 5f       	subi	r25, 0xFF	; 255
     d6c:	5f 4f       	sbci	r21, 0xFF	; 255
     d6e:	22 0f       	add	r18, r18
     d70:	33 1f       	adc	r19, r19
     d72:	44 1f       	adc	r20, r20
     d74:	aa 1f       	adc	r26, r26
     d76:	a9 f3       	breq	.-22     	; 0xd62 <__divsf3_pse+0x10>
     d78:	33 d0       	rcall	.+102    	; 0xde0 <__divsf3_pse+0x8e>
     d7a:	0e 2e       	mov	r0, r30
     d7c:	3a f0       	brmi	.+14     	; 0xd8c <__divsf3_pse+0x3a>
     d7e:	e0 e8       	ldi	r30, 0x80	; 128
     d80:	30 d0       	rcall	.+96     	; 0xde2 <__divsf3_pse+0x90>
     d82:	91 50       	subi	r25, 0x01	; 1
     d84:	50 40       	sbci	r21, 0x00	; 0
     d86:	e6 95       	lsr	r30
     d88:	00 1c       	adc	r0, r0
     d8a:	ca f7       	brpl	.-14     	; 0xd7e <__divsf3_pse+0x2c>
     d8c:	29 d0       	rcall	.+82     	; 0xde0 <__divsf3_pse+0x8e>
     d8e:	fe 2f       	mov	r31, r30
     d90:	27 d0       	rcall	.+78     	; 0xde0 <__divsf3_pse+0x8e>
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	bb 1f       	adc	r27, r27
     d9a:	26 17       	cp	r18, r22
     d9c:	37 07       	cpc	r19, r23
     d9e:	48 07       	cpc	r20, r24
     da0:	ab 07       	cpc	r26, r27
     da2:	b0 e8       	ldi	r27, 0x80	; 128
     da4:	09 f0       	breq	.+2      	; 0xda8 <__divsf3_pse+0x56>
     da6:	bb 0b       	sbc	r27, r27
     da8:	80 2d       	mov	r24, r0
     daa:	bf 01       	movw	r22, r30
     dac:	ff 27       	eor	r31, r31
     dae:	93 58       	subi	r25, 0x83	; 131
     db0:	5f 4f       	sbci	r21, 0xFF	; 255
     db2:	2a f0       	brmi	.+10     	; 0xdbe <__divsf3_pse+0x6c>
     db4:	9e 3f       	cpi	r25, 0xFE	; 254
     db6:	51 05       	cpc	r21, r1
     db8:	68 f0       	brcs	.+26     	; 0xdd4 <__divsf3_pse+0x82>
     dba:	92 c0       	rjmp	.+292    	; 0xee0 <__fp_inf>
     dbc:	dc c0       	rjmp	.+440    	; 0xf76 <__fp_szero>
     dbe:	5f 3f       	cpi	r21, 0xFF	; 255
     dc0:	ec f3       	brlt	.-6      	; 0xdbc <__divsf3_pse+0x6a>
     dc2:	98 3e       	cpi	r25, 0xE8	; 232
     dc4:	dc f3       	brlt	.-10     	; 0xdbc <__divsf3_pse+0x6a>
     dc6:	86 95       	lsr	r24
     dc8:	77 95       	ror	r23
     dca:	67 95       	ror	r22
     dcc:	b7 95       	ror	r27
     dce:	f7 95       	ror	r31
     dd0:	9f 5f       	subi	r25, 0xFF	; 255
     dd2:	c9 f7       	brne	.-14     	; 0xdc6 <__divsf3_pse+0x74>
     dd4:	88 0f       	add	r24, r24
     dd6:	91 1d       	adc	r25, r1
     dd8:	96 95       	lsr	r25
     dda:	87 95       	ror	r24
     ddc:	97 f9       	bld	r25, 7
     dde:	08 95       	ret
     de0:	e1 e0       	ldi	r30, 0x01	; 1
     de2:	66 0f       	add	r22, r22
     de4:	77 1f       	adc	r23, r23
     de6:	88 1f       	adc	r24, r24
     de8:	bb 1f       	adc	r27, r27
     dea:	62 17       	cp	r22, r18
     dec:	73 07       	cpc	r23, r19
     dee:	84 07       	cpc	r24, r20
     df0:	ba 07       	cpc	r27, r26
     df2:	20 f0       	brcs	.+8      	; 0xdfc <__divsf3_pse+0xaa>
     df4:	62 1b       	sub	r22, r18
     df6:	73 0b       	sbc	r23, r19
     df8:	84 0b       	sbc	r24, r20
     dfa:	ba 0b       	sbc	r27, r26
     dfc:	ee 1f       	adc	r30, r30
     dfe:	88 f7       	brcc	.-30     	; 0xde2 <__divsf3_pse+0x90>
     e00:	e0 95       	com	r30
     e02:	08 95       	ret

00000e04 <__fixsfsi>:
     e04:	04 d0       	rcall	.+8      	; 0xe0e <__fixunssfsi>
     e06:	68 94       	set
     e08:	b1 11       	cpse	r27, r1
     e0a:	b5 c0       	rjmp	.+362    	; 0xf76 <__fp_szero>
     e0c:	08 95       	ret

00000e0e <__fixunssfsi>:
     e0e:	98 d0       	rcall	.+304    	; 0xf40 <__fp_splitA>
     e10:	88 f0       	brcs	.+34     	; 0xe34 <__fixunssfsi+0x26>
     e12:	9f 57       	subi	r25, 0x7F	; 127
     e14:	90 f0       	brcs	.+36     	; 0xe3a <__fixunssfsi+0x2c>
     e16:	b9 2f       	mov	r27, r25
     e18:	99 27       	eor	r25, r25
     e1a:	b7 51       	subi	r27, 0x17	; 23
     e1c:	a0 f0       	brcs	.+40     	; 0xe46 <__fixunssfsi+0x38>
     e1e:	d1 f0       	breq	.+52     	; 0xe54 <__fixunssfsi+0x46>
     e20:	66 0f       	add	r22, r22
     e22:	77 1f       	adc	r23, r23
     e24:	88 1f       	adc	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	1a f0       	brmi	.+6      	; 0xe30 <__fixunssfsi+0x22>
     e2a:	ba 95       	dec	r27
     e2c:	c9 f7       	brne	.-14     	; 0xe20 <__fixunssfsi+0x12>
     e2e:	12 c0       	rjmp	.+36     	; 0xe54 <__fixunssfsi+0x46>
     e30:	b1 30       	cpi	r27, 0x01	; 1
     e32:	81 f0       	breq	.+32     	; 0xe54 <__fixunssfsi+0x46>
     e34:	9f d0       	rcall	.+318    	; 0xf74 <__fp_zero>
     e36:	b1 e0       	ldi	r27, 0x01	; 1
     e38:	08 95       	ret
     e3a:	9c c0       	rjmp	.+312    	; 0xf74 <__fp_zero>
     e3c:	67 2f       	mov	r22, r23
     e3e:	78 2f       	mov	r23, r24
     e40:	88 27       	eor	r24, r24
     e42:	b8 5f       	subi	r27, 0xF8	; 248
     e44:	39 f0       	breq	.+14     	; 0xe54 <__fixunssfsi+0x46>
     e46:	b9 3f       	cpi	r27, 0xF9	; 249
     e48:	cc f3       	brlt	.-14     	; 0xe3c <__fixunssfsi+0x2e>
     e4a:	86 95       	lsr	r24
     e4c:	77 95       	ror	r23
     e4e:	67 95       	ror	r22
     e50:	b3 95       	inc	r27
     e52:	d9 f7       	brne	.-10     	; 0xe4a <__fixunssfsi+0x3c>
     e54:	3e f4       	brtc	.+14     	; 0xe64 <__fixunssfsi+0x56>
     e56:	90 95       	com	r25
     e58:	80 95       	com	r24
     e5a:	70 95       	com	r23
     e5c:	61 95       	neg	r22
     e5e:	7f 4f       	sbci	r23, 0xFF	; 255
     e60:	8f 4f       	sbci	r24, 0xFF	; 255
     e62:	9f 4f       	sbci	r25, 0xFF	; 255
     e64:	08 95       	ret

00000e66 <__floatunsisf>:
     e66:	e8 94       	clt
     e68:	09 c0       	rjmp	.+18     	; 0xe7c <__floatsisf+0x12>

00000e6a <__floatsisf>:
     e6a:	97 fb       	bst	r25, 7
     e6c:	3e f4       	brtc	.+14     	; 0xe7c <__floatsisf+0x12>
     e6e:	90 95       	com	r25
     e70:	80 95       	com	r24
     e72:	70 95       	com	r23
     e74:	61 95       	neg	r22
     e76:	7f 4f       	sbci	r23, 0xFF	; 255
     e78:	8f 4f       	sbci	r24, 0xFF	; 255
     e7a:	9f 4f       	sbci	r25, 0xFF	; 255
     e7c:	99 23       	and	r25, r25
     e7e:	a9 f0       	breq	.+42     	; 0xeaa <__floatsisf+0x40>
     e80:	f9 2f       	mov	r31, r25
     e82:	96 e9       	ldi	r25, 0x96	; 150
     e84:	bb 27       	eor	r27, r27
     e86:	93 95       	inc	r25
     e88:	f6 95       	lsr	r31
     e8a:	87 95       	ror	r24
     e8c:	77 95       	ror	r23
     e8e:	67 95       	ror	r22
     e90:	b7 95       	ror	r27
     e92:	f1 11       	cpse	r31, r1
     e94:	f8 cf       	rjmp	.-16     	; 0xe86 <__floatsisf+0x1c>
     e96:	fa f4       	brpl	.+62     	; 0xed6 <__floatsisf+0x6c>
     e98:	bb 0f       	add	r27, r27
     e9a:	11 f4       	brne	.+4      	; 0xea0 <__floatsisf+0x36>
     e9c:	60 ff       	sbrs	r22, 0
     e9e:	1b c0       	rjmp	.+54     	; 0xed6 <__floatsisf+0x6c>
     ea0:	6f 5f       	subi	r22, 0xFF	; 255
     ea2:	7f 4f       	sbci	r23, 0xFF	; 255
     ea4:	8f 4f       	sbci	r24, 0xFF	; 255
     ea6:	9f 4f       	sbci	r25, 0xFF	; 255
     ea8:	16 c0       	rjmp	.+44     	; 0xed6 <__floatsisf+0x6c>
     eaa:	88 23       	and	r24, r24
     eac:	11 f0       	breq	.+4      	; 0xeb2 <__floatsisf+0x48>
     eae:	96 e9       	ldi	r25, 0x96	; 150
     eb0:	11 c0       	rjmp	.+34     	; 0xed4 <__floatsisf+0x6a>
     eb2:	77 23       	and	r23, r23
     eb4:	21 f0       	breq	.+8      	; 0xebe <__floatsisf+0x54>
     eb6:	9e e8       	ldi	r25, 0x8E	; 142
     eb8:	87 2f       	mov	r24, r23
     eba:	76 2f       	mov	r23, r22
     ebc:	05 c0       	rjmp	.+10     	; 0xec8 <__floatsisf+0x5e>
     ebe:	66 23       	and	r22, r22
     ec0:	71 f0       	breq	.+28     	; 0xede <__floatsisf+0x74>
     ec2:	96 e8       	ldi	r25, 0x86	; 134
     ec4:	86 2f       	mov	r24, r22
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	60 e0       	ldi	r22, 0x00	; 0
     eca:	2a f0       	brmi	.+10     	; 0xed6 <__floatsisf+0x6c>
     ecc:	9a 95       	dec	r25
     ece:	66 0f       	add	r22, r22
     ed0:	77 1f       	adc	r23, r23
     ed2:	88 1f       	adc	r24, r24
     ed4:	da f7       	brpl	.-10     	; 0xecc <__floatsisf+0x62>
     ed6:	88 0f       	add	r24, r24
     ed8:	96 95       	lsr	r25
     eda:	87 95       	ror	r24
     edc:	97 f9       	bld	r25, 7
     ede:	08 95       	ret

00000ee0 <__fp_inf>:
     ee0:	97 f9       	bld	r25, 7
     ee2:	9f 67       	ori	r25, 0x7F	; 127
     ee4:	80 e8       	ldi	r24, 0x80	; 128
     ee6:	70 e0       	ldi	r23, 0x00	; 0
     ee8:	60 e0       	ldi	r22, 0x00	; 0
     eea:	08 95       	ret

00000eec <__fp_nan>:
     eec:	9f ef       	ldi	r25, 0xFF	; 255
     eee:	80 ec       	ldi	r24, 0xC0	; 192
     ef0:	08 95       	ret

00000ef2 <__fp_pscA>:
     ef2:	00 24       	eor	r0, r0
     ef4:	0a 94       	dec	r0
     ef6:	16 16       	cp	r1, r22
     ef8:	17 06       	cpc	r1, r23
     efa:	18 06       	cpc	r1, r24
     efc:	09 06       	cpc	r0, r25
     efe:	08 95       	ret

00000f00 <__fp_pscB>:
     f00:	00 24       	eor	r0, r0
     f02:	0a 94       	dec	r0
     f04:	12 16       	cp	r1, r18
     f06:	13 06       	cpc	r1, r19
     f08:	14 06       	cpc	r1, r20
     f0a:	05 06       	cpc	r0, r21
     f0c:	08 95       	ret

00000f0e <__fp_round>:
     f0e:	09 2e       	mov	r0, r25
     f10:	03 94       	inc	r0
     f12:	00 0c       	add	r0, r0
     f14:	11 f4       	brne	.+4      	; 0xf1a <__fp_round+0xc>
     f16:	88 23       	and	r24, r24
     f18:	52 f0       	brmi	.+20     	; 0xf2e <__fp_round+0x20>
     f1a:	bb 0f       	add	r27, r27
     f1c:	40 f4       	brcc	.+16     	; 0xf2e <__fp_round+0x20>
     f1e:	bf 2b       	or	r27, r31
     f20:	11 f4       	brne	.+4      	; 0xf26 <__fp_round+0x18>
     f22:	60 ff       	sbrs	r22, 0
     f24:	04 c0       	rjmp	.+8      	; 0xf2e <__fp_round+0x20>
     f26:	6f 5f       	subi	r22, 0xFF	; 255
     f28:	7f 4f       	sbci	r23, 0xFF	; 255
     f2a:	8f 4f       	sbci	r24, 0xFF	; 255
     f2c:	9f 4f       	sbci	r25, 0xFF	; 255
     f2e:	08 95       	ret

00000f30 <__fp_split3>:
     f30:	57 fd       	sbrc	r21, 7
     f32:	90 58       	subi	r25, 0x80	; 128
     f34:	44 0f       	add	r20, r20
     f36:	55 1f       	adc	r21, r21
     f38:	59 f0       	breq	.+22     	; 0xf50 <__fp_splitA+0x10>
     f3a:	5f 3f       	cpi	r21, 0xFF	; 255
     f3c:	71 f0       	breq	.+28     	; 0xf5a <__fp_splitA+0x1a>
     f3e:	47 95       	ror	r20

00000f40 <__fp_splitA>:
     f40:	88 0f       	add	r24, r24
     f42:	97 fb       	bst	r25, 7
     f44:	99 1f       	adc	r25, r25
     f46:	61 f0       	breq	.+24     	; 0xf60 <__fp_splitA+0x20>
     f48:	9f 3f       	cpi	r25, 0xFF	; 255
     f4a:	79 f0       	breq	.+30     	; 0xf6a <__fp_splitA+0x2a>
     f4c:	87 95       	ror	r24
     f4e:	08 95       	ret
     f50:	12 16       	cp	r1, r18
     f52:	13 06       	cpc	r1, r19
     f54:	14 06       	cpc	r1, r20
     f56:	55 1f       	adc	r21, r21
     f58:	f2 cf       	rjmp	.-28     	; 0xf3e <__fp_split3+0xe>
     f5a:	46 95       	lsr	r20
     f5c:	f1 df       	rcall	.-30     	; 0xf40 <__fp_splitA>
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <__fp_splitA+0x30>
     f60:	16 16       	cp	r1, r22
     f62:	17 06       	cpc	r1, r23
     f64:	18 06       	cpc	r1, r24
     f66:	99 1f       	adc	r25, r25
     f68:	f1 cf       	rjmp	.-30     	; 0xf4c <__fp_splitA+0xc>
     f6a:	86 95       	lsr	r24
     f6c:	71 05       	cpc	r23, r1
     f6e:	61 05       	cpc	r22, r1
     f70:	08 94       	sec
     f72:	08 95       	ret

00000f74 <__fp_zero>:
     f74:	e8 94       	clt

00000f76 <__fp_szero>:
     f76:	bb 27       	eor	r27, r27
     f78:	66 27       	eor	r22, r22
     f7a:	77 27       	eor	r23, r23
     f7c:	cb 01       	movw	r24, r22
     f7e:	97 f9       	bld	r25, 7
     f80:	08 95       	ret

00000f82 <__mulsf3>:
     f82:	0b d0       	rcall	.+22     	; 0xf9a <__mulsf3x>
     f84:	c4 cf       	rjmp	.-120    	; 0xf0e <__fp_round>
     f86:	b5 df       	rcall	.-150    	; 0xef2 <__fp_pscA>
     f88:	28 f0       	brcs	.+10     	; 0xf94 <__mulsf3+0x12>
     f8a:	ba df       	rcall	.-140    	; 0xf00 <__fp_pscB>
     f8c:	18 f0       	brcs	.+6      	; 0xf94 <__mulsf3+0x12>
     f8e:	95 23       	and	r25, r21
     f90:	09 f0       	breq	.+2      	; 0xf94 <__mulsf3+0x12>
     f92:	a6 cf       	rjmp	.-180    	; 0xee0 <__fp_inf>
     f94:	ab cf       	rjmp	.-170    	; 0xeec <__fp_nan>
     f96:	11 24       	eor	r1, r1
     f98:	ee cf       	rjmp	.-36     	; 0xf76 <__fp_szero>

00000f9a <__mulsf3x>:
     f9a:	ca df       	rcall	.-108    	; 0xf30 <__fp_split3>
     f9c:	a0 f3       	brcs	.-24     	; 0xf86 <__mulsf3+0x4>

00000f9e <__mulsf3_pse>:
     f9e:	95 9f       	mul	r25, r21
     fa0:	d1 f3       	breq	.-12     	; 0xf96 <__mulsf3+0x14>
     fa2:	95 0f       	add	r25, r21
     fa4:	50 e0       	ldi	r21, 0x00	; 0
     fa6:	55 1f       	adc	r21, r21
     fa8:	62 9f       	mul	r22, r18
     faa:	f0 01       	movw	r30, r0
     fac:	72 9f       	mul	r23, r18
     fae:	bb 27       	eor	r27, r27
     fb0:	f0 0d       	add	r31, r0
     fb2:	b1 1d       	adc	r27, r1
     fb4:	63 9f       	mul	r22, r19
     fb6:	aa 27       	eor	r26, r26
     fb8:	f0 0d       	add	r31, r0
     fba:	b1 1d       	adc	r27, r1
     fbc:	aa 1f       	adc	r26, r26
     fbe:	64 9f       	mul	r22, r20
     fc0:	66 27       	eor	r22, r22
     fc2:	b0 0d       	add	r27, r0
     fc4:	a1 1d       	adc	r26, r1
     fc6:	66 1f       	adc	r22, r22
     fc8:	82 9f       	mul	r24, r18
     fca:	22 27       	eor	r18, r18
     fcc:	b0 0d       	add	r27, r0
     fce:	a1 1d       	adc	r26, r1
     fd0:	62 1f       	adc	r22, r18
     fd2:	73 9f       	mul	r23, r19
     fd4:	b0 0d       	add	r27, r0
     fd6:	a1 1d       	adc	r26, r1
     fd8:	62 1f       	adc	r22, r18
     fda:	83 9f       	mul	r24, r19
     fdc:	a0 0d       	add	r26, r0
     fde:	61 1d       	adc	r22, r1
     fe0:	22 1f       	adc	r18, r18
     fe2:	74 9f       	mul	r23, r20
     fe4:	33 27       	eor	r19, r19
     fe6:	a0 0d       	add	r26, r0
     fe8:	61 1d       	adc	r22, r1
     fea:	23 1f       	adc	r18, r19
     fec:	84 9f       	mul	r24, r20
     fee:	60 0d       	add	r22, r0
     ff0:	21 1d       	adc	r18, r1
     ff2:	82 2f       	mov	r24, r18
     ff4:	76 2f       	mov	r23, r22
     ff6:	6a 2f       	mov	r22, r26
     ff8:	11 24       	eor	r1, r1
     ffa:	9f 57       	subi	r25, 0x7F	; 127
     ffc:	50 40       	sbci	r21, 0x00	; 0
     ffe:	8a f0       	brmi	.+34     	; 0x1022 <__mulsf3_pse+0x84>
    1000:	e1 f0       	breq	.+56     	; 0x103a <__mulsf3_pse+0x9c>
    1002:	88 23       	and	r24, r24
    1004:	4a f0       	brmi	.+18     	; 0x1018 <__mulsf3_pse+0x7a>
    1006:	ee 0f       	add	r30, r30
    1008:	ff 1f       	adc	r31, r31
    100a:	bb 1f       	adc	r27, r27
    100c:	66 1f       	adc	r22, r22
    100e:	77 1f       	adc	r23, r23
    1010:	88 1f       	adc	r24, r24
    1012:	91 50       	subi	r25, 0x01	; 1
    1014:	50 40       	sbci	r21, 0x00	; 0
    1016:	a9 f7       	brne	.-22     	; 0x1002 <__mulsf3_pse+0x64>
    1018:	9e 3f       	cpi	r25, 0xFE	; 254
    101a:	51 05       	cpc	r21, r1
    101c:	70 f0       	brcs	.+28     	; 0x103a <__mulsf3_pse+0x9c>
    101e:	60 cf       	rjmp	.-320    	; 0xee0 <__fp_inf>
    1020:	aa cf       	rjmp	.-172    	; 0xf76 <__fp_szero>
    1022:	5f 3f       	cpi	r21, 0xFF	; 255
    1024:	ec f3       	brlt	.-6      	; 0x1020 <__mulsf3_pse+0x82>
    1026:	98 3e       	cpi	r25, 0xE8	; 232
    1028:	dc f3       	brlt	.-10     	; 0x1020 <__mulsf3_pse+0x82>
    102a:	86 95       	lsr	r24
    102c:	77 95       	ror	r23
    102e:	67 95       	ror	r22
    1030:	b7 95       	ror	r27
    1032:	f7 95       	ror	r31
    1034:	e7 95       	ror	r30
    1036:	9f 5f       	subi	r25, 0xFF	; 255
    1038:	c1 f7       	brne	.-16     	; 0x102a <__mulsf3_pse+0x8c>
    103a:	fe 2b       	or	r31, r30
    103c:	88 0f       	add	r24, r24
    103e:	91 1d       	adc	r25, r1
    1040:	96 95       	lsr	r25
    1042:	87 95       	ror	r24
    1044:	97 f9       	bld	r25, 7
    1046:	08 95       	ret

00001048 <pow>:
    1048:	fa 01       	movw	r30, r20
    104a:	ee 0f       	add	r30, r30
    104c:	ff 1f       	adc	r31, r31
    104e:	30 96       	adiw	r30, 0x00	; 0
    1050:	21 05       	cpc	r18, r1
    1052:	31 05       	cpc	r19, r1
    1054:	99 f1       	breq	.+102    	; 0x10bc <pow+0x74>
    1056:	61 15       	cp	r22, r1
    1058:	71 05       	cpc	r23, r1
    105a:	61 f4       	brne	.+24     	; 0x1074 <pow+0x2c>
    105c:	80 38       	cpi	r24, 0x80	; 128
    105e:	bf e3       	ldi	r27, 0x3F	; 63
    1060:	9b 07       	cpc	r25, r27
    1062:	49 f1       	breq	.+82     	; 0x10b6 <pow+0x6e>
    1064:	68 94       	set
    1066:	90 38       	cpi	r25, 0x80	; 128
    1068:	81 05       	cpc	r24, r1
    106a:	61 f0       	breq	.+24     	; 0x1084 <pow+0x3c>
    106c:	80 38       	cpi	r24, 0x80	; 128
    106e:	bf ef       	ldi	r27, 0xFF	; 255
    1070:	9b 07       	cpc	r25, r27
    1072:	41 f0       	breq	.+16     	; 0x1084 <pow+0x3c>
    1074:	99 23       	and	r25, r25
    1076:	42 f5       	brpl	.+80     	; 0x10c8 <pow+0x80>
    1078:	ff 3f       	cpi	r31, 0xFF	; 255
    107a:	e1 05       	cpc	r30, r1
    107c:	31 05       	cpc	r19, r1
    107e:	21 05       	cpc	r18, r1
    1080:	11 f1       	breq	.+68     	; 0x10c6 <pow+0x7e>
    1082:	e8 94       	clt
    1084:	08 94       	sec
    1086:	e7 95       	ror	r30
    1088:	d9 01       	movw	r26, r18
    108a:	aa 23       	and	r26, r26
    108c:	29 f4       	brne	.+10     	; 0x1098 <pow+0x50>
    108e:	ab 2f       	mov	r26, r27
    1090:	be 2f       	mov	r27, r30
    1092:	f8 5f       	subi	r31, 0xF8	; 248
    1094:	d0 f3       	brcs	.-12     	; 0x108a <pow+0x42>
    1096:	10 c0       	rjmp	.+32     	; 0x10b8 <pow+0x70>
    1098:	ff 5f       	subi	r31, 0xFF	; 255
    109a:	70 f4       	brcc	.+28     	; 0x10b8 <pow+0x70>
    109c:	a6 95       	lsr	r26
    109e:	e0 f7       	brcc	.-8      	; 0x1098 <pow+0x50>
    10a0:	f7 39       	cpi	r31, 0x97	; 151
    10a2:	50 f0       	brcs	.+20     	; 0x10b8 <pow+0x70>
    10a4:	19 f0       	breq	.+6      	; 0x10ac <pow+0x64>
    10a6:	ff 3a       	cpi	r31, 0xAF	; 175
    10a8:	38 f4       	brcc	.+14     	; 0x10b8 <pow+0x70>
    10aa:	9f 77       	andi	r25, 0x7F	; 127
    10ac:	9f 93       	push	r25
    10ae:	0c d0       	rcall	.+24     	; 0x10c8 <pow+0x80>
    10b0:	0f 90       	pop	r0
    10b2:	07 fc       	sbrc	r0, 7
    10b4:	90 58       	subi	r25, 0x80	; 128
    10b6:	08 95       	ret
    10b8:	3e f0       	brts	.+14     	; 0x10c8 <pow+0x80>
    10ba:	18 cf       	rjmp	.-464    	; 0xeec <__fp_nan>
    10bc:	60 e0       	ldi	r22, 0x00	; 0
    10be:	70 e0       	ldi	r23, 0x00	; 0
    10c0:	80 e8       	ldi	r24, 0x80	; 128
    10c2:	9f e3       	ldi	r25, 0x3F	; 63
    10c4:	08 95       	ret
    10c6:	4f e7       	ldi	r20, 0x7F	; 127
    10c8:	9f 77       	andi	r25, 0x7F	; 127
    10ca:	5f 93       	push	r21
    10cc:	4f 93       	push	r20
    10ce:	3f 93       	push	r19
    10d0:	2f 93       	push	r18
    10d2:	9e d0       	rcall	.+316    	; 0x1210 <log>
    10d4:	2f 91       	pop	r18
    10d6:	3f 91       	pop	r19
    10d8:	4f 91       	pop	r20
    10da:	5f 91       	pop	r21
    10dc:	52 df       	rcall	.-348    	; 0xf82 <__mulsf3>
    10de:	05 c0       	rjmp	.+10     	; 0x10ea <exp>
    10e0:	19 f4       	brne	.+6      	; 0x10e8 <pow+0xa0>
    10e2:	0e f0       	brts	.+2      	; 0x10e6 <pow+0x9e>
    10e4:	fd ce       	rjmp	.-518    	; 0xee0 <__fp_inf>
    10e6:	46 cf       	rjmp	.-372    	; 0xf74 <__fp_zero>
    10e8:	01 cf       	rjmp	.-510    	; 0xeec <__fp_nan>

000010ea <exp>:
    10ea:	2a df       	rcall	.-428    	; 0xf40 <__fp_splitA>
    10ec:	c8 f3       	brcs	.-14     	; 0x10e0 <pow+0x98>
    10ee:	96 38       	cpi	r25, 0x86	; 134
    10f0:	c0 f7       	brcc	.-16     	; 0x10e2 <pow+0x9a>
    10f2:	07 f8       	bld	r0, 7
    10f4:	0f 92       	push	r0
    10f6:	e8 94       	clt
    10f8:	2b e3       	ldi	r18, 0x3B	; 59
    10fa:	3a ea       	ldi	r19, 0xAA	; 170
    10fc:	48 eb       	ldi	r20, 0xB8	; 184
    10fe:	5f e7       	ldi	r21, 0x7F	; 127
    1100:	4e df       	rcall	.-356    	; 0xf9e <__mulsf3_pse>
    1102:	0f 92       	push	r0
    1104:	0f 92       	push	r0
    1106:	0f 92       	push	r0
    1108:	4d b7       	in	r20, 0x3d	; 61
    110a:	5e b7       	in	r21, 0x3e	; 62
    110c:	0f 92       	push	r0
    110e:	c0 d0       	rcall	.+384    	; 0x1290 <modf>
    1110:	e6 e2       	ldi	r30, 0x26	; 38
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	16 d0       	rcall	.+44     	; 0x1142 <__fp_powser>
    1116:	4f 91       	pop	r20
    1118:	5f 91       	pop	r21
    111a:	ef 91       	pop	r30
    111c:	ff 91       	pop	r31
    111e:	e5 95       	asr	r30
    1120:	ee 1f       	adc	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	49 f0       	breq	.+18     	; 0x1138 <exp+0x4e>
    1126:	fe 57       	subi	r31, 0x7E	; 126
    1128:	e0 68       	ori	r30, 0x80	; 128
    112a:	44 27       	eor	r20, r20
    112c:	ee 0f       	add	r30, r30
    112e:	44 1f       	adc	r20, r20
    1130:	fa 95       	dec	r31
    1132:	e1 f7       	brne	.-8      	; 0x112c <exp+0x42>
    1134:	41 95       	neg	r20
    1136:	55 0b       	sbc	r21, r21
    1138:	32 d0       	rcall	.+100    	; 0x119e <ldexp>
    113a:	0f 90       	pop	r0
    113c:	07 fe       	sbrs	r0, 7
    113e:	26 c0       	rjmp	.+76     	; 0x118c <inverse>
    1140:	08 95       	ret

00001142 <__fp_powser>:
    1142:	df 93       	push	r29
    1144:	cf 93       	push	r28
    1146:	1f 93       	push	r17
    1148:	0f 93       	push	r16
    114a:	ff 92       	push	r15
    114c:	ef 92       	push	r14
    114e:	df 92       	push	r13
    1150:	7b 01       	movw	r14, r22
    1152:	8c 01       	movw	r16, r24
    1154:	68 94       	set
    1156:	05 c0       	rjmp	.+10     	; 0x1162 <__fp_powser+0x20>
    1158:	da 2e       	mov	r13, r26
    115a:	ef 01       	movw	r28, r30
    115c:	1e df       	rcall	.-452    	; 0xf9a <__mulsf3x>
    115e:	fe 01       	movw	r30, r28
    1160:	e8 94       	clt
    1162:	a5 91       	lpm	r26, Z+
    1164:	25 91       	lpm	r18, Z+
    1166:	35 91       	lpm	r19, Z+
    1168:	45 91       	lpm	r20, Z+
    116a:	55 91       	lpm	r21, Z+
    116c:	ae f3       	brts	.-22     	; 0x1158 <__fp_powser+0x16>
    116e:	ef 01       	movw	r28, r30
    1170:	8e dd       	rcall	.-1252   	; 0xc8e <__addsf3x>
    1172:	fe 01       	movw	r30, r28
    1174:	97 01       	movw	r18, r14
    1176:	a8 01       	movw	r20, r16
    1178:	da 94       	dec	r13
    117a:	79 f7       	brne	.-34     	; 0x115a <__fp_powser+0x18>
    117c:	df 90       	pop	r13
    117e:	ef 90       	pop	r14
    1180:	ff 90       	pop	r15
    1182:	0f 91       	pop	r16
    1184:	1f 91       	pop	r17
    1186:	cf 91       	pop	r28
    1188:	df 91       	pop	r29
    118a:	08 95       	ret

0000118c <inverse>:
    118c:	9b 01       	movw	r18, r22
    118e:	ac 01       	movw	r20, r24
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	80 e8       	ldi	r24, 0x80	; 128
    1196:	9f e3       	ldi	r25, 0x3F	; 63
    1198:	cd cd       	rjmp	.-1126   	; 0xd34 <__divsf3>
    119a:	a2 ce       	rjmp	.-700    	; 0xee0 <__fp_inf>
    119c:	ac c0       	rjmp	.+344    	; 0x12f6 <__fp_mpack>

0000119e <ldexp>:
    119e:	d0 de       	rcall	.-608    	; 0xf40 <__fp_splitA>
    11a0:	e8 f3       	brcs	.-6      	; 0x119c <inverse+0x10>
    11a2:	99 23       	and	r25, r25
    11a4:	d9 f3       	breq	.-10     	; 0x119c <inverse+0x10>
    11a6:	94 0f       	add	r25, r20
    11a8:	51 1d       	adc	r21, r1
    11aa:	bb f3       	brvs	.-18     	; 0x119a <inverse+0xe>
    11ac:	91 50       	subi	r25, 0x01	; 1
    11ae:	50 40       	sbci	r21, 0x00	; 0
    11b0:	94 f0       	brlt	.+36     	; 0x11d6 <ldexp+0x38>
    11b2:	59 f0       	breq	.+22     	; 0x11ca <ldexp+0x2c>
    11b4:	88 23       	and	r24, r24
    11b6:	32 f0       	brmi	.+12     	; 0x11c4 <ldexp+0x26>
    11b8:	66 0f       	add	r22, r22
    11ba:	77 1f       	adc	r23, r23
    11bc:	88 1f       	adc	r24, r24
    11be:	91 50       	subi	r25, 0x01	; 1
    11c0:	50 40       	sbci	r21, 0x00	; 0
    11c2:	c1 f7       	brne	.-16     	; 0x11b4 <ldexp+0x16>
    11c4:	9e 3f       	cpi	r25, 0xFE	; 254
    11c6:	51 05       	cpc	r21, r1
    11c8:	44 f7       	brge	.-48     	; 0x119a <inverse+0xe>
    11ca:	88 0f       	add	r24, r24
    11cc:	91 1d       	adc	r25, r1
    11ce:	96 95       	lsr	r25
    11d0:	87 95       	ror	r24
    11d2:	97 f9       	bld	r25, 7
    11d4:	08 95       	ret
    11d6:	5f 3f       	cpi	r21, 0xFF	; 255
    11d8:	ac f0       	brlt	.+42     	; 0x1204 <ldexp+0x66>
    11da:	98 3e       	cpi	r25, 0xE8	; 232
    11dc:	9c f0       	brlt	.+38     	; 0x1204 <ldexp+0x66>
    11de:	bb 27       	eor	r27, r27
    11e0:	86 95       	lsr	r24
    11e2:	77 95       	ror	r23
    11e4:	67 95       	ror	r22
    11e6:	b7 95       	ror	r27
    11e8:	08 f4       	brcc	.+2      	; 0x11ec <ldexp+0x4e>
    11ea:	b1 60       	ori	r27, 0x01	; 1
    11ec:	93 95       	inc	r25
    11ee:	c1 f7       	brne	.-16     	; 0x11e0 <ldexp+0x42>
    11f0:	bb 0f       	add	r27, r27
    11f2:	58 f7       	brcc	.-42     	; 0x11ca <ldexp+0x2c>
    11f4:	11 f4       	brne	.+4      	; 0x11fa <ldexp+0x5c>
    11f6:	60 ff       	sbrs	r22, 0
    11f8:	e8 cf       	rjmp	.-48     	; 0x11ca <ldexp+0x2c>
    11fa:	6f 5f       	subi	r22, 0xFF	; 255
    11fc:	7f 4f       	sbci	r23, 0xFF	; 255
    11fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	e3 cf       	rjmp	.-58     	; 0x11ca <ldexp+0x2c>
    1204:	b8 ce       	rjmp	.-656    	; 0xf76 <__fp_szero>
    1206:	0e f0       	brts	.+2      	; 0x120a <ldexp+0x6c>
    1208:	76 c0       	rjmp	.+236    	; 0x12f6 <__fp_mpack>
    120a:	70 ce       	rjmp	.-800    	; 0xeec <__fp_nan>
    120c:	68 94       	set
    120e:	68 ce       	rjmp	.-816    	; 0xee0 <__fp_inf>

00001210 <log>:
    1210:	97 de       	rcall	.-722    	; 0xf40 <__fp_splitA>
    1212:	c8 f3       	brcs	.-14     	; 0x1206 <ldexp+0x68>
    1214:	99 23       	and	r25, r25
    1216:	d1 f3       	breq	.-12     	; 0x120c <ldexp+0x6e>
    1218:	c6 f3       	brts	.-16     	; 0x120a <ldexp+0x6c>
    121a:	df 93       	push	r29
    121c:	cf 93       	push	r28
    121e:	1f 93       	push	r17
    1220:	0f 93       	push	r16
    1222:	ff 92       	push	r15
    1224:	c9 2f       	mov	r28, r25
    1226:	dd 27       	eor	r29, r29
    1228:	88 23       	and	r24, r24
    122a:	2a f0       	brmi	.+10     	; 0x1236 <log+0x26>
    122c:	21 97       	sbiw	r28, 0x01	; 1
    122e:	66 0f       	add	r22, r22
    1230:	77 1f       	adc	r23, r23
    1232:	88 1f       	adc	r24, r24
    1234:	da f7       	brpl	.-10     	; 0x122c <log+0x1c>
    1236:	20 e0       	ldi	r18, 0x00	; 0
    1238:	30 e0       	ldi	r19, 0x00	; 0
    123a:	40 e8       	ldi	r20, 0x80	; 128
    123c:	5f eb       	ldi	r21, 0xBF	; 191
    123e:	9f e3       	ldi	r25, 0x3F	; 63
    1240:	88 39       	cpi	r24, 0x98	; 152
    1242:	20 f0       	brcs	.+8      	; 0x124c <log+0x3c>
    1244:	80 3e       	cpi	r24, 0xE0	; 224
    1246:	30 f0       	brcs	.+12     	; 0x1254 <log+0x44>
    1248:	21 96       	adiw	r28, 0x01	; 1
    124a:	8f 77       	andi	r24, 0x7F	; 127
    124c:	0f dd       	rcall	.-1506   	; 0xc6c <__addsf3>
    124e:	ee e4       	ldi	r30, 0x4E	; 78
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	03 c0       	rjmp	.+6      	; 0x125a <log+0x4a>
    1254:	0b dd       	rcall	.-1514   	; 0xc6c <__addsf3>
    1256:	eb e7       	ldi	r30, 0x7B	; 123
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	73 df       	rcall	.-282    	; 0x1142 <__fp_powser>
    125c:	8b 01       	movw	r16, r22
    125e:	be 01       	movw	r22, r28
    1260:	ec 01       	movw	r28, r24
    1262:	fb 2e       	mov	r15, r27
    1264:	6f 57       	subi	r22, 0x7F	; 127
    1266:	71 09       	sbc	r23, r1
    1268:	75 95       	asr	r23
    126a:	77 1f       	adc	r23, r23
    126c:	88 0b       	sbc	r24, r24
    126e:	99 0b       	sbc	r25, r25
    1270:	fc dd       	rcall	.-1032   	; 0xe6a <__floatsisf>
    1272:	28 e1       	ldi	r18, 0x18	; 24
    1274:	32 e7       	ldi	r19, 0x72	; 114
    1276:	41 e3       	ldi	r20, 0x31	; 49
    1278:	5f e3       	ldi	r21, 0x3F	; 63
    127a:	8f de       	rcall	.-738    	; 0xf9a <__mulsf3x>
    127c:	af 2d       	mov	r26, r15
    127e:	98 01       	movw	r18, r16
    1280:	ae 01       	movw	r20, r28
    1282:	ff 90       	pop	r15
    1284:	0f 91       	pop	r16
    1286:	1f 91       	pop	r17
    1288:	cf 91       	pop	r28
    128a:	df 91       	pop	r29
    128c:	00 dd       	rcall	.-1536   	; 0xc8e <__addsf3x>
    128e:	3f ce       	rjmp	.-898    	; 0xf0e <__fp_round>

00001290 <modf>:
    1290:	fa 01       	movw	r30, r20
    1292:	dc 01       	movw	r26, r24
    1294:	aa 0f       	add	r26, r26
    1296:	bb 1f       	adc	r27, r27
    1298:	9b 01       	movw	r18, r22
    129a:	ac 01       	movw	r20, r24
    129c:	bf 57       	subi	r27, 0x7F	; 127
    129e:	28 f4       	brcc	.+10     	; 0x12aa <modf+0x1a>
    12a0:	22 27       	eor	r18, r18
    12a2:	33 27       	eor	r19, r19
    12a4:	44 27       	eor	r20, r20
    12a6:	50 78       	andi	r21, 0x80	; 128
    12a8:	1f c0       	rjmp	.+62     	; 0x12e8 <modf+0x58>
    12aa:	b7 51       	subi	r27, 0x17	; 23
    12ac:	88 f4       	brcc	.+34     	; 0x12d0 <modf+0x40>
    12ae:	ab 2f       	mov	r26, r27
    12b0:	00 24       	eor	r0, r0
    12b2:	46 95       	lsr	r20
    12b4:	37 95       	ror	r19
    12b6:	27 95       	ror	r18
    12b8:	01 1c       	adc	r0, r1
    12ba:	a3 95       	inc	r26
    12bc:	d2 f3       	brmi	.-12     	; 0x12b2 <modf+0x22>
    12be:	00 20       	and	r0, r0
    12c0:	69 f0       	breq	.+26     	; 0x12dc <modf+0x4c>
    12c2:	22 0f       	add	r18, r18
    12c4:	33 1f       	adc	r19, r19
    12c6:	44 1f       	adc	r20, r20
    12c8:	b3 95       	inc	r27
    12ca:	da f3       	brmi	.-10     	; 0x12c2 <modf+0x32>
    12cc:	0d d0       	rcall	.+26     	; 0x12e8 <modf+0x58>
    12ce:	cd cc       	rjmp	.-1638   	; 0xc6a <__subsf3>
    12d0:	61 30       	cpi	r22, 0x01	; 1
    12d2:	71 05       	cpc	r23, r1
    12d4:	a0 e8       	ldi	r26, 0x80	; 128
    12d6:	8a 07       	cpc	r24, r26
    12d8:	b9 46       	sbci	r27, 0x69	; 105
    12da:	30 f4       	brcc	.+12     	; 0x12e8 <modf+0x58>
    12dc:	9b 01       	movw	r18, r22
    12de:	ac 01       	movw	r20, r24
    12e0:	66 27       	eor	r22, r22
    12e2:	77 27       	eor	r23, r23
    12e4:	88 27       	eor	r24, r24
    12e6:	90 78       	andi	r25, 0x80	; 128
    12e8:	30 96       	adiw	r30, 0x00	; 0
    12ea:	21 f0       	breq	.+8      	; 0x12f4 <modf+0x64>
    12ec:	20 83       	st	Z, r18
    12ee:	31 83       	std	Z+1, r19	; 0x01
    12f0:	42 83       	std	Z+2, r20	; 0x02
    12f2:	53 83       	std	Z+3, r21	; 0x03
    12f4:	08 95       	ret

000012f6 <__fp_mpack>:
    12f6:	9f 3f       	cpi	r25, 0xFF	; 255
    12f8:	31 f0       	breq	.+12     	; 0x1306 <__fp_mpack_finite+0xc>

000012fa <__fp_mpack_finite>:
    12fa:	91 50       	subi	r25, 0x01	; 1
    12fc:	20 f4       	brcc	.+8      	; 0x1306 <__fp_mpack_finite+0xc>
    12fe:	87 95       	ror	r24
    1300:	77 95       	ror	r23
    1302:	67 95       	ror	r22
    1304:	b7 95       	ror	r27
    1306:	88 0f       	add	r24, r24
    1308:	91 1d       	adc	r25, r1
    130a:	96 95       	lsr	r25
    130c:	87 95       	ror	r24
    130e:	97 f9       	bld	r25, 7
    1310:	08 95       	ret

00001312 <__divmodhi4>:
    1312:	97 fb       	bst	r25, 7
    1314:	07 2e       	mov	r0, r23
    1316:	16 f4       	brtc	.+4      	; 0x131c <__divmodhi4+0xa>
    1318:	00 94       	com	r0
    131a:	06 d0       	rcall	.+12     	; 0x1328 <__divmodhi4_neg1>
    131c:	77 fd       	sbrc	r23, 7
    131e:	08 d0       	rcall	.+16     	; 0x1330 <__divmodhi4_neg2>
    1320:	0b d0       	rcall	.+22     	; 0x1338 <__udivmodhi4>
    1322:	07 fc       	sbrc	r0, 7
    1324:	05 d0       	rcall	.+10     	; 0x1330 <__divmodhi4_neg2>
    1326:	3e f4       	brtc	.+14     	; 0x1336 <__divmodhi4_exit>

00001328 <__divmodhi4_neg1>:
    1328:	90 95       	com	r25
    132a:	81 95       	neg	r24
    132c:	9f 4f       	sbci	r25, 0xFF	; 255
    132e:	08 95       	ret

00001330 <__divmodhi4_neg2>:
    1330:	70 95       	com	r23
    1332:	61 95       	neg	r22
    1334:	7f 4f       	sbci	r23, 0xFF	; 255

00001336 <__divmodhi4_exit>:
    1336:	08 95       	ret

00001338 <__udivmodhi4>:
    1338:	aa 1b       	sub	r26, r26
    133a:	bb 1b       	sub	r27, r27
    133c:	51 e1       	ldi	r21, 0x11	; 17
    133e:	07 c0       	rjmp	.+14     	; 0x134e <__udivmodhi4_ep>

00001340 <__udivmodhi4_loop>:
    1340:	aa 1f       	adc	r26, r26
    1342:	bb 1f       	adc	r27, r27
    1344:	a6 17       	cp	r26, r22
    1346:	b7 07       	cpc	r27, r23
    1348:	10 f0       	brcs	.+4      	; 0x134e <__udivmodhi4_ep>
    134a:	a6 1b       	sub	r26, r22
    134c:	b7 0b       	sbc	r27, r23

0000134e <__udivmodhi4_ep>:
    134e:	88 1f       	adc	r24, r24
    1350:	99 1f       	adc	r25, r25
    1352:	5a 95       	dec	r21
    1354:	a9 f7       	brne	.-22     	; 0x1340 <__udivmodhi4_loop>
    1356:	80 95       	com	r24
    1358:	90 95       	com	r25
    135a:	bc 01       	movw	r22, r24
    135c:	cd 01       	movw	r24, r26
    135e:	08 95       	ret

00001360 <sprintf>:
    1360:	ae e0       	ldi	r26, 0x0E	; 14
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e5 eb       	ldi	r30, 0xB5	; 181
    1366:	f9 e0       	ldi	r31, 0x09	; 9
    1368:	aa c2       	rjmp	.+1364   	; 0x18be <__prologue_saves__+0x1c>
    136a:	0d 89       	ldd	r16, Y+21	; 0x15
    136c:	1e 89       	ldd	r17, Y+22	; 0x16
    136e:	86 e0       	ldi	r24, 0x06	; 6
    1370:	8c 83       	std	Y+4, r24	; 0x04
    1372:	1a 83       	std	Y+2, r17	; 0x02
    1374:	09 83       	std	Y+1, r16	; 0x01
    1376:	8f ef       	ldi	r24, 0xFF	; 255
    1378:	9f e7       	ldi	r25, 0x7F	; 127
    137a:	9e 83       	std	Y+6, r25	; 0x06
    137c:	8d 83       	std	Y+5, r24	; 0x05
    137e:	ae 01       	movw	r20, r28
    1380:	47 5e       	subi	r20, 0xE7	; 231
    1382:	5f 4f       	sbci	r21, 0xFF	; 255
    1384:	6f 89       	ldd	r22, Y+23	; 0x17
    1386:	78 8d       	ldd	r23, Y+24	; 0x18
    1388:	ce 01       	movw	r24, r28
    138a:	01 96       	adiw	r24, 0x01	; 1
    138c:	08 d0       	rcall	.+16     	; 0x139e <vfprintf>
    138e:	ef 81       	ldd	r30, Y+7	; 0x07
    1390:	f8 85       	ldd	r31, Y+8	; 0x08
    1392:	e0 0f       	add	r30, r16
    1394:	f1 1f       	adc	r31, r17
    1396:	10 82       	st	Z, r1
    1398:	2e 96       	adiw	r28, 0x0e	; 14
    139a:	e4 e0       	ldi	r30, 0x04	; 4
    139c:	ac c2       	rjmp	.+1368   	; 0x18f6 <__epilogue_restores__+0x1c>

0000139e <vfprintf>:
    139e:	ab e0       	ldi	r26, 0x0B	; 11
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	e4 ed       	ldi	r30, 0xD4	; 212
    13a4:	f9 e0       	ldi	r31, 0x09	; 9
    13a6:	7d c2       	rjmp	.+1274   	; 0x18a2 <__prologue_saves__>
    13a8:	6c 01       	movw	r12, r24
    13aa:	7b 01       	movw	r14, r22
    13ac:	8a 01       	movw	r16, r20
    13ae:	fc 01       	movw	r30, r24
    13b0:	17 82       	std	Z+7, r1	; 0x07
    13b2:	16 82       	std	Z+6, r1	; 0x06
    13b4:	83 81       	ldd	r24, Z+3	; 0x03
    13b6:	81 ff       	sbrs	r24, 1
    13b8:	bf c1       	rjmp	.+894    	; 0x1738 <vfprintf+0x39a>
    13ba:	ce 01       	movw	r24, r28
    13bc:	01 96       	adiw	r24, 0x01	; 1
    13be:	3c 01       	movw	r6, r24
    13c0:	f6 01       	movw	r30, r12
    13c2:	93 81       	ldd	r25, Z+3	; 0x03
    13c4:	f7 01       	movw	r30, r14
    13c6:	93 fd       	sbrc	r25, 3
    13c8:	85 91       	lpm	r24, Z+
    13ca:	93 ff       	sbrs	r25, 3
    13cc:	81 91       	ld	r24, Z+
    13ce:	7f 01       	movw	r14, r30
    13d0:	88 23       	and	r24, r24
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <vfprintf+0x38>
    13d4:	ad c1       	rjmp	.+858    	; 0x1730 <vfprintf+0x392>
    13d6:	85 32       	cpi	r24, 0x25	; 37
    13d8:	39 f4       	brne	.+14     	; 0x13e8 <vfprintf+0x4a>
    13da:	93 fd       	sbrc	r25, 3
    13dc:	85 91       	lpm	r24, Z+
    13de:	93 ff       	sbrs	r25, 3
    13e0:	81 91       	ld	r24, Z+
    13e2:	7f 01       	movw	r14, r30
    13e4:	85 32       	cpi	r24, 0x25	; 37
    13e6:	21 f4       	brne	.+8      	; 0x13f0 <vfprintf+0x52>
    13e8:	b6 01       	movw	r22, r12
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	c0 d1       	rcall	.+896    	; 0x176e <fputc>
    13ee:	e8 cf       	rjmp	.-48     	; 0x13c0 <vfprintf+0x22>
    13f0:	91 2c       	mov	r9, r1
    13f2:	21 2c       	mov	r2, r1
    13f4:	31 2c       	mov	r3, r1
    13f6:	ff e1       	ldi	r31, 0x1F	; 31
    13f8:	f3 15       	cp	r31, r3
    13fa:	d8 f0       	brcs	.+54     	; 0x1432 <vfprintf+0x94>
    13fc:	8b 32       	cpi	r24, 0x2B	; 43
    13fe:	79 f0       	breq	.+30     	; 0x141e <vfprintf+0x80>
    1400:	38 f4       	brcc	.+14     	; 0x1410 <vfprintf+0x72>
    1402:	80 32       	cpi	r24, 0x20	; 32
    1404:	79 f0       	breq	.+30     	; 0x1424 <vfprintf+0x86>
    1406:	83 32       	cpi	r24, 0x23	; 35
    1408:	a1 f4       	brne	.+40     	; 0x1432 <vfprintf+0x94>
    140a:	23 2d       	mov	r18, r3
    140c:	20 61       	ori	r18, 0x10	; 16
    140e:	1d c0       	rjmp	.+58     	; 0x144a <vfprintf+0xac>
    1410:	8d 32       	cpi	r24, 0x2D	; 45
    1412:	61 f0       	breq	.+24     	; 0x142c <vfprintf+0x8e>
    1414:	80 33       	cpi	r24, 0x30	; 48
    1416:	69 f4       	brne	.+26     	; 0x1432 <vfprintf+0x94>
    1418:	23 2d       	mov	r18, r3
    141a:	21 60       	ori	r18, 0x01	; 1
    141c:	16 c0       	rjmp	.+44     	; 0x144a <vfprintf+0xac>
    141e:	83 2d       	mov	r24, r3
    1420:	82 60       	ori	r24, 0x02	; 2
    1422:	38 2e       	mov	r3, r24
    1424:	e3 2d       	mov	r30, r3
    1426:	e4 60       	ori	r30, 0x04	; 4
    1428:	3e 2e       	mov	r3, r30
    142a:	2a c0       	rjmp	.+84     	; 0x1480 <vfprintf+0xe2>
    142c:	f3 2d       	mov	r31, r3
    142e:	f8 60       	ori	r31, 0x08	; 8
    1430:	1d c0       	rjmp	.+58     	; 0x146c <vfprintf+0xce>
    1432:	37 fc       	sbrc	r3, 7
    1434:	2d c0       	rjmp	.+90     	; 0x1490 <vfprintf+0xf2>
    1436:	20 ed       	ldi	r18, 0xD0	; 208
    1438:	28 0f       	add	r18, r24
    143a:	2a 30       	cpi	r18, 0x0A	; 10
    143c:	40 f0       	brcs	.+16     	; 0x144e <vfprintf+0xb0>
    143e:	8e 32       	cpi	r24, 0x2E	; 46
    1440:	b9 f4       	brne	.+46     	; 0x1470 <vfprintf+0xd2>
    1442:	36 fc       	sbrc	r3, 6
    1444:	75 c1       	rjmp	.+746    	; 0x1730 <vfprintf+0x392>
    1446:	23 2d       	mov	r18, r3
    1448:	20 64       	ori	r18, 0x40	; 64
    144a:	32 2e       	mov	r3, r18
    144c:	19 c0       	rjmp	.+50     	; 0x1480 <vfprintf+0xe2>
    144e:	36 fe       	sbrs	r3, 6
    1450:	06 c0       	rjmp	.+12     	; 0x145e <vfprintf+0xc0>
    1452:	8a e0       	ldi	r24, 0x0A	; 10
    1454:	98 9e       	mul	r9, r24
    1456:	20 0d       	add	r18, r0
    1458:	11 24       	eor	r1, r1
    145a:	92 2e       	mov	r9, r18
    145c:	11 c0       	rjmp	.+34     	; 0x1480 <vfprintf+0xe2>
    145e:	ea e0       	ldi	r30, 0x0A	; 10
    1460:	2e 9e       	mul	r2, r30
    1462:	20 0d       	add	r18, r0
    1464:	11 24       	eor	r1, r1
    1466:	22 2e       	mov	r2, r18
    1468:	f3 2d       	mov	r31, r3
    146a:	f0 62       	ori	r31, 0x20	; 32
    146c:	3f 2e       	mov	r3, r31
    146e:	08 c0       	rjmp	.+16     	; 0x1480 <vfprintf+0xe2>
    1470:	8c 36       	cpi	r24, 0x6C	; 108
    1472:	21 f4       	brne	.+8      	; 0x147c <vfprintf+0xde>
    1474:	83 2d       	mov	r24, r3
    1476:	80 68       	ori	r24, 0x80	; 128
    1478:	38 2e       	mov	r3, r24
    147a:	02 c0       	rjmp	.+4      	; 0x1480 <vfprintf+0xe2>
    147c:	88 36       	cpi	r24, 0x68	; 104
    147e:	41 f4       	brne	.+16     	; 0x1490 <vfprintf+0xf2>
    1480:	f7 01       	movw	r30, r14
    1482:	93 fd       	sbrc	r25, 3
    1484:	85 91       	lpm	r24, Z+
    1486:	93 ff       	sbrs	r25, 3
    1488:	81 91       	ld	r24, Z+
    148a:	7f 01       	movw	r14, r30
    148c:	81 11       	cpse	r24, r1
    148e:	b3 cf       	rjmp	.-154    	; 0x13f6 <vfprintf+0x58>
    1490:	98 2f       	mov	r25, r24
    1492:	9f 7d       	andi	r25, 0xDF	; 223
    1494:	95 54       	subi	r25, 0x45	; 69
    1496:	93 30       	cpi	r25, 0x03	; 3
    1498:	28 f4       	brcc	.+10     	; 0x14a4 <vfprintf+0x106>
    149a:	0c 5f       	subi	r16, 0xFC	; 252
    149c:	1f 4f       	sbci	r17, 0xFF	; 255
    149e:	9f e3       	ldi	r25, 0x3F	; 63
    14a0:	99 83       	std	Y+1, r25	; 0x01
    14a2:	0d c0       	rjmp	.+26     	; 0x14be <vfprintf+0x120>
    14a4:	83 36       	cpi	r24, 0x63	; 99
    14a6:	31 f0       	breq	.+12     	; 0x14b4 <vfprintf+0x116>
    14a8:	83 37       	cpi	r24, 0x73	; 115
    14aa:	71 f0       	breq	.+28     	; 0x14c8 <vfprintf+0x12a>
    14ac:	83 35       	cpi	r24, 0x53	; 83
    14ae:	09 f0       	breq	.+2      	; 0x14b2 <vfprintf+0x114>
    14b0:	55 c0       	rjmp	.+170    	; 0x155c <vfprintf+0x1be>
    14b2:	20 c0       	rjmp	.+64     	; 0x14f4 <vfprintf+0x156>
    14b4:	f8 01       	movw	r30, r16
    14b6:	80 81       	ld	r24, Z
    14b8:	89 83       	std	Y+1, r24	; 0x01
    14ba:	0e 5f       	subi	r16, 0xFE	; 254
    14bc:	1f 4f       	sbci	r17, 0xFF	; 255
    14be:	88 24       	eor	r8, r8
    14c0:	83 94       	inc	r8
    14c2:	91 2c       	mov	r9, r1
    14c4:	53 01       	movw	r10, r6
    14c6:	12 c0       	rjmp	.+36     	; 0x14ec <vfprintf+0x14e>
    14c8:	28 01       	movw	r4, r16
    14ca:	f2 e0       	ldi	r31, 0x02	; 2
    14cc:	4f 0e       	add	r4, r31
    14ce:	51 1c       	adc	r5, r1
    14d0:	f8 01       	movw	r30, r16
    14d2:	a0 80       	ld	r10, Z
    14d4:	b1 80       	ldd	r11, Z+1	; 0x01
    14d6:	36 fe       	sbrs	r3, 6
    14d8:	03 c0       	rjmp	.+6      	; 0x14e0 <vfprintf+0x142>
    14da:	69 2d       	mov	r22, r9
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	02 c0       	rjmp	.+4      	; 0x14e4 <vfprintf+0x146>
    14e0:	6f ef       	ldi	r22, 0xFF	; 255
    14e2:	7f ef       	ldi	r23, 0xFF	; 255
    14e4:	c5 01       	movw	r24, r10
    14e6:	38 d1       	rcall	.+624    	; 0x1758 <strnlen>
    14e8:	4c 01       	movw	r8, r24
    14ea:	82 01       	movw	r16, r4
    14ec:	f3 2d       	mov	r31, r3
    14ee:	ff 77       	andi	r31, 0x7F	; 127
    14f0:	3f 2e       	mov	r3, r31
    14f2:	15 c0       	rjmp	.+42     	; 0x151e <vfprintf+0x180>
    14f4:	28 01       	movw	r4, r16
    14f6:	22 e0       	ldi	r18, 0x02	; 2
    14f8:	42 0e       	add	r4, r18
    14fa:	51 1c       	adc	r5, r1
    14fc:	f8 01       	movw	r30, r16
    14fe:	a0 80       	ld	r10, Z
    1500:	b1 80       	ldd	r11, Z+1	; 0x01
    1502:	36 fe       	sbrs	r3, 6
    1504:	03 c0       	rjmp	.+6      	; 0x150c <vfprintf+0x16e>
    1506:	69 2d       	mov	r22, r9
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	02 c0       	rjmp	.+4      	; 0x1510 <vfprintf+0x172>
    150c:	6f ef       	ldi	r22, 0xFF	; 255
    150e:	7f ef       	ldi	r23, 0xFF	; 255
    1510:	c5 01       	movw	r24, r10
    1512:	17 d1       	rcall	.+558    	; 0x1742 <strnlen_P>
    1514:	4c 01       	movw	r8, r24
    1516:	f3 2d       	mov	r31, r3
    1518:	f0 68       	ori	r31, 0x80	; 128
    151a:	3f 2e       	mov	r3, r31
    151c:	82 01       	movw	r16, r4
    151e:	33 fc       	sbrc	r3, 3
    1520:	19 c0       	rjmp	.+50     	; 0x1554 <vfprintf+0x1b6>
    1522:	82 2d       	mov	r24, r2
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	88 16       	cp	r8, r24
    1528:	99 06       	cpc	r9, r25
    152a:	a0 f4       	brcc	.+40     	; 0x1554 <vfprintf+0x1b6>
    152c:	b6 01       	movw	r22, r12
    152e:	80 e2       	ldi	r24, 0x20	; 32
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	1d d1       	rcall	.+570    	; 0x176e <fputc>
    1534:	2a 94       	dec	r2
    1536:	f5 cf       	rjmp	.-22     	; 0x1522 <vfprintf+0x184>
    1538:	f5 01       	movw	r30, r10
    153a:	37 fc       	sbrc	r3, 7
    153c:	85 91       	lpm	r24, Z+
    153e:	37 fe       	sbrs	r3, 7
    1540:	81 91       	ld	r24, Z+
    1542:	5f 01       	movw	r10, r30
    1544:	b6 01       	movw	r22, r12
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	12 d1       	rcall	.+548    	; 0x176e <fputc>
    154a:	21 10       	cpse	r2, r1
    154c:	2a 94       	dec	r2
    154e:	21 e0       	ldi	r18, 0x01	; 1
    1550:	82 1a       	sub	r8, r18
    1552:	91 08       	sbc	r9, r1
    1554:	81 14       	cp	r8, r1
    1556:	91 04       	cpc	r9, r1
    1558:	79 f7       	brne	.-34     	; 0x1538 <vfprintf+0x19a>
    155a:	e1 c0       	rjmp	.+450    	; 0x171e <vfprintf+0x380>
    155c:	84 36       	cpi	r24, 0x64	; 100
    155e:	11 f0       	breq	.+4      	; 0x1564 <vfprintf+0x1c6>
    1560:	89 36       	cpi	r24, 0x69	; 105
    1562:	39 f5       	brne	.+78     	; 0x15b2 <vfprintf+0x214>
    1564:	f8 01       	movw	r30, r16
    1566:	37 fe       	sbrs	r3, 7
    1568:	07 c0       	rjmp	.+14     	; 0x1578 <vfprintf+0x1da>
    156a:	60 81       	ld	r22, Z
    156c:	71 81       	ldd	r23, Z+1	; 0x01
    156e:	82 81       	ldd	r24, Z+2	; 0x02
    1570:	93 81       	ldd	r25, Z+3	; 0x03
    1572:	0c 5f       	subi	r16, 0xFC	; 252
    1574:	1f 4f       	sbci	r17, 0xFF	; 255
    1576:	08 c0       	rjmp	.+16     	; 0x1588 <vfprintf+0x1ea>
    1578:	60 81       	ld	r22, Z
    157a:	71 81       	ldd	r23, Z+1	; 0x01
    157c:	07 2e       	mov	r0, r23
    157e:	00 0c       	add	r0, r0
    1580:	88 0b       	sbc	r24, r24
    1582:	99 0b       	sbc	r25, r25
    1584:	0e 5f       	subi	r16, 0xFE	; 254
    1586:	1f 4f       	sbci	r17, 0xFF	; 255
    1588:	f3 2d       	mov	r31, r3
    158a:	ff 76       	andi	r31, 0x6F	; 111
    158c:	3f 2e       	mov	r3, r31
    158e:	97 ff       	sbrs	r25, 7
    1590:	09 c0       	rjmp	.+18     	; 0x15a4 <vfprintf+0x206>
    1592:	90 95       	com	r25
    1594:	80 95       	com	r24
    1596:	70 95       	com	r23
    1598:	61 95       	neg	r22
    159a:	7f 4f       	sbci	r23, 0xFF	; 255
    159c:	8f 4f       	sbci	r24, 0xFF	; 255
    159e:	9f 4f       	sbci	r25, 0xFF	; 255
    15a0:	f0 68       	ori	r31, 0x80	; 128
    15a2:	3f 2e       	mov	r3, r31
    15a4:	2a e0       	ldi	r18, 0x0A	; 10
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	a3 01       	movw	r20, r6
    15aa:	1d d1       	rcall	.+570    	; 0x17e6 <__ultoa_invert>
    15ac:	88 2e       	mov	r8, r24
    15ae:	86 18       	sub	r8, r6
    15b0:	44 c0       	rjmp	.+136    	; 0x163a <vfprintf+0x29c>
    15b2:	85 37       	cpi	r24, 0x75	; 117
    15b4:	31 f4       	brne	.+12     	; 0x15c2 <vfprintf+0x224>
    15b6:	23 2d       	mov	r18, r3
    15b8:	2f 7e       	andi	r18, 0xEF	; 239
    15ba:	b2 2e       	mov	r11, r18
    15bc:	2a e0       	ldi	r18, 0x0A	; 10
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	25 c0       	rjmp	.+74     	; 0x160c <vfprintf+0x26e>
    15c2:	93 2d       	mov	r25, r3
    15c4:	99 7f       	andi	r25, 0xF9	; 249
    15c6:	b9 2e       	mov	r11, r25
    15c8:	8f 36       	cpi	r24, 0x6F	; 111
    15ca:	c1 f0       	breq	.+48     	; 0x15fc <vfprintf+0x25e>
    15cc:	18 f4       	brcc	.+6      	; 0x15d4 <vfprintf+0x236>
    15ce:	88 35       	cpi	r24, 0x58	; 88
    15d0:	79 f0       	breq	.+30     	; 0x15f0 <vfprintf+0x252>
    15d2:	ae c0       	rjmp	.+348    	; 0x1730 <vfprintf+0x392>
    15d4:	80 37       	cpi	r24, 0x70	; 112
    15d6:	19 f0       	breq	.+6      	; 0x15de <vfprintf+0x240>
    15d8:	88 37       	cpi	r24, 0x78	; 120
    15da:	21 f0       	breq	.+8      	; 0x15e4 <vfprintf+0x246>
    15dc:	a9 c0       	rjmp	.+338    	; 0x1730 <vfprintf+0x392>
    15de:	e9 2f       	mov	r30, r25
    15e0:	e0 61       	ori	r30, 0x10	; 16
    15e2:	be 2e       	mov	r11, r30
    15e4:	b4 fe       	sbrs	r11, 4
    15e6:	0d c0       	rjmp	.+26     	; 0x1602 <vfprintf+0x264>
    15e8:	fb 2d       	mov	r31, r11
    15ea:	f4 60       	ori	r31, 0x04	; 4
    15ec:	bf 2e       	mov	r11, r31
    15ee:	09 c0       	rjmp	.+18     	; 0x1602 <vfprintf+0x264>
    15f0:	34 fe       	sbrs	r3, 4
    15f2:	0a c0       	rjmp	.+20     	; 0x1608 <vfprintf+0x26a>
    15f4:	29 2f       	mov	r18, r25
    15f6:	26 60       	ori	r18, 0x06	; 6
    15f8:	b2 2e       	mov	r11, r18
    15fa:	06 c0       	rjmp	.+12     	; 0x1608 <vfprintf+0x26a>
    15fc:	28 e0       	ldi	r18, 0x08	; 8
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	05 c0       	rjmp	.+10     	; 0x160c <vfprintf+0x26e>
    1602:	20 e1       	ldi	r18, 0x10	; 16
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	02 c0       	rjmp	.+4      	; 0x160c <vfprintf+0x26e>
    1608:	20 e1       	ldi	r18, 0x10	; 16
    160a:	32 e0       	ldi	r19, 0x02	; 2
    160c:	f8 01       	movw	r30, r16
    160e:	b7 fe       	sbrs	r11, 7
    1610:	07 c0       	rjmp	.+14     	; 0x1620 <vfprintf+0x282>
    1612:	60 81       	ld	r22, Z
    1614:	71 81       	ldd	r23, Z+1	; 0x01
    1616:	82 81       	ldd	r24, Z+2	; 0x02
    1618:	93 81       	ldd	r25, Z+3	; 0x03
    161a:	0c 5f       	subi	r16, 0xFC	; 252
    161c:	1f 4f       	sbci	r17, 0xFF	; 255
    161e:	06 c0       	rjmp	.+12     	; 0x162c <vfprintf+0x28e>
    1620:	60 81       	ld	r22, Z
    1622:	71 81       	ldd	r23, Z+1	; 0x01
    1624:	80 e0       	ldi	r24, 0x00	; 0
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	0e 5f       	subi	r16, 0xFE	; 254
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	a3 01       	movw	r20, r6
    162e:	db d0       	rcall	.+438    	; 0x17e6 <__ultoa_invert>
    1630:	88 2e       	mov	r8, r24
    1632:	86 18       	sub	r8, r6
    1634:	fb 2d       	mov	r31, r11
    1636:	ff 77       	andi	r31, 0x7F	; 127
    1638:	3f 2e       	mov	r3, r31
    163a:	36 fe       	sbrs	r3, 6
    163c:	0d c0       	rjmp	.+26     	; 0x1658 <vfprintf+0x2ba>
    163e:	23 2d       	mov	r18, r3
    1640:	2e 7f       	andi	r18, 0xFE	; 254
    1642:	a2 2e       	mov	r10, r18
    1644:	89 14       	cp	r8, r9
    1646:	58 f4       	brcc	.+22     	; 0x165e <vfprintf+0x2c0>
    1648:	34 fe       	sbrs	r3, 4
    164a:	0b c0       	rjmp	.+22     	; 0x1662 <vfprintf+0x2c4>
    164c:	32 fc       	sbrc	r3, 2
    164e:	09 c0       	rjmp	.+18     	; 0x1662 <vfprintf+0x2c4>
    1650:	83 2d       	mov	r24, r3
    1652:	8e 7e       	andi	r24, 0xEE	; 238
    1654:	a8 2e       	mov	r10, r24
    1656:	05 c0       	rjmp	.+10     	; 0x1662 <vfprintf+0x2c4>
    1658:	b8 2c       	mov	r11, r8
    165a:	a3 2c       	mov	r10, r3
    165c:	03 c0       	rjmp	.+6      	; 0x1664 <vfprintf+0x2c6>
    165e:	b8 2c       	mov	r11, r8
    1660:	01 c0       	rjmp	.+2      	; 0x1664 <vfprintf+0x2c6>
    1662:	b9 2c       	mov	r11, r9
    1664:	a4 fe       	sbrs	r10, 4
    1666:	0f c0       	rjmp	.+30     	; 0x1686 <vfprintf+0x2e8>
    1668:	fe 01       	movw	r30, r28
    166a:	e8 0d       	add	r30, r8
    166c:	f1 1d       	adc	r31, r1
    166e:	80 81       	ld	r24, Z
    1670:	80 33       	cpi	r24, 0x30	; 48
    1672:	21 f4       	brne	.+8      	; 0x167c <vfprintf+0x2de>
    1674:	9a 2d       	mov	r25, r10
    1676:	99 7e       	andi	r25, 0xE9	; 233
    1678:	a9 2e       	mov	r10, r25
    167a:	09 c0       	rjmp	.+18     	; 0x168e <vfprintf+0x2f0>
    167c:	a2 fe       	sbrs	r10, 2
    167e:	06 c0       	rjmp	.+12     	; 0x168c <vfprintf+0x2ee>
    1680:	b3 94       	inc	r11
    1682:	b3 94       	inc	r11
    1684:	04 c0       	rjmp	.+8      	; 0x168e <vfprintf+0x2f0>
    1686:	8a 2d       	mov	r24, r10
    1688:	86 78       	andi	r24, 0x86	; 134
    168a:	09 f0       	breq	.+2      	; 0x168e <vfprintf+0x2f0>
    168c:	b3 94       	inc	r11
    168e:	a3 fc       	sbrc	r10, 3
    1690:	10 c0       	rjmp	.+32     	; 0x16b2 <vfprintf+0x314>
    1692:	a0 fe       	sbrs	r10, 0
    1694:	06 c0       	rjmp	.+12     	; 0x16a2 <vfprintf+0x304>
    1696:	b2 14       	cp	r11, r2
    1698:	80 f4       	brcc	.+32     	; 0x16ba <vfprintf+0x31c>
    169a:	28 0c       	add	r2, r8
    169c:	92 2c       	mov	r9, r2
    169e:	9b 18       	sub	r9, r11
    16a0:	0d c0       	rjmp	.+26     	; 0x16bc <vfprintf+0x31e>
    16a2:	b2 14       	cp	r11, r2
    16a4:	58 f4       	brcc	.+22     	; 0x16bc <vfprintf+0x31e>
    16a6:	b6 01       	movw	r22, r12
    16a8:	80 e2       	ldi	r24, 0x20	; 32
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	60 d0       	rcall	.+192    	; 0x176e <fputc>
    16ae:	b3 94       	inc	r11
    16b0:	f8 cf       	rjmp	.-16     	; 0x16a2 <vfprintf+0x304>
    16b2:	b2 14       	cp	r11, r2
    16b4:	18 f4       	brcc	.+6      	; 0x16bc <vfprintf+0x31e>
    16b6:	2b 18       	sub	r2, r11
    16b8:	02 c0       	rjmp	.+4      	; 0x16be <vfprintf+0x320>
    16ba:	98 2c       	mov	r9, r8
    16bc:	21 2c       	mov	r2, r1
    16be:	a4 fe       	sbrs	r10, 4
    16c0:	0f c0       	rjmp	.+30     	; 0x16e0 <vfprintf+0x342>
    16c2:	b6 01       	movw	r22, r12
    16c4:	80 e3       	ldi	r24, 0x30	; 48
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	52 d0       	rcall	.+164    	; 0x176e <fputc>
    16ca:	a2 fe       	sbrs	r10, 2
    16cc:	16 c0       	rjmp	.+44     	; 0x16fa <vfprintf+0x35c>
    16ce:	a1 fc       	sbrc	r10, 1
    16d0:	03 c0       	rjmp	.+6      	; 0x16d8 <vfprintf+0x33a>
    16d2:	88 e7       	ldi	r24, 0x78	; 120
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	02 c0       	rjmp	.+4      	; 0x16dc <vfprintf+0x33e>
    16d8:	88 e5       	ldi	r24, 0x58	; 88
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	b6 01       	movw	r22, r12
    16de:	0c c0       	rjmp	.+24     	; 0x16f8 <vfprintf+0x35a>
    16e0:	8a 2d       	mov	r24, r10
    16e2:	86 78       	andi	r24, 0x86	; 134
    16e4:	51 f0       	breq	.+20     	; 0x16fa <vfprintf+0x35c>
    16e6:	a1 fe       	sbrs	r10, 1
    16e8:	02 c0       	rjmp	.+4      	; 0x16ee <vfprintf+0x350>
    16ea:	8b e2       	ldi	r24, 0x2B	; 43
    16ec:	01 c0       	rjmp	.+2      	; 0x16f0 <vfprintf+0x352>
    16ee:	80 e2       	ldi	r24, 0x20	; 32
    16f0:	a7 fc       	sbrc	r10, 7
    16f2:	8d e2       	ldi	r24, 0x2D	; 45
    16f4:	b6 01       	movw	r22, r12
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	3a d0       	rcall	.+116    	; 0x176e <fputc>
    16fa:	89 14       	cp	r8, r9
    16fc:	30 f4       	brcc	.+12     	; 0x170a <vfprintf+0x36c>
    16fe:	b6 01       	movw	r22, r12
    1700:	80 e3       	ldi	r24, 0x30	; 48
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	34 d0       	rcall	.+104    	; 0x176e <fputc>
    1706:	9a 94       	dec	r9
    1708:	f8 cf       	rjmp	.-16     	; 0x16fa <vfprintf+0x35c>
    170a:	8a 94       	dec	r8
    170c:	f3 01       	movw	r30, r6
    170e:	e8 0d       	add	r30, r8
    1710:	f1 1d       	adc	r31, r1
    1712:	80 81       	ld	r24, Z
    1714:	b6 01       	movw	r22, r12
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	2a d0       	rcall	.+84     	; 0x176e <fputc>
    171a:	81 10       	cpse	r8, r1
    171c:	f6 cf       	rjmp	.-20     	; 0x170a <vfprintf+0x36c>
    171e:	22 20       	and	r2, r2
    1720:	09 f4       	brne	.+2      	; 0x1724 <vfprintf+0x386>
    1722:	4e ce       	rjmp	.-868    	; 0x13c0 <vfprintf+0x22>
    1724:	b6 01       	movw	r22, r12
    1726:	80 e2       	ldi	r24, 0x20	; 32
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	21 d0       	rcall	.+66     	; 0x176e <fputc>
    172c:	2a 94       	dec	r2
    172e:	f7 cf       	rjmp	.-18     	; 0x171e <vfprintf+0x380>
    1730:	f6 01       	movw	r30, r12
    1732:	86 81       	ldd	r24, Z+6	; 0x06
    1734:	97 81       	ldd	r25, Z+7	; 0x07
    1736:	02 c0       	rjmp	.+4      	; 0x173c <vfprintf+0x39e>
    1738:	8f ef       	ldi	r24, 0xFF	; 255
    173a:	9f ef       	ldi	r25, 0xFF	; 255
    173c:	2b 96       	adiw	r28, 0x0b	; 11
    173e:	e2 e1       	ldi	r30, 0x12	; 18
    1740:	cc c0       	rjmp	.+408    	; 0x18da <__epilogue_restores__>

00001742 <strnlen_P>:
    1742:	fc 01       	movw	r30, r24
    1744:	05 90       	lpm	r0, Z+
    1746:	61 50       	subi	r22, 0x01	; 1
    1748:	70 40       	sbci	r23, 0x00	; 0
    174a:	01 10       	cpse	r0, r1
    174c:	d8 f7       	brcc	.-10     	; 0x1744 <strnlen_P+0x2>
    174e:	80 95       	com	r24
    1750:	90 95       	com	r25
    1752:	8e 0f       	add	r24, r30
    1754:	9f 1f       	adc	r25, r31
    1756:	08 95       	ret

00001758 <strnlen>:
    1758:	fc 01       	movw	r30, r24
    175a:	61 50       	subi	r22, 0x01	; 1
    175c:	70 40       	sbci	r23, 0x00	; 0
    175e:	01 90       	ld	r0, Z+
    1760:	01 10       	cpse	r0, r1
    1762:	d8 f7       	brcc	.-10     	; 0x175a <strnlen+0x2>
    1764:	80 95       	com	r24
    1766:	90 95       	com	r25
    1768:	8e 0f       	add	r24, r30
    176a:	9f 1f       	adc	r25, r31
    176c:	08 95       	ret

0000176e <fputc>:
    176e:	0f 93       	push	r16
    1770:	1f 93       	push	r17
    1772:	cf 93       	push	r28
    1774:	df 93       	push	r29
    1776:	fb 01       	movw	r30, r22
    1778:	23 81       	ldd	r18, Z+3	; 0x03
    177a:	21 fd       	sbrc	r18, 1
    177c:	03 c0       	rjmp	.+6      	; 0x1784 <fputc+0x16>
    177e:	8f ef       	ldi	r24, 0xFF	; 255
    1780:	9f ef       	ldi	r25, 0xFF	; 255
    1782:	2c c0       	rjmp	.+88     	; 0x17dc <fputc+0x6e>
    1784:	22 ff       	sbrs	r18, 2
    1786:	16 c0       	rjmp	.+44     	; 0x17b4 <fputc+0x46>
    1788:	46 81       	ldd	r20, Z+6	; 0x06
    178a:	57 81       	ldd	r21, Z+7	; 0x07
    178c:	24 81       	ldd	r18, Z+4	; 0x04
    178e:	35 81       	ldd	r19, Z+5	; 0x05
    1790:	42 17       	cp	r20, r18
    1792:	53 07       	cpc	r21, r19
    1794:	44 f4       	brge	.+16     	; 0x17a6 <fputc+0x38>
    1796:	a0 81       	ld	r26, Z
    1798:	b1 81       	ldd	r27, Z+1	; 0x01
    179a:	9d 01       	movw	r18, r26
    179c:	2f 5f       	subi	r18, 0xFF	; 255
    179e:	3f 4f       	sbci	r19, 0xFF	; 255
    17a0:	31 83       	std	Z+1, r19	; 0x01
    17a2:	20 83       	st	Z, r18
    17a4:	8c 93       	st	X, r24
    17a6:	26 81       	ldd	r18, Z+6	; 0x06
    17a8:	37 81       	ldd	r19, Z+7	; 0x07
    17aa:	2f 5f       	subi	r18, 0xFF	; 255
    17ac:	3f 4f       	sbci	r19, 0xFF	; 255
    17ae:	37 83       	std	Z+7, r19	; 0x07
    17b0:	26 83       	std	Z+6, r18	; 0x06
    17b2:	14 c0       	rjmp	.+40     	; 0x17dc <fputc+0x6e>
    17b4:	8b 01       	movw	r16, r22
    17b6:	ec 01       	movw	r28, r24
    17b8:	fb 01       	movw	r30, r22
    17ba:	00 84       	ldd	r0, Z+8	; 0x08
    17bc:	f1 85       	ldd	r31, Z+9	; 0x09
    17be:	e0 2d       	mov	r30, r0
    17c0:	09 95       	icall
    17c2:	89 2b       	or	r24, r25
    17c4:	e1 f6       	brne	.-72     	; 0x177e <fputc+0x10>
    17c6:	d8 01       	movw	r26, r16
    17c8:	16 96       	adiw	r26, 0x06	; 6
    17ca:	8d 91       	ld	r24, X+
    17cc:	9c 91       	ld	r25, X
    17ce:	17 97       	sbiw	r26, 0x07	; 7
    17d0:	01 96       	adiw	r24, 0x01	; 1
    17d2:	17 96       	adiw	r26, 0x07	; 7
    17d4:	9c 93       	st	X, r25
    17d6:	8e 93       	st	-X, r24
    17d8:	16 97       	sbiw	r26, 0x06	; 6
    17da:	ce 01       	movw	r24, r28
    17dc:	df 91       	pop	r29
    17de:	cf 91       	pop	r28
    17e0:	1f 91       	pop	r17
    17e2:	0f 91       	pop	r16
    17e4:	08 95       	ret

000017e6 <__ultoa_invert>:
    17e6:	fa 01       	movw	r30, r20
    17e8:	aa 27       	eor	r26, r26
    17ea:	28 30       	cpi	r18, 0x08	; 8
    17ec:	51 f1       	breq	.+84     	; 0x1842 <__ultoa_invert+0x5c>
    17ee:	20 31       	cpi	r18, 0x10	; 16
    17f0:	81 f1       	breq	.+96     	; 0x1852 <__ultoa_invert+0x6c>
    17f2:	e8 94       	clt
    17f4:	6f 93       	push	r22
    17f6:	6e 7f       	andi	r22, 0xFE	; 254
    17f8:	6e 5f       	subi	r22, 0xFE	; 254
    17fa:	7f 4f       	sbci	r23, 0xFF	; 255
    17fc:	8f 4f       	sbci	r24, 0xFF	; 255
    17fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1800:	af 4f       	sbci	r26, 0xFF	; 255
    1802:	b1 e0       	ldi	r27, 0x01	; 1
    1804:	3e d0       	rcall	.+124    	; 0x1882 <__ultoa_invert+0x9c>
    1806:	b4 e0       	ldi	r27, 0x04	; 4
    1808:	3c d0       	rcall	.+120    	; 0x1882 <__ultoa_invert+0x9c>
    180a:	67 0f       	add	r22, r23
    180c:	78 1f       	adc	r23, r24
    180e:	89 1f       	adc	r24, r25
    1810:	9a 1f       	adc	r25, r26
    1812:	a1 1d       	adc	r26, r1
    1814:	68 0f       	add	r22, r24
    1816:	79 1f       	adc	r23, r25
    1818:	8a 1f       	adc	r24, r26
    181a:	91 1d       	adc	r25, r1
    181c:	a1 1d       	adc	r26, r1
    181e:	6a 0f       	add	r22, r26
    1820:	71 1d       	adc	r23, r1
    1822:	81 1d       	adc	r24, r1
    1824:	91 1d       	adc	r25, r1
    1826:	a1 1d       	adc	r26, r1
    1828:	20 d0       	rcall	.+64     	; 0x186a <__ultoa_invert+0x84>
    182a:	09 f4       	brne	.+2      	; 0x182e <__ultoa_invert+0x48>
    182c:	68 94       	set
    182e:	3f 91       	pop	r19
    1830:	2a e0       	ldi	r18, 0x0A	; 10
    1832:	26 9f       	mul	r18, r22
    1834:	11 24       	eor	r1, r1
    1836:	30 19       	sub	r19, r0
    1838:	30 5d       	subi	r19, 0xD0	; 208
    183a:	31 93       	st	Z+, r19
    183c:	de f6       	brtc	.-74     	; 0x17f4 <__ultoa_invert+0xe>
    183e:	cf 01       	movw	r24, r30
    1840:	08 95       	ret
    1842:	46 2f       	mov	r20, r22
    1844:	47 70       	andi	r20, 0x07	; 7
    1846:	40 5d       	subi	r20, 0xD0	; 208
    1848:	41 93       	st	Z+, r20
    184a:	b3 e0       	ldi	r27, 0x03	; 3
    184c:	0f d0       	rcall	.+30     	; 0x186c <__ultoa_invert+0x86>
    184e:	c9 f7       	brne	.-14     	; 0x1842 <__ultoa_invert+0x5c>
    1850:	f6 cf       	rjmp	.-20     	; 0x183e <__ultoa_invert+0x58>
    1852:	46 2f       	mov	r20, r22
    1854:	4f 70       	andi	r20, 0x0F	; 15
    1856:	40 5d       	subi	r20, 0xD0	; 208
    1858:	4a 33       	cpi	r20, 0x3A	; 58
    185a:	18 f0       	brcs	.+6      	; 0x1862 <__ultoa_invert+0x7c>
    185c:	49 5d       	subi	r20, 0xD9	; 217
    185e:	31 fd       	sbrc	r19, 1
    1860:	40 52       	subi	r20, 0x20	; 32
    1862:	41 93       	st	Z+, r20
    1864:	02 d0       	rcall	.+4      	; 0x186a <__ultoa_invert+0x84>
    1866:	a9 f7       	brne	.-22     	; 0x1852 <__ultoa_invert+0x6c>
    1868:	ea cf       	rjmp	.-44     	; 0x183e <__ultoa_invert+0x58>
    186a:	b4 e0       	ldi	r27, 0x04	; 4
    186c:	a6 95       	lsr	r26
    186e:	97 95       	ror	r25
    1870:	87 95       	ror	r24
    1872:	77 95       	ror	r23
    1874:	67 95       	ror	r22
    1876:	ba 95       	dec	r27
    1878:	c9 f7       	brne	.-14     	; 0x186c <__ultoa_invert+0x86>
    187a:	00 97       	sbiw	r24, 0x00	; 0
    187c:	61 05       	cpc	r22, r1
    187e:	71 05       	cpc	r23, r1
    1880:	08 95       	ret
    1882:	9b 01       	movw	r18, r22
    1884:	ac 01       	movw	r20, r24
    1886:	0a 2e       	mov	r0, r26
    1888:	06 94       	lsr	r0
    188a:	57 95       	ror	r21
    188c:	47 95       	ror	r20
    188e:	37 95       	ror	r19
    1890:	27 95       	ror	r18
    1892:	ba 95       	dec	r27
    1894:	c9 f7       	brne	.-14     	; 0x1888 <__ultoa_invert+0xa2>
    1896:	62 0f       	add	r22, r18
    1898:	73 1f       	adc	r23, r19
    189a:	84 1f       	adc	r24, r20
    189c:	95 1f       	adc	r25, r21
    189e:	a0 1d       	adc	r26, r0
    18a0:	08 95       	ret

000018a2 <__prologue_saves__>:
    18a2:	2f 92       	push	r2
    18a4:	3f 92       	push	r3
    18a6:	4f 92       	push	r4
    18a8:	5f 92       	push	r5
    18aa:	6f 92       	push	r6
    18ac:	7f 92       	push	r7
    18ae:	8f 92       	push	r8
    18b0:	9f 92       	push	r9
    18b2:	af 92       	push	r10
    18b4:	bf 92       	push	r11
    18b6:	cf 92       	push	r12
    18b8:	df 92       	push	r13
    18ba:	ef 92       	push	r14
    18bc:	ff 92       	push	r15
    18be:	0f 93       	push	r16
    18c0:	1f 93       	push	r17
    18c2:	cf 93       	push	r28
    18c4:	df 93       	push	r29
    18c6:	cd b7       	in	r28, 0x3d	; 61
    18c8:	de b7       	in	r29, 0x3e	; 62
    18ca:	ca 1b       	sub	r28, r26
    18cc:	db 0b       	sbc	r29, r27
    18ce:	0f b6       	in	r0, 0x3f	; 63
    18d0:	f8 94       	cli
    18d2:	de bf       	out	0x3e, r29	; 62
    18d4:	0f be       	out	0x3f, r0	; 63
    18d6:	cd bf       	out	0x3d, r28	; 61
    18d8:	09 94       	ijmp

000018da <__epilogue_restores__>:
    18da:	2a 88       	ldd	r2, Y+18	; 0x12
    18dc:	39 88       	ldd	r3, Y+17	; 0x11
    18de:	48 88       	ldd	r4, Y+16	; 0x10
    18e0:	5f 84       	ldd	r5, Y+15	; 0x0f
    18e2:	6e 84       	ldd	r6, Y+14	; 0x0e
    18e4:	7d 84       	ldd	r7, Y+13	; 0x0d
    18e6:	8c 84       	ldd	r8, Y+12	; 0x0c
    18e8:	9b 84       	ldd	r9, Y+11	; 0x0b
    18ea:	aa 84       	ldd	r10, Y+10	; 0x0a
    18ec:	b9 84       	ldd	r11, Y+9	; 0x09
    18ee:	c8 84       	ldd	r12, Y+8	; 0x08
    18f0:	df 80       	ldd	r13, Y+7	; 0x07
    18f2:	ee 80       	ldd	r14, Y+6	; 0x06
    18f4:	fd 80       	ldd	r15, Y+5	; 0x05
    18f6:	0c 81       	ldd	r16, Y+4	; 0x04
    18f8:	1b 81       	ldd	r17, Y+3	; 0x03
    18fa:	aa 81       	ldd	r26, Y+2	; 0x02
    18fc:	b9 81       	ldd	r27, Y+1	; 0x01
    18fe:	ce 0f       	add	r28, r30
    1900:	d1 1d       	adc	r29, r1
    1902:	0f b6       	in	r0, 0x3f	; 63
    1904:	f8 94       	cli
    1906:	de bf       	out	0x3e, r29	; 62
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	cd bf       	out	0x3d, r28	; 61
    190c:	ed 01       	movw	r28, r26
    190e:	08 95       	ret

00001910 <_exit>:
    1910:	f8 94       	cli

00001912 <__stop_program>:
    1912:	ff cf       	rjmp	.-2      	; 0x1912 <__stop_program>
